<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[刘江华的博客]]></title>
  <link href="http://yanyaner.com/atom.xml" rel="self"/>
  <link href="http://yanyaner.com/"/>
  <updated>2014-07-22T16:33:20+08:00</updated>
  <id>http://yanyaner.com/</id>
  <author>
    <name><![CDATA[冰雨]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[客户端无状态参数调用实现]]></title>
    <link href="http://yanyaner.com/blog/2014/07/22/security-filter-client-call/"/>
    <updated>2014-07-22T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/07/22/security-filter-client-call</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;我在<a href="http://yanyaner.com/blog/2014/07/20/security-filter-sign/">《服务器端无状态参数验证实现）》</a>中给大家贴出了无状态调用中对数据的验证机制服务器端实现代码，那么，客户端如何去进行调用呢？我同样给大家给出一个客户端调用的登录示例。</p>

<p>&emsp;&emsp;首先将客户端的调用信息放入一个app.properties配置文件中以方便管理维护，内容如下。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>appKey = crm324123123126
</span><span class='line'>appCode = 54dde0994ef4d86cfdf583e6d1384353
</span><span class='line'>callHost = http://www.mywebsite.com/monitorplatform
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;客户端登录代码用到了httpClient，实现如下：<!-- more--></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.annotation.Resource</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.commons.codec.digest.DigestUtils</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.HttpEntity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.HttpResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.NameValuePair</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.client.HttpClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.client.entity.UrlEncodedFormEntity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.client.methods.HttpPost</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.impl.client.DefaultHttpClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.message.BasicNameValuePair</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.util.EntityUtils</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.jackson.map.ObjectMapper</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.slf4j.Logger</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.slf4j.LoggerFactory</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Value</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.stereotype.Service</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.transaction.annotation.Transactional</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.lovo.platform.monitor.model.User</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.lovo.videoplatform.back.service.IUserLoginService</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.lovo.videoplatform.commons.AppConfiger</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.lovo.videoplatform.exception.CallApiErrorException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.lovo.videoplatform.exception.LoginFailExceptions</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.my.ms.framework.persistence.hibernate.IBaseDao</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 用户登录相关业务操作实现</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nd">@Service</span>
</span><span class='line'><span class="nd">@Transactional</span><span class="o">(</span><span class="n">readOnly</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserLoginServiceImpl</span> <span class="kd">implements</span> <span class="n">IUserLoginService</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">LOG</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">UserLoginServiceImpl</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 调用监控系统api核心对象</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">HttpClient</span> <span class="n">httpclient</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultHttpClient</span><span class="o">();</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">IBaseDao</span> <span class="n">hibernateDao</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">AppConfiger</span> <span class="n">config</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="nd">@Transactional</span><span class="o">(</span><span class="n">readOnly</span> <span class="o">=</span> <span class="kc">true</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">User</span> <span class="nf">login</span><span class="o">(</span><span class="n">String</span> <span class="n">userName</span><span class="o">,</span> <span class="n">String</span> <span class="n">password</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="kt">long</span> <span class="n">ts</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">Map</span> <span class="n">signParams</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">();</span>
</span><span class='line'>      <span class="n">signParams</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;logincode&quot;</span><span class="o">,</span> <span class="n">userName</span><span class="o">);</span>
</span><span class='line'>      <span class="n">signParams</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;password&quot;</span><span class="o">,</span> <span class="n">password</span><span class="o">);</span>
</span><span class='line'>      <span class="n">signParams</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;ts&quot;</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">+</span><span class="n">ts</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">String</span> <span class="n">url</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="na">getCallHost</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;/api/&quot;</span> <span class="o">+</span> <span class="n">config</span><span class="o">.</span><span class="na">getAppKey</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;/login&quot;</span><span class="o">;</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">LOG</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&quot;begin call api url:{}&quot;</span> <span class="o">,</span> <span class="n">url</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">HttpPost</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HttpPost</span><span class="o">(</span><span class="n">url</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">List</span><span class="o">&lt;</span><span class="n">NameValuePair</span><span class="o">&gt;</span> <span class="n">params</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">NameValuePair</span><span class="o">&gt;();</span>
</span><span class='line'>          <span class="n">params</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">BasicNameValuePair</span><span class="o">(</span><span class="s">&quot;sign&quot;</span><span class="o">,</span> <span class="n">config</span><span class="o">.</span><span class="na">generateSign</span><span class="o">(</span><span class="n">signParams</span><span class="o">)));</span>
</span><span class='line'>          <span class="n">params</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">BasicNameValuePair</span><span class="o">(</span><span class="s">&quot;ts&quot;</span><span class="o">,</span> <span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="n">ts</span><span class="o">));</span>
</span><span class='line'>          <span class="n">params</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">BasicNameValuePair</span><span class="o">(</span><span class="s">&quot;logincode&quot;</span><span class="o">,</span> <span class="n">userName</span><span class="o">));</span>
</span><span class='line'>          <span class="n">params</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">BasicNameValuePair</span><span class="o">(</span><span class="s">&quot;password&quot;</span><span class="o">,</span> <span class="n">password</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">HttpEntity</span> <span class="n">reqEntity</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UrlEncodedFormEntity</span><span class="o">(</span><span class="n">params</span><span class="o">,</span> <span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="n">request</span><span class="o">.</span><span class="na">setEntity</span><span class="o">(</span><span class="n">reqEntity</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">HttpResponse</span> <span class="n">resp</span> <span class="o">=</span> <span class="n">httpclient</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">resp</span><span class="o">.</span><span class="na">getStatusLine</span><span class="o">().</span><span class="na">getStatusCode</span><span class="o">()</span> <span class="o">!=</span> <span class="mi">200</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">LOG</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&quot;call login api error, http statusCode is:{}&quot;</span> <span class="o">,</span> <span class="n">resp</span><span class="o">.</span><span class="na">getStatusLine</span><span class="o">().</span><span class="na">getStatusCode</span><span class="o">());</span>
</span><span class='line'>              <span class="k">throw</span> <span class="k">new</span> <span class="nf">CallApiErrorException</span><span class="o">(</span><span class="s">&quot;调用监控系统登录api错误，http状态码是：&quot;</span> <span class="o">+</span> <span class="n">resp</span><span class="o">.</span><span class="na">getStatusLine</span><span class="o">().</span><span class="na">getStatusCode</span><span class="o">());</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="c1">//解析内容</span>
</span><span class='line'>          <span class="n">String</span> <span class="n">content</span> <span class="o">=</span> <span class="n">EntityUtils</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">resp</span><span class="o">.</span><span class="na">getEntity</span><span class="o">(),</span> <span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="n">ObjectMapper</span> <span class="n">om</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectMapper</span><span class="o">();</span>
</span><span class='line'>          <span class="n">Map</span> <span class="n">result</span> <span class="o">=</span> <span class="n">om</span><span class="o">.</span><span class="na">readValue</span><span class="o">(</span><span class="n">content</span><span class="o">,</span> <span class="n">HashMap</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="kt">int</span> <span class="n">code</span> <span class="o">=</span> <span class="o">(</span><span class="n">Integer</span><span class="o">)</span><span class="n">result</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;code&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">code</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">Map</span> <span class="n">data</span> <span class="o">=</span> <span class="o">(</span><span class="n">Map</span><span class="o">)</span><span class="n">result</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;data&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="n">User</span> <span class="n">user</span> <span class="o">=</span> <span class="n">hibernateDao</span><span class="o">.</span><span class="na">queryEntityById</span><span class="o">(</span><span class="n">User</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="o">(</span><span class="n">Integer</span><span class="o">)</span><span class="n">data</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;id&quot;</span><span class="o">));</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">user</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">LOG</span><span class="o">.</span><span class="na">warn</span><span class="o">(</span><span class="s">&quot;call login api error, exception is:{}&quot;</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
</span><span class='line'>          <span class="k">throw</span> <span class="k">new</span> <span class="nf">LoginFailExceptions</span><span class="o">(</span><span class="s">&quot;调用第三方登录api出错！&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">throw</span> <span class="k">new</span> <span class="nf">LoginFailExceptions</span><span class="o">(</span><span class="s">&quot;用户名或密码错，用户登录失败！&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//...........其它代码略去</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;上面代码中的AppConfiger，将会从properties中读取配置文件中的信息，同时这个类中也封装了生成数据签名sign的方法，以方便客户端的调用，具体代码如下。：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 应用程序的一些配置信息</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nd">@Component</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppConfiger</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 调用目标服务器地址</span>
</span><span class='line'>  <span class="nd">@Value</span><span class="o">(</span><span class="s">&quot;#{configProperties[&#39;callHost&#39;]}&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">callHost</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 本应用的code</span>
</span><span class='line'>  <span class="nd">@Value</span><span class="o">(</span><span class="s">&quot;#{configProperties[&#39;appKey&#39;]}&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">appKey</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 本应用的编码(生成数字签名时的私有编码串)</span>
</span><span class='line'>  <span class="nd">@Value</span><span class="o">(</span><span class="s">&quot;#{configProperties[&#39;appCode&#39;]}&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">appCode</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getCallHost</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">callHost</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getAppKey</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">appKey</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getAppCode</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">appCode</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 生成签名加密字符串</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @param params 调用服务器要传递的参数，不包含sign</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">generateSign</span><span class="o">(</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">keys</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;(</span><span class="n">params</span><span class="o">.</span><span class="na">keySet</span><span class="o">());</span>
</span><span class='line'>      <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">keys</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">keys</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">String</span> <span class="n">key</span> <span class="o">=</span> <span class="n">keys</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>          <span class="n">String</span> <span class="n">value</span> <span class="o">=</span> <span class="n">params</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">keys</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span><span class="c1">// 拼接时，不包括最后一个&amp;字符</span>
</span><span class='line'>              <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">key</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;=&quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">key</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;=&quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">value</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;&amp;&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">DigestUtils</span><span class="o">.</span><span class="na">md5Hex</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">getAppCode</span><span class="o">());</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;@Value将读取容器环境中properties读取的信息，在spring的配置文件中，要有类似下面的bean配置，注意其中加载了app.properties文件，这个bean的id要和@Value注解中的名称相匹配哦。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;!--</span> <span class="err">配置文件信息</span> <span class="o">--&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">bean</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;configProperties&quot;</span>
</span><span class='line'>  <span class="n">class</span><span class="o">=</span><span class="s">&quot;org.springframework.beans.factory.config.PropertiesFactoryBean&quot;</span>
</span><span class='line'>  <span class="n">lazy</span><span class="o">-</span><span class="n">init</span><span class="o">=</span><span class="s">&quot;false&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">property</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;locations&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">list</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">value</span><span class="o">&gt;</span><span class="nl">classpath:</span><span class="n">database</span><span class="o">.</span><span class="na">properties</span><span class="o">&lt;/</span><span class="n">value</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">value</span><span class="o">&gt;</span><span class="nl">classpath:</span><span class="n">hibernate</span><span class="o">-</span><span class="n">config</span><span class="o">.</span><span class="na">properties</span><span class="o">&lt;/</span><span class="n">value</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">value</span><span class="o">&gt;</span><span class="nl">classpath:</span><span class="n">app</span><span class="o">.</span><span class="na">properties</span><span class="o">&lt;/</span><span class="n">value</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;/</span><span class="n">list</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;/</span><span class="n">property</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">bean</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;好了，先介绍到此，希望我的这两篇文章能够给你带来帮助。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[服务器端无状态参数验证实现]]></title>
    <link href="http://yanyaner.com/blog/2014/07/20/security-filter-sign/"/>
    <updated>2014-07-20T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/07/20/security-filter-sign</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;我在<a href="http://yanyaner.com/blog/2014/04/16/security4/">《Java安全那些事之四（无状态安全认证）》</a>中提到了在无状态安全认证中，对数据签名的验证可以考虑通过AOP或filter的方式专门提取到了一个层中去处理，很多人在问我有没有源代码，现在贴出请大家参考。</p>

<p>&emsp;&emsp;当我们有了这个独立的层次，我们在应用控制器中就不再需求做这方面的检测了，着实方便了许多。<!-- more--></p>

<figure class='code'><figcaption><span>ApiSeccurityCheckFilter.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 无状态签名、超时检测过滤器实现</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Component</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ApiSeccurityCheckFilter</span> <span class="kd">extends</span> <span class="n">OncePerRequestFilter</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>
</span><span class='line'>  <span class="c1">//默认调用超时（单位 ms）</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">API_CALL_TIME_OUT</span> <span class="o">=</span> <span class="mi">500</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">LOG</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">ApiSeccurityCheckFilter</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//调用超时（单位 ms）</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">api_call_timeout</span> <span class="o">=</span> <span class="n">API_CALL_TIME_OUT</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">IAppManagementService</span> <span class="n">ams</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">JsonMapper</span> <span class="n">jm</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doFilterInternal</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span>
</span><span class='line'>          <span class="n">HttpServletResponse</span> <span class="n">resp</span><span class="o">,</span> <span class="n">FilterChain</span> <span class="n">fc</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">ServletException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// 取到的形如： /myplatform/api/crm324123123126/login</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="na">getRequestURI</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="n">uri</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="s">&quot;/api/&quot;</span><span class="o">)</span> <span class="o">+</span> <span class="mi">5</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">appKey</span> <span class="o">=</span> <span class="n">uri</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">start</span><span class="o">,</span> <span class="n">start</span> <span class="o">+</span> <span class="mi">15</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>
</span><span class='line'>      <span class="c1">//（1）检测appKey是否授权</span>
</span><span class='line'>      <span class="n">App</span> <span class="n">app</span> <span class="o">=</span> <span class="n">ams</span><span class="o">.</span><span class="na">findAppByKey</span><span class="o">(</span><span class="n">appKey</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">app</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">LOG</span><span class="o">.</span><span class="na">isDebugEnabled</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">LOG</span><span class="o">.</span><span class="na">debug</span><span class="o">(</span><span class="s">&quot;appKey {} error, app is null!&quot;</span><span class="o">,</span> <span class="n">appKey</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">RespMessage</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RespMessage</span><span class="o">();</span>
</span><span class='line'>          <span class="n">message</span><span class="o">.</span><span class="na">setCode</span><span class="o">(</span><span class="n">RespMessage</span><span class="o">.</span><span class="na">API_PARAM_ERROR</span><span class="o">);</span>
</span><span class='line'>          <span class="n">message</span><span class="o">.</span><span class="na">setMsg</span><span class="o">(</span><span class="s">&quot;app调用未经授权！&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="n">jm</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="n">resp</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">(),</span> <span class="n">message</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//（2）进行必要参数的验证</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">client_sign</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">&quot;sign&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">client_ts</span>  <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">&quot;ts&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">client_sign</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="s">&quot;&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">client_sign</span><span class="o">.</span><span class="na">trim</span><span class="o">())</span> <span class="o">||</span>
</span><span class='line'>          <span class="n">client_ts</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="s">&quot;&quot;</span>   <span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">client_ts</span><span class="o">.</span><span class="na">trim</span><span class="o">())</span>
</span><span class='line'>              <span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">RespMessage</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RespMessage</span><span class="o">();</span>
</span><span class='line'>          <span class="n">message</span><span class="o">.</span><span class="na">setCode</span><span class="o">(</span><span class="n">RespMessage</span><span class="o">.</span><span class="na">API_PARAM_ERROR</span><span class="o">);</span>
</span><span class='line'>          <span class="n">message</span><span class="o">.</span><span class="na">setMsg</span><span class="o">(</span><span class="s">&quot;必须提供sign, ts参数项！&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="n">jm</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="n">resp</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">(),</span> <span class="n">message</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//（3）进行数据签字验证</span>
</span><span class='line'>      <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">keys</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">Enumeration</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">params</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="na">getParameterNames</span><span class="o">();</span> <span class="n">params</span><span class="o">.</span><span class="na">hasMoreElements</span><span class="o">();)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">String</span> <span class="n">paramKey</span> <span class="o">=</span> <span class="n">params</span><span class="o">.</span><span class="na">nextElement</span><span class="o">();</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">paramKey</span><span class="o">.</span><span class="na">equalsIgnoreCase</span><span class="o">(</span><span class="s">&quot;sign&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">continue</span><span class="o">;</span>     <span class="o">}</span>
</span><span class='line'>          <span class="n">keys</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">paramKey</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">keys</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">keys</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">key</span> <span class="o">=</span> <span class="n">keys</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">value</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">keys</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span><span class="c1">//拼接时，不包括最后一个&amp;字符</span>
</span><span class='line'>                <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">key</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;=&quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">key</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;=&quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">value</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;&amp;&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">sign</span> <span class="o">=</span> <span class="n">DigestUtils</span><span class="o">.</span><span class="na">md5Hex</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span> <span class="o">+</span> <span class="n">app</span><span class="o">.</span><span class="na">getAppCode</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">if</span> <span class="o">(!</span> <span class="n">sign</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">client_sign</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">LOG</span><span class="o">.</span><span class="na">debug</span><span class="o">(</span><span class="s">&quot;sign error, uri is {}.&quot;</span><span class="o">,</span> <span class="n">uri</span><span class="o">);</span>
</span><span class='line'>          <span class="n">RespMessage</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RespMessage</span><span class="o">();</span>
</span><span class='line'>          <span class="n">message</span><span class="o">.</span><span class="na">setCode</span><span class="o">(</span><span class="n">RespMessage</span><span class="o">.</span><span class="na">API_PARAM_ERROR</span><span class="o">);</span>
</span><span class='line'>          <span class="n">message</span><span class="o">.</span><span class="na">setMsg</span><span class="o">(</span><span class="s">&quot;数字签名错误！&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="n">jm</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="n">resp</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">(),</span> <span class="n">message</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//（4）方法调用超时检测</span>
</span><span class='line'>      <span class="kt">long</span> <span class="n">times</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">client_ts</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">times</span> <span class="o">&gt;</span> <span class="n">api_call_timeout</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">RespMessage</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RespMessage</span><span class="o">();</span>
</span><span class='line'>          <span class="n">message</span><span class="o">.</span><span class="na">setCode</span><span class="o">(</span><span class="n">RespMessage</span><span class="o">.</span><span class="na">API_PARAM_ERROR</span><span class="o">);</span>
</span><span class='line'>          <span class="n">message</span><span class="o">.</span><span class="na">setMsg</span><span class="o">(</span><span class="s">&quot;调用超时！&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="n">jm</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="n">resp</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">(),</span> <span class="n">message</span><span class="o">);</span>
</span><span class='line'>          <span class="n">LOG</span><span class="o">.</span><span class="na">debug</span><span class="o">(</span><span class="s">&quot;api call timer out, uri is {}, used time {} ms.&quot;</span><span class="o">,</span> <span class="n">uri</span><span class="o">,</span> <span class="n">times</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// （5）继续向后执行</span>
</span><span class='line'>      <span class="n">fc</span><span class="o">.</span><span class="na">doFilter</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">resp</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setApi_call_timeout</span><span class="o">(</span><span class="kt">int</span> <span class="n">api_call_timeout</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">api_call_timeout</span> <span class="o">=</span> <span class="n">api_call_timeout</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;在spring配置文件中，加入这个过滤器的配置，代码如下：</p>

<figure class='code'><figcaption><span>spring-aciton.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="c">&lt;!-- 第三方应用程序调用api时的检测权限及安全过滤器,名称要和web.xml中的DelegatingFilterProxy指定的targetBeanName名称一致 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;bean</span> <span class="na">name=</span><span class="s">&quot;apiSeccurityCheckFilter&quot;</span> <span class="na">class=</span><span class="s">&quot;com.lovo.platform.monitor.filter.ApiSeccurityCheckFilter&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;api_call_timeout&quot;</span> <span class="na">value=</span><span class="s">&quot;1000&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>  
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;最后，在web.xml中配置DelegatingFilterProxy，通过配置url-pattern指定，所有还aip路径的，都经过这个过滤器，也就是说本系统对外界暴露的restapi调用，有了一个统一的安全认证层次。具体代码如下：</p>

<figure class='code'><figcaption><span>web.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;filter&gt;</span>
</span><span class='line'>    <span class="nt">&lt;filter-name&gt;</span>apiSeccurityCheckFilter<span class="nt">&lt;/filter-name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;filter-class&gt;</span>org.springframework.web.filter.DelegatingFilterProxy<span class="nt">&lt;/filter-class&gt;</span>
</span><span class='line'>    <span class="nt">&lt;init-param&gt;</span>
</span><span class='line'>      <span class="nt">&lt;param-name&gt;</span>targetBeanName<span class="nt">&lt;/param-name&gt;</span>
</span><span class='line'>          <span class="nt">&lt;param-value&gt;</span>apiSeccurityCheckFilter<span class="nt">&lt;/param-value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/init-param&gt;</span>
</span><span class='line'>      <span class="nt">&lt;init-param&gt;</span>
</span><span class='line'>          <span class="nt">&lt;param-name&gt;</span>API_CALL_TIME_OUT<span class="nt">&lt;/param-name&gt;</span>
</span><span class='line'>          <span class="nt">&lt;param-value&gt;</span>500<span class="nt">&lt;/param-value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/init-param&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/filter&gt;</span>
</span><span class='line'>  <span class="nt">&lt;filter-mapping&gt;</span>
</span><span class='line'>    <span class="nt">&lt;filter-name&gt;</span>apiSeccurityCheckFilter<span class="nt">&lt;/filter-name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;url-pattern&gt;</span>/api/*<span class="nt">&lt;/url-pattern&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/filter-mapping&gt;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;大家要注意的是，targetBeanName中的名称，一定要和spring-aciton.xml中配置的bean的名称一致哦。</p>

<p>&emsp;&emsp;最后解释一下，用到OncePerRequestFilter的原因是，过滤器中要进行业务层方法的调用，使用了OncePerRequestFilter后会非常自然地得到业务对象哈。</p>

<p>&emsp;&emsp;下一篇给出客户端调用示例代码，请大家关注。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[拜访画家朋友丁老师]]></title>
    <link href="http://yanyaner.com/blog/2014/07/19/art-arter/"/>
    <updated>2014-07-19T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/07/19/art-arter</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;两年前就想去拜访一下丁红卫老师，由于各种原因一直没能实现，前几天在微信朋友圈看到了一篇媒体关于他的报道，才决定一定要去看看他了。</p>

<p>&emsp;&emsp;来到成都东边位于红河的丁老师家，门开了，一个光头长须、黑框眼镜、穿拖鞋、深色花裤的师者出现在眼前，很难道想像眼前这样一个中国传统形象的老师居然在从事着西洋的绘画艺术。于老师的家处处充满着艺术气息，古老的吊扇、泛黄的旧箱子、斑驳的旧木门&hellip;.，桌上是精致的茶具，非常好有艺术氛围。</p>

<p>&emsp;&emsp;寒暄了几句，坐桌边开始了我们的一些讨论，对于艺术而言我就是一个局外人、体制外的人，只不过对绘画有着一种特殊的、难以释怀情节，在这次交谈中，感觉收获很多。努力摆脱传统绘画的结构、型体、透视、色彩束缚，形成自己独立的风格和出路，是丁老师目前正在做的事情。</p>

<p>&emsp;&emsp;下午去了丁老师画室，强烈感觉到作为一位职业画家的创作专注度和专业精神，川美毕业的他已经从事创作近20年，如今小有成就。画室中的5幅即将完成的作品颇具震撼力。</p>

<p>&emsp;&emsp;此行对我影响比较大，今后的我除了工作、生活之外，也将抽出更多的业余时间投入到我的艺术创作中，一方面是潜移默化地影响孩子，更多的是为了自己更加的专注。在此，由衷的祝福丁红卫老师的艺术能够达到更高、更远的境界。</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/07/art1.jpg' width='' height='' title='丁老师早期作品1'><span class='caption-text'>丁老师早期作品1</span></span></p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/07/art2.jpg' width='' height='' title='丁老师早期作品2'><span class='caption-text'>丁老师早期作品2</span></span></p>

<p>&emsp;&emsp;这两张作品都是灰色调的(成都画家大多数是灰色调，是不是和天气有关啊，呵呵)，画室中的新作品颜色会艳丽些，要等丁老师全部完成后我再拍照。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[spring mvc restful服务器端数据验证实现]]></title>
    <link href="http://yanyaner.com/blog/2014/07/16/spring-restful-validator/"/>
    <updated>2014-07-16T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/07/16/spring-restful-validator</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;服务器端的数据合法性验证非常有必要而且是必须的，特别是restful api中场景中存在多种类型的客户端，你不能保证每种客户端都已经做好了本地化的数据合法性验证。</p>

<p>&emsp;&emsp;对于业务逻辑来说，我们一般会对新增业务操作以及修改业务操提交上来的数据进行验证，而一般的mvc框架都有对验证功能的封装集成，spring mvc也不利外，但这些集成的验证都和特定的视图标签有密切的联系，比如jsp标签库，而在我所说的restful场景中，服务器上往往不做页面的生成工作，那自然是用到到这些标签了。怎么办呢？只有自己做一些封装和改造了，简单的说，就是我们自己去解析BindingResult中的信息。</p>

<p>&emsp;&emsp;请看我下面封装的通用数据返回类代码，其中sendValidationFaildResponse方法会将验证出来的错误信息返回给客户端：</p>

<figure class='code'><figcaption><span>RespMessage.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.jackson.JsonGenerationException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.jackson.map.JsonMappingException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.validation.BindingResult</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.validation.FieldError</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.my.ms.framework.commons.JsonMapper</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 向客户端返回的统一消息</span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RespMessage</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">API_PARAM_ERROR</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">SUCCESS</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">FAIL</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">DATA_VALIDATION_ERROR</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//操作状态码  0：操作失败，1：成功， 其它数据，由客户自定义</span>
</span><span class='line'>  <span class="c1">//-1:数据验证失败 ， 其它取值含义由客户自定义</span>
</span><span class='line'>  <span class="c1">//10:api调用出错参数错误（特别是在无状态webservice之类的调用情况下）</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">code</span> <span class="o">=</span> <span class="n">SUCCESS</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">//要返回的消息</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">msg</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">//返回的数据</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Object</span> <span class="n">data</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">//消息版本，保留待用</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">version</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getCode</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">code</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCode</span><span class="o">(</span><span class="kt">int</span> <span class="n">code</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">code</span> <span class="o">=</span> <span class="n">code</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getMsg</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">msg</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setMsg</span><span class="o">(</span><span class="n">String</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">msg</span> <span class="o">=</span> <span class="n">msg</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Object</span> <span class="nf">getData</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">data</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setData</span><span class="o">(</span><span class="n">Object</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">sendValidationFaildResponse</span><span class="o">(</span>
</span><span class='line'>          <span class="n">BindingResult</span> <span class="n">result</span><span class="o">,</span>
</span><span class='line'>          <span class="n">JsonMapper</span> <span class="n">mapper</span><span class="o">,</span>
</span><span class='line'>          <span class="n">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">getFieldErrors</span><span class="o">().</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">this</span><span class="o">.</span><span class="na">code</span> <span class="o">=</span> <span class="n">DATA_VALIDATION_ERROR</span><span class="o">;</span>
</span><span class='line'>          <span class="c1">//这里只取字段类型的错误</span>
</span><span class='line'>          <span class="n">List</span><span class="o">&lt;</span><span class="n">FieldError</span><span class="o">&gt;</span> <span class="n">errors</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">getFieldErrors</span><span class="o">();</span>
</span><span class='line'>          <span class="n">Map</span> <span class="n">error_map</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">();</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="n">FieldError</span> <span class="n">e</span> <span class="o">:</span> <span class="n">errors</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">error_map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getField</span><span class="o">().</span><span class="na">toString</span><span class="o">(),</span> <span class="n">e</span><span class="o">.</span><span class="na">getDefaultMessage</span><span class="o">());</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="k">this</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="n">error_map</span><span class="o">;</span>
</span><span class='line'>          <span class="k">this</span><span class="o">.</span><span class="na">msg</span> <span class="o">=</span> <span class="s">&quot;你提交的数据没有通过验证！&quot;</span><span class="o">;</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">mapper</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="n">resp</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">(),</span> <span class="k">this</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">ex</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;接下来再来看看添加数据的action代码，这段代码中首先进行了数据合法性的验证：<!-- more--></p>

<figure class='code'><figcaption><span>UserAction.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span><span class="o">=</span><span class="s">&quot;/user&quot;</span><span class="o">,</span> <span class="n">method</span><span class="o">=</span><span class="n">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addUser</span><span class="o">(</span>
</span><span class='line'>          <span class="nd">@Valid</span> <span class="n">User</span> <span class="n">user</span><span class="o">,</span>
</span><span class='line'>          <span class="n">BindingResult</span> <span class="n">result</span>
</span><span class='line'>          <span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          
</span><span class='line'>      <span class="n">resp</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">RespMessage</span> <span class="n">respMsg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RespMessage</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//进行数据合法性的验证</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">respMsg</span><span class="o">.</span><span class="na">sendValidationFaildResponse</span><span class="o">(</span><span class="n">result</span><span class="o">,</span> <span class="n">jm</span><span class="o">,</span> <span class="n">resp</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>        
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//.... other porcess 其它代码略去</span>
</span><span class='line'>          
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;实体对象中，添加字段验证注解，如下（这里暂时没有使用国际化）：</p>

<figure class='code'><figcaption><span>User.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Entity</span>
</span><span class='line'><span class="nd">@Table</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;t_user&quot;</span><span class="o">)</span>
</span><span class='line'><span class="nd">@JsonFilter</span><span class="o">(</span><span class="s">&quot;video_user&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">User</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Id</span>
</span><span class='line'>  <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;pk_id&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="nd">@GeneratedValue</span><span class="o">(</span><span class="n">strategy</span><span class="o">=</span><span class="n">GenerationType</span><span class="o">.</span><span class="na">IDENTITY</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;f_name&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;f_code&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="nd">@NotEmpty</span><span class="o">(</span><span class="n">message</span><span class="o">=</span><span class="s">&quot;编码不能为空！&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">code</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;f_password&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="nd">@NotEmpty</span><span class="o">(</span><span class="n">message</span><span class="o">=</span><span class="s">&quot;登录密码不能为空！&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">password</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//................其它代码略去</span>
</span><span class='line'>  
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;最后，将验证相关的bean对象加入到apirng的配置文件中。</p>

<figure class='code'><figcaption><span>spring-action.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- 读取国际化资源配置文件 --&gt;</span>
</span><span class='line'><span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;messageSource&quot;</span> <span class="na">class=</span><span class="s">&quot;org.springframework.context.support.ResourceBundleMessageSource&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;basename&quot;</span> <span class="na">value=</span><span class="s">&quot;res/appResources&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- 添加验证对国际化的支持 --&gt;</span>
</span><span class='line'><span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;validator&quot;</span> <span class="na">class=</span><span class="s">&quot;org.springframework.validation.beanvalidation.LocalValidatorFactoryBean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;validationMessageSource&quot;</span> <span class="na">ref=</span><span class="s">&quot;messageSource&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- 启用spring mvc注解驱动 --&gt;</span>
</span><span class='line'><span class="nt">&lt;mvc:annotation-driven</span> <span class="na">validator=</span><span class="s">&quot;validator&quot;</span>  <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;国际化的部分仅仅是为了以后扩展方便，同时需要你在src下建立res目录，并写一个空的appResources.properties文件。</p>

<p>&emsp;&emsp;针对上面的action访问，如果我们不输入必须要填写的字段，我们会得到如下的输出结果：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'><span class="nt">&quot;code&quot;</span><span class="p">:</span><span class="mi">-1</span><span class="p">,</span>
</span><span class='line'><span class="nt">&quot;msg&quot;</span><span class="p">:</span><span class="s2">&quot;你提交的数据没有通过验证！&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nt">&quot;data&quot;</span><span class="p">:</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;code&quot;</span><span class="p">:</span><span class="s2">&quot;编码不能为空！&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;password&quot;</span><span class="p">:</span><span class="s2">&quot;登录密码不能为空！&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;这个json信息，在jquery中可以通过下面的代码解析出错误详细信息，并进行显示：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">success</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
</span><span class='line'>              
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">code</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span><span class="nx">data</span><span class="p">){</span>
</span><span class='line'>                      <span class="nx">alert</span><span class="p">(</span><span class="nx">key</span> <span class="o">+</span> <span class="s2">&quot;: &quot;</span> <span class="o">+</span> <span class="nx">data</span><span class="p">);</span>
</span><span class='line'>                  <span class="p">});</span>
</span><span class='line'>                  <span class="k">return</span><span class="p">;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">//........其它代码略去</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[spring mvc 表现层测试]]></title>
    <link href="http://yanyaner.com/blog/2014/07/15/spring-mvc-test/"/>
    <updated>2014-07-15T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/07/15/spring-mvc-test</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;表现层、业务层、持久层是一个经典的分层架构，在构建软件系统时，一般会从持久层开始，逐渐向上层编码、构建，每一层完成编码后必须保证正确后，再写上一层，这就像修房子一样，打牢地基再砌墙。</p>

<p>&emsp;&emsp;另外需提一下，一般公司的项目中对持久层都有通用的封装（比如baseDao），因此，持久层的代码在这种情况下就表现为ORM注解或sql语句块，如果是hibernate注解，在项目启动时就可以发现大部分配置上的错误，如果是mybatis或ibatis依旧可以放到业务层中去测试。因此，我认为持久层不用专门去写测试代码了，我们针对业务层的测试即可发现持久层的问题。</p>

<p>&emsp;&emsp;还有，表现层在采用了restful及json数据返回格式后，前端的交互编码其实可以很早就进行，即和后台编码同步进行，我计划有时间去实现一个这样的模拟系统服务器，在设计人员完成rest api设计后，就可以将api输入这个模拟服务器系统，前端程序员依照rest api就可以和模拟服务器交互了，这样前后台就可以分工同步开发了，效率一定会提升哦。</p>

<p>&emsp;&emsp;言归正传，下面我主要来讲讲服务器端的action测试，因为在这个时候，我们还没有任何界面交互，而仅仅只有一个restful api。如何对action进行测试，在早期的spring版本中还比较困难，网上很多同学都是自己封装，但依然不方便不强大。好消息是从spring 3.2开始，提供了对spring mvc完善的支持，请看下面的这个登录action代码及测试。<!-- more--></p>

<figure class='code'><figcaption><span>LoginAction.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 登录系统</span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nd">@Controller</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LoginAction</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">IUserService</span> <span class="n">userService</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">JsonMapper</span> <span class="n">jm</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>
</span><span class='line'>  <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span><span class="o">=</span><span class="s">&quot;/login&quot;</span><span class="o">,</span> <span class="n">method</span><span class="o">=</span><span class="n">RequestMethod</span><span class="o">.</span><span class="na">GET</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">loginSystem</span><span class="o">(</span>
</span><span class='line'>          <span class="nd">@Valid</span> <span class="n">User</span> <span class="n">user</span><span class="o">,</span>
</span><span class='line'>          <span class="n">BindingResult</span> <span class="n">result</span><span class="o">,</span>
</span><span class='line'>          <span class="n">HttpSession</span> <span class="n">session</span><span class="o">,</span>
</span><span class='line'>          <span class="n">HttpServletResponse</span> <span class="n">resp</span>
</span><span class='line'>          <span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">resp</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">RespMessage</span> <span class="n">respMsg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RespMessage</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">respMsg</span><span class="o">.</span><span class="na">sendValidationFaildResponse</span><span class="o">(</span><span class="n">result</span><span class="o">,</span> <span class="n">jm</span><span class="o">,</span> <span class="n">resp</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">User</span> <span class="n">u</span> <span class="o">=</span> <span class="n">userService</span><span class="o">.</span><span class="na">login</span><span class="o">(</span><span class="n">user</span><span class="o">.</span><span class="na">getCode</span><span class="o">(),</span> <span class="n">user</span><span class="o">.</span><span class="na">getPassword</span><span class="o">());</span>
</span><span class='line'>          <span class="n">session</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="n">IConst</span><span class="o">.</span><span class="na">LOGIN_USER_SESSION_KEY</span><span class="o">,</span> <span class="n">u</span><span class="o">);</span>
</span><span class='line'>          <span class="n">respMsg</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="n">u</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">respMsg</span><span class="o">.</span><span class="na">setCode</span><span class="o">(</span><span class="n">RespMessage</span><span class="o">.</span><span class="na">FAIL</span><span class="o">);</span>
</span><span class='line'>          <span class="n">respMsg</span><span class="o">.</span><span class="na">setMsg</span><span class="o">(</span><span class="n">ex</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">jm</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="k">new</span> <span class="n">FilterProvider</span><span class="o">()</span>
</span><span class='line'>      <span class="o">.</span><span class="na">addIncludeProperties</span><span class="o">(</span><span class="s">&quot;video_user&quot;</span><span class="o">,</span> <span class="s">&quot;id&quot;</span><span class="o">,</span> <span class="s">&quot;name&quot;</span><span class="o">,</span> <span class="s">&quot;classes&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">addIncludeProperties</span><span class="o">(</span><span class="s">&quot;video_classes&quot;</span><span class="o">,</span> <span class="s">&quot;id&quot;</span> <span class="o">,</span><span class="s">&quot;name&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">,</span><span class="n">resp</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">(),</span> <span class="n">respMsg</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;对上面这个rest方法如何进行测试呢？非常简单，代码如下：</p>

<figure class='code'><figcaption><span>LoginActionTest.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">org.junit.Before</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.junit.Test</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.junit.runner.RunWith</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.http.MediaType</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.test.context.ContextConfiguration</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.test.context.junit4.SpringJUnit4ClassRunner</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.test.context.web.WebAppConfiguration</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.test.web.servlet.MockMvc</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.test.web.servlet.request.MockMvcRequestBuilders</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.test.web.servlet.result.MockMvcResultHandlers</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.test.web.servlet.result.MockMvcResultMatchers</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.test.web.servlet.setup.MockMvcBuilders</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.transaction.annotation.Transactional</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.context.WebApplicationContext</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">web</span><span class="o">.</span><span class="na">servlet</span><span class="o">.</span><span class="na">result</span><span class="o">.</span><span class="na">MockMvcResultHandlers</span><span class="o">.*;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">web</span><span class="o">.</span><span class="na">servlet</span><span class="o">.</span><span class="na">result</span><span class="o">.</span><span class="na">MockMvcResultMatchers</span><span class="o">.*;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">web</span><span class="o">.</span><span class="na">servlet</span><span class="o">.</span><span class="na">request</span><span class="o">.</span><span class="na">MockMvcRequestBuilders</span><span class="o">.*;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@RunWith</span><span class="o">(</span><span class="n">SpringJUnit4ClassRunner</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
</span><span class='line'><span class="nd">@Transactional</span>
</span><span class='line'><span class="nd">@WebAppConfiguration</span>
</span><span class='line'><span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">value</span><span class="o">={</span><span class="s">&quot;classpath:config/spring/spring*.xml&quot;</span><span class="o">})</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LoginActionTest</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">WebApplicationContext</span> <span class="n">wac</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="n">MockMvc</span> <span class="n">mvc</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Before</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setup</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">mvc</span> <span class="o">=</span> <span class="n">MockMvcBuilders</span><span class="o">.</span><span class="na">webAppContextSetup</span><span class="o">(</span><span class="n">wac</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">testLogin</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">mvc</span>
</span><span class='line'>      <span class="o">.</span><span class="na">perform</span><span class="o">(</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;/login&quot;</span><span class="o">).</span><span class="na">param</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">,</span> <span class="s">&quot;ljh&quot;</span><span class="o">).</span><span class="na">param</span><span class="o">(</span><span class="s">&quot;password&quot;</span><span class="o">,</span> <span class="s">&quot;123&quot;</span><span class="o">))</span>
</span><span class='line'>      <span class="o">.</span><span class="na">andExpect</span><span class="o">(</span><span class="n">status</span><span class="o">().</span><span class="na">isOk</span><span class="o">())</span> <span class="c1">//状态码200</span>
</span><span class='line'>      <span class="o">.</span><span class="na">andExpect</span><span class="o">(</span><span class="n">content</span><span class="o">().</span><span class="na">string</span><span class="o">(</span><span class="s">&quot;{msg:10}&quot;</span><span class="o">))</span>
</span><span class='line'>      <span class="o">.</span><span class="na">andExpect</span><span class="o">(</span><span class="n">content</span><span class="o">().</span><span class="na">contentType</span><span class="o">(</span><span class="n">MediaType</span><span class="o">.</span><span class="na">APPLICATION_JSON</span><span class="o">))</span>
</span><span class='line'>      <span class="o">.</span><span class="na">andExpect</span><span class="o">(</span><span class="n">jsonPath</span><span class="o">(</span><span class="s">&quot;$.msg&quot;</span><span class="o">).</span><span class="na">value</span><span class="o">(</span><span class="mi">10</span><span class="o">))</span>
</span><span class='line'>      <span class="o">.</span><span class="na">andDo</span><span class="o">(</span><span class="n">print</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;上面的代码，有几个地方需要给大家解释：</p>

<p>&emsp;&emsp;<strong>MockMvc</strong>:这个类是一个核心类，测试必须通过这个类来实现。MockMvc如何实例化呢？这行代码：<strong>MockMvcBuilders</strong>.webAppContextSetup(wac).build()即可实例化，其中的wac需要由容器注入，类型是WebApplicationContext。</p>

<p>&emsp;&emsp;有同学在这个地方或许有点疑问，在没有启动tomcat之类容器的情况下，如何能注入<strong>WebApplicationContext</strong>啊？答案就是类顶上书写的<strong>@WebAppConfiguration</strong>注解，细心的同学会发现，本测试类和service中的测试类上面写的注解基本相同，惟独多了@WebAppConfiguration注解，正因为这个注解所起的作用，使用WebApplicationContext可以注入。</p>

<p>&emsp;&emsp;接下来，我们来看真正的测试方法，在测试过程中，我们主要会做三个事情：</p>

<p>&emsp;&emsp;<strong>1、构建请求，然后执行</strong>。</p>

<p>&emsp;&emsp;请求的构建，需要用到MockMvcRequestBuilders类，这个类可以产生get、post、put、delete等各种请求以及填充参数，构建好请求后，通过perform方法提交这个请求。</p>

<p>&emsp;&emsp;<strong>2、验证请求结果和预期是否一切。</strong></p>

<p>&emsp;&emsp;请求的验证通过MockMvcResultMatchers这个类来做，我们可以从很多方面来验证结果和你预期是否一致，比如：状态码，响应内容，响应视图名称，响应类型码等，上例中我们就使用了status、content、contentType等，更详细的东东请大家去翻阅spring api文档吧。</p>

<p>&emsp;&emsp;<strong>3、打印输出请求与响应的结果（这一步可选，不是必须的哦）。</strong></p>

<p>&emsp;&emsp;MockMvcResultHandlers这个类用来对结果进行处理，比如通过print方法打印，spring mvc对测试结果处理的封装目前仅仅提供了打印这个处理，其它的可由我们自己去实现哦。当然，你也可以将输入的json结果copy出来，放入图形化工具中，人工检查是否正确，可使用的gui工具有JsonView.exe，自己可从网上下载到哦。</p>

<p>&emsp;&emsp;当然，上面都是针对的是json restful结果的断言，如果是传统的mvc方式，又该是如何验证呢？请看示例代码，包含了对跳转页面资源的验证以及对作用域中值的验证等功能：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>         <span class="o">.</span><span class="na">andExpect</span><span class="o">(</span><span class="n">status</span><span class="o">().</span><span class="na">isOk</span><span class="o">())</span>
</span><span class='line'>          <span class="o">.</span><span class="na">andExpect</span><span class="o">(</span><span class="n">view</span><span class="o">().</span><span class="na">name</span><span class="o">(</span><span class="s">&quot;main&quot;</span><span class="o">))</span>
</span><span class='line'>          <span class="o">.</span><span class="na">andExpect</span><span class="o">(</span><span class="n">MockMvcResultMatchers</span><span class="o">.</span><span class="na">forwardedUrl</span><span class="o">(</span><span class="s">&quot;main&quot;</span><span class="o">))</span>
</span><span class='line'>          <span class="o">.</span><span class="na">andExpect</span><span class="o">(</span><span class="n">forwardedUrl</span><span class="o">(</span><span class="s">&quot;main&quot;</span><span class="o">))</span>
</span><span class='line'>          <span class="o">.</span><span class="na">andExpect</span><span class="o">(</span><span class="n">model</span><span class="o">().</span><span class="na">attributeExists</span><span class="o">(</span><span class="s">&quot;user_key&quot;</span><span class="o">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;如果你的需求中需要上传文件，又怎么测试呢？不要着急，spring mvc已经为我们考虑到了这些，代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">mvc</span><span class="o">.</span><span class="na">perform</span><span class="o">(</span>
</span><span class='line'>              <span class="n">fileUpload</span><span class="o">(</span><span class="s">&quot;/login&quot;</span><span class="o">)</span>
</span><span class='line'>              <span class="o">.</span><span class="na">file</span><span class="o">(</span>
</span><span class='line'>                      <span class="k">new</span> <span class="nf">MockMultipartFile</span><span class="o">(</span><span class="s">&quot;photo&quot;</span><span class="o">,</span> <span class="s">&quot;database.properties&quot;</span><span class="o">,</span> <span class="n">MediaType</span><span class="o">.</span><span class="na">IMAGE_JPEG_VALUE</span><span class="o">,</span> <span class="n">FileUtils</span><span class="o">.</span><span class="na">readFileToByteArray</span><span class="o">(</span>
</span><span class='line'>                              <span class="k">new</span> <span class="nf">ClassPathResource</span><span class="o">(</span><span class="s">&quot;database.properties&quot;</span><span class="o">).</span><span class="na">getFile</span><span class="o">())))</span>
</span><span class='line'>                  <span class="o">.</span><span class="na">param</span><span class="o">(</span><span class="s">&quot;code&quot;</span><span class="o">,</span> <span class="s">&quot;001&quot;</span><span class="o">)</span>
</span><span class='line'>                  <span class="o">.</span><span class="na">param</span><span class="o">(</span><span class="s">&quot;password&quot;</span><span class="o">,</span> <span class="s">&quot;123&quot;</span><span class="o">)</span>
</span><span class='line'>              
</span><span class='line'>              <span class="o">)</span>
</span><span class='line'>              <span class="o">.</span><span class="na">andExpect</span><span class="o">(</span><span class="n">status</span><span class="o">().</span><span class="na">isOk</span><span class="o">())</span>
</span><span class='line'>              <span class="o">.</span><span class="na">andDo</span><span class="o">(</span><span class="n">print</span><span class="o">());</span>
</span><span class='line'>              
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;我们自己实例化了一个MockMultipartFile，并指定了一些参数，比如文件字段名，原始文件名，内容类型，文件内容等。有一点要提醒大家的是，在你的Action中，一定要用MultipartFile类型来接收文件参数，而不是用CommonsMultipartFile哦，切记（其实这也是您对依赖倒转原则理解的体现哦）。</p>

<p>&emsp;&emsp;各位，时间关系，先写到这，以后再补充。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分布式文件系统fastdfs解析之二(配置)]]></title>
    <link href="http://yanyaner.com/blog/2014/06/03/fastDFS-config/"/>
    <updated>2014-06-03T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/06/03/fastDFS-config</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;我计划在两台服务器上安装fdfs，ip分别是:192.168.68.133（1号服务器）, 192.168.68.136（2号服务器），fdfs在两台服务器上的安装部署图如下。</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/05/fdfs_deploy.jpg' width='' height='' title='fastdfs部署示意图'><span class='caption-text'>fastdfs部署示意图</span></span></p>

<p>&emsp;&emsp;1号服务器上安装tracker实例一个，storage实例2个，分别位于group1,group2两个不同的组中；2号服务器上也安装tracker实例一个，storage实例1个，这个storage和1号服务器中的其中一个storage位于同一个组中。下面给大家贴出具体配置。</p>

<p>&emsp;&emsp;1号服务器中，我们先： vim /usr/local/fastdfs/conf/storage_ids.conf</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># &lt;id&gt;  &lt;group_name&gt;  &lt;ip_or_hostname&gt;
</span><span class='line'>100001   group1  192.168.68.133
</span><span class='line'>100002   group2  192.168.68.133
</span><span class='line'>100003   group1  192.168.68.136</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;在这个文件中为所有存储服务器指定id, 这样可以免更换ip带来的影响，也就是说当服务器ip发生改变后只需要更改这个文件中的ip地址即可。</p>

<p>&emsp;&emsp;编辑tracker.conf，vim /usr/local/fastdfs/conf/tracker.conf配置文件，以下仅仅列出我改过的或者我认为需要给大家说明的配置项，没有贴出的均保持配置文件中的默认值。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'># the tracker server port
</span><span class='line'>port=22122
</span><span class='line'>
</span><span class='line'># the base path to store data and log files
</span><span class='line'>base_path=/var/fastdfs/tracker
</span><span class='line'>
</span><span class='line'># the method of selecting group to upload files
</span><span class='line'># 0: round robin
</span><span class='line'># 1: specify group
</span><span class='line'># 2: load balance, select the max free space group to upload file
</span><span class='line'>store_lookup=2
</span><span class='line'>
</span><span class='line'># which group to upload file
</span><span class='line'># when store_lookup set to 1, must set store_group to the group name
</span><span class='line'>store_group=group2
</span><span class='line'>
</span><span class='line'>#unix group name to run this program, 
</span><span class='line'>#not set (empty) means run by the group of current user
</span><span class='line'>run_by_group=
</span><span class='line'>
</span><span class='line'>#unix username to run this program,
</span><span class='line'>#not set (empty) means run by current user
</span><span class='line'>run_by_user=
</span><span class='line'>
</span><span class='line'># if use storage ID instead of IP address
</span><span class='line'># default value is false
</span><span class='line'># since V4.00
</span><span class='line'>use_storage_id = true
</span><span class='line'>
</span><span class='line'># the max time of storage sync a file
</span><span class='line'># default value is 300 seconds
</span><span class='line'># since V2.00
</span><span class='line'>storage_sync_file_max_time = 300
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;现对上面列出的一些配置项进行解释：</p>

<p>&emsp;&emsp;<strong>port</strong>：tracker服务器的端口号，如果一台服务器上要运行多个tracker实例就需要更改此端口号以避免冲突。</p>

<p>&emsp;&emsp;<strong>base_path</strong>：tracker自身配置信息以及日志信息保存的位置，这个目录本不会占用太大的空间，但日志文件会随着使用而慢慢变大。</p>

<p>&emsp;&emsp;<strong>store_lookup</strong>：负载分配机制，2表示选择存储空间最大的组来保存文件。</p>

<p>&emsp;&emsp;<strong>run_by_group，run_by_user</strong>：指定运行tracker的用户组及用户，这是为了保存系统的安全，我们一般会为fdfs新建组及用户。</p>

<p>&emsp;&emsp;<strong>use_storage_id</strong>：使用存储服务器id替代ip地址，我们刚才编辑的storage_ids.conf中指定了每个实例的id。</p>

<p>&emsp;&emsp;<strong>storage_sync_file_max_time</strong>：同一组中的不同storate进行文件同步的时间，默认是5分钟内完成同步，你可以根据实际情况把这个值改小（改变这个值后可以观察到文件同步的效果，这个值不要设置得太小以避免造成系统同步网络压力）。</p>

<p>&emsp;&emsp;接下来我们配置本台服务器上的storage实例，先配置storage1.conf实例，这个实例位于group1中。</p>

<p>&emsp;&emsp;vim /usr/local/fastdfs/conf/storage1.conf，同样限于篇幅，我仅仅贴出重要配置项，其它的使用默认值。<!-- more--></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># the name of the group this storage server belongs to
</span><span class='line'>group_name=group1
</span><span class='line'>
</span><span class='line'># the storage server port
</span><span class='line'>port=23001
</span><span class='line'>
</span><span class='line'># the base path to store data and log files
</span><span class='line'>base_path=/var/fastdfs/storage1
</span><span class='line'>
</span><span class='line'># store_path#, based 0, if store_path0 not exists, it's value is base_path
</span><span class='line'># the paths must be exist
</span><span class='line'>store_path0=/var/fastdfs/store_group1_path0
</span><span class='line'>
</span><span class='line'># tracker_server can ocur more than once, and tracker_server format is
</span><span class='line'>#  "host:port", host can be hostname or ip address
</span><span class='line'>tracker_server=192.168.68.133:22122
</span><span class='line'>tracker_server=192.168.68.136:22122
</span><span class='line'>
</span><span class='line'>run_by_group=
</span><span class='line'>run_by_user=
</span><span class='line'>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;现在对上面的配置项进行解释：</p>

<p>&emsp;&emsp;<strong>group_name</strong>：本storage实例所属的组名称。</p>

<p>&emsp;&emsp;<strong>port</strong>：storage的端口号，同一组的storage实例必须采用同样的端口号，这就是说同一组中的storage实例必须部署在不同学的机器上，因为同一台机器上的端口号不能相同。</p>

<p>&emsp;&emsp;<strong>base_path</strong>：本storage的配置数据及运行日志文件存放的位置，和tracker中的base_path含义相同。</p>

<p>&emsp;&emsp;<strong>store_path0</strong>：真正的用户上传文件保存的位置目录，fastDfs会在该目录下新建许多子目录，在第一次启动实例时会进行这个操作。store_path可以有多个，一般可以分配成单独的磁盘挂载点。</p>

<p>&emsp;&emsp;<strong>tracker_server</strong>：指定本storaged的信息会注册到哪些tracker中去，故这里的tracker_server可以配置多个。</p>

<p>&emsp;&emsp;<strong>run_by_group、run_by_user</strong>与tracker中的含义相同，不再细说。</p>

<p>&emsp;&emsp;接下来，我们再来看本服务器上的另一个storage实例，这个实例是运行在group2中的，端口号与上面配置的那个storage是不同的，请看配置关键项：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># the name of the group this storage server belongs to
</span><span class='line'>group_name=group2
</span><span class='line'>
</span><span class='line'># the storage server port
</span><span class='line'>port=23002
</span><span class='line'>
</span><span class='line'>base_path=/var/fastdfs/storage2
</span><span class='line'>
</span><span class='line'># store_path#, based 0, if store_path0 not exists, it's value is base_path
</span><span class='line'># the paths must be exist
</span><span class='line'>store_path0=/var/fastdfs/store_group2_path0
</span><span class='line'>
</span><span class='line'># tracker_server can ocur more than once, and tracker_server format is
</span><span class='line'>#  "host:port", host can be hostname or ip address
</span><span class='line'>tracker_server=192.168.68.133:22122
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;上面配置文件中的内容和storage1.conf中的类似，只不过group_name、port不相同，两个文件的保存路径也是不同的，经过这些配置后，我们就可以启动服务实例了。</p>

<p>&emsp;&emsp;先来启动tracker实例，先编辑启动脚本文，vim /etc/init.d/fdfs_trackerd。</p>

<figure class='code'><figcaption><span>fdfs_trackerd</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># fdfs_trackerd Starts fdfs_trackerd</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># chkconfig: 2345 99 01</span>
</span><span class='line'><span class="c"># description: FastDFS tracker server</span>
</span><span class='line'><span class="c">### BEGIN INIT INFO</span>
</span><span class='line'><span class="c"># Provides: $fdfs_trackerd</span>
</span><span class='line'><span class="c">### END INIT INFO</span>
</span><span class='line'><span class="c"># Source function library.</span>
</span><span class='line'>. /etc/init.d/functions
</span><span class='line'><span class="nv">FastDfs</span><span class="o">=</span><span class="s1">&#39;/usr/local/fastdfs&#39;</span>
</span><span class='line'><span class="nv">CONF</span><span class="o">=</span><span class="s2">&quot;$FastDfs/conf/tracker.conf&quot;</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> ! -f <span class="nv">$CONF</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;file $CONF does not exist!&quot;</span>
</span><span class='line'>  <span class="nb">exit </span>2
</span><span class='line'><span class="k">fi</span>
</span><span class='line'><span class="nv">PRG</span><span class="o">=</span><span class="s2">&quot;$FastDfs/bin/fdfs_trackerd&quot;</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> ! -f <span class="nv">$PRG</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;file $PRG does not exist!&quot;</span>
</span><span class='line'>  <span class="nb">exit </span>2
</span><span class='line'><span class="k">fi</span>
</span><span class='line'><span class="nv">Stop</span><span class="o">=</span><span class="s2">&quot;$FastDfs/bin/stop.sh&quot;</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> ! -f <span class="nv">$Stop</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;file $Stop does not exist!&quot;</span>
</span><span class='line'>  <span class="nb">exit </span>2
</span><span class='line'><span class="k">fi</span>
</span><span class='line'><span class="nv">Restart</span><span class="o">=</span><span class="s2">&quot;$FastDfs/bin/restart.sh&quot;</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> ! -f <span class="nv">$Restart</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;file $Restart does not exist!&quot;</span>
</span><span class='line'>  <span class="nb">exit </span>2
</span><span class='line'><span class="k">fi</span>
</span><span class='line'><span class="nv">RETVAL</span><span class="o">=</span>0
</span><span class='line'>start<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="nb">echo</span> -n <span class="s2">$&quot;Starting FastDFS tracker server: &quot;</span>
</span><span class='line'>    <span class="nv">$PRG</span> <span class="nv">$CONF</span> &amp;
</span><span class='line'>    <span class="nv">RETVAL</span><span class="o">=</span><span class="nv">$?</span>
</span><span class='line'>    <span class="nb">echo</span>
</span><span class='line'><span class="nb">    </span><span class="k">return</span> <span class="nv">$RETVAL</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>stop<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="nb">echo</span> -n <span class="s2">$&quot;Stop FastDFS tracker server: &quot;</span>
</span><span class='line'>    <span class="nv">$Stop</span> <span class="nv">$PRG</span> <span class="nv">$CONF</span>
</span><span class='line'>    <span class="nv">RETVAL</span><span class="o">=</span><span class="nv">$?</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$RETVAL</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>rhstatus<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    status fdfs_trackerd
</span><span class='line'><span class="o">}</span>
</span><span class='line'>restart<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nv">$Restart</span> <span class="nv">$PRG</span> <span class="nv">$CONF</span> &amp;
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="k">case</span> <span class="s2">&quot;$1&quot;</span> in
</span><span class='line'>  start<span class="o">)</span>
</span><span class='line'>    start
</span><span class='line'>    ;;
</span><span class='line'>  stop<span class="o">)</span>
</span><span class='line'>    stop
</span><span class='line'>    ;;
</span><span class='line'>  status<span class="o">)</span>
</span><span class='line'>    rhstatus
</span><span class='line'>    ;;
</span><span class='line'>  restart|reload<span class="o">)</span>
</span><span class='line'>    restart
</span><span class='line'>    ;;
</span><span class='line'>  condrestart<span class="o">)</span>
</span><span class='line'>    restart
</span><span class='line'>    ;;
</span><span class='line'>  *<span class="o">)</span>
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">$&quot;Usage: $0 {start|stop|status|restart|condrestart}&quot;</span>
</span><span class='line'>    <span class="nb">exit </span>1
</span><span class='line'><span class="k">esac</span>
</span><span class='line'><span class="nb">exit</span> <span class="nv">$?</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;这篇启动脚本中，主要修改的地方是FastDfs及CONF变量参数，这两个用来指定tracker配置文件所在的位置。</p>

<p>&emsp;&emsp;完成编辑后，使用命令：sudo /etc/init.d/fdfs_trackerd start，即可完成服务器的启动，如果启动成功你可通过netstat -lnpt查看到tracker的端口号。</p>

<p>&emsp;&emsp;接下来，将fdfs_storaged拷贝为fdfs_storaged1，用于启动storage1实例，要修改的地方也是FastDfs及CONF参数，这两个参数用来指定storage1.conf文件的在的目录及配置文件的名称。</p>

<figure class='code'><figcaption><span>fdfs_storaged1</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># fdfs_storaged Starts fdfs_storaged</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># chkconfig: 2345 99 01</span>
</span><span class='line'><span class="c"># description: FastDFS storage server</span>
</span><span class='line'><span class="c">### BEGIN INIT INFO</span>
</span><span class='line'><span class="c"># Provides: $fdfs_storaged</span>
</span><span class='line'><span class="c">### END INIT INFO</span>
</span><span class='line'><span class="c"># Source function library.</span>
</span><span class='line'>. /etc/init.d/functions
</span><span class='line'><span class="nv">FastDfs</span><span class="o">=</span><span class="s1">&#39;/usr/local/fastdfs&#39;</span>
</span><span class='line'><span class="nv">CONF</span><span class="o">=</span><span class="s2">&quot;$FastDfs/conf/storage1.conf&quot;</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> ! -f <span class="nv">$CONF</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;file $CONF does not exist!&quot;</span>
</span><span class='line'>  <span class="nb">exit </span>2
</span><span class='line'><span class="k">fi</span>
</span><span class='line'><span class="nv">PRG</span><span class="o">=</span><span class="s2">&quot;$FastDfs/bin/fdfs_storaged&quot;</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> ! -f <span class="nv">$PRG</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;file $PRG does not exist!&quot;</span>
</span><span class='line'>  <span class="nb">exit </span>2
</span><span class='line'><span class="k">fi</span>
</span><span class='line'><span class="nv">Stop</span><span class="o">=</span><span class="s2">&quot;$FastDfs/bin/stop.sh&quot;</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> ! -f <span class="nv">$Stop</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;file $Stop does not exist!&quot;</span>
</span><span class='line'>  <span class="nb">exit </span>2
</span><span class='line'><span class="k">fi</span>
</span><span class='line'><span class="nv">Restart</span><span class="o">=</span><span class="s2">&quot;$FastDfs/bin/restart.sh&quot;</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> ! -f <span class="nv">$Restart</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;file $Restart does not exist!&quot;</span>
</span><span class='line'>  <span class="nb">exit </span>2
</span><span class='line'><span class="k">fi</span>
</span><span class='line'><span class="nv">RETVAL</span><span class="o">=</span>0
</span><span class='line'>start<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">echo</span> -n <span class="s2">$&quot;Starting FastDFS storage server: &quot;</span>
</span><span class='line'>  <span class="nv">$PRG</span> <span class="nv">$CONF</span> &amp;
</span><span class='line'>  <span class="nv">RETVAL</span><span class="o">=</span><span class="nv">$?</span>
</span><span class='line'>  <span class="nb">echo</span>
</span><span class='line'><span class="nb"> </span><span class="k">return</span> <span class="nv">$RETVAL</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>stop<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">echo</span> -n <span class="s2">$&quot;Stop FastDFS storage server: &quot;</span>
</span><span class='line'>  <span class="nv">$Stop</span> <span class="nv">$PRG</span> <span class="nv">$CONF</span>
</span><span class='line'>  <span class="nv">RETVAL</span><span class="o">=</span><span class="nv">$?</span>
</span><span class='line'>  <span class="k">return</span> <span class="nv">$RETVAL</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>rhstatus<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  status fdfs_storaged
</span><span class='line'><span class="o">}</span>
</span><span class='line'>restart<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="nv">$Restart</span> <span class="nv">$PRG</span> <span class="nv">$CONF</span> &amp;
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="k">case</span> <span class="s2">&quot;$1&quot;</span> in
</span><span class='line'>  start<span class="o">)</span>
</span><span class='line'>      start
</span><span class='line'>  ;;
</span><span class='line'>  stop<span class="o">)</span>
</span><span class='line'>      stop
</span><span class='line'>  ;;
</span><span class='line'>  status<span class="o">)</span>
</span><span class='line'>      rhstatus
</span><span class='line'>  ;;
</span><span class='line'>  restart|reload<span class="o">)</span>
</span><span class='line'>      restart
</span><span class='line'>  ;;
</span><span class='line'>  condrestart<span class="o">)</span>
</span><span class='line'>      restart
</span><span class='line'>  ;;
</span><span class='line'>  *<span class="o">)</span>
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">$&quot;Usage: $0 {start|stop|status|restart|condrestart}&quot;</span>
</span><span class='line'>  <span class="nb">exit </span>1
</span><span class='line'><span class="k">esac</span>
</span><span class='line'>
</span><span class='line'><span class="nb">exit</span> <span class="nv">$?</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;好，该来启动storaged1实例了，命令： sudo /etc/init.d/fdfs_storaged1 start，如果是第一次启动会观察到创建存储目录的过程。</p>

<p>&emsp;&emsp;启动storaged2实例的过程和storaged1相同，先编辑fdfs_storaged2文件，再fdfs_storaged2 start即完成。</p>

<p>&emsp;&emsp;当1号服务器上的fdfs全部服务都成功启动后，我们可以看到如下目录结构会建立起来。</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/05/fdfs_dir_struct.jpg' width='' height='' title='fastdfs目录结构'><span class='caption-text'>fastdfs目录结构</span></span></p>

<p>&emsp;&emsp;至此，1号服务器上的所有配置及服务启动工作已经完成。2号服务器的配置及服务实例启动与1号服务器基本相同，惟一需要大家要注意的是group的名称，port端口号等，要和1号服务器相“呼应”，同时，我们在2号服务器上也配置了一个tracker实例以保证高可用性。</p>

<p>&emsp;&emsp;好了，fastDFS的配置先告一段落，下一篇我们来聊聊客户端对fastDFS的调用，除了java客户端外，还包括tengine-2.0.1服务器上访问插件的配置(2014-7-15:不写了，以后有空再说，大家在使用时，最后在网上找带连接池功能的fastDFS驱动)。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分布式文件系统fastdfs解析之一(安装)]]></title>
    <link href="http://yanyaner.com/blog/2014/05/30/fastDFS-setup/"/>
    <updated>2014-05-30T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/05/30/fastDFS-setup</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;fastdfs是一个轻量级的分布式文件系统服务，它在互联网项目中有比较广泛的用途，类似的还有tfs等，但fastdfs和hadoop这些又不相同，hadoop是分布式存储计算框架，比较重量级，而fastdfs针对的是海量的小文件。</p>

<p>&emsp;&emsp;项目中经常会有这样一些应用场景，比如：文件服务器需要存储海量的用户文件并且对外提供用户的访问操作；文件服务器需要高可用性和高性能；文件服务器需要实现负载均衡；文件服务器可实时扩容等等，这些需求在Fastdfs中有实现，因此它可以满足大部的项目需求。</p>

<p>&emsp;&emsp;先给大家简单介绍一下fastdfs的原理，下面这张图有助于大家了解分布式文件系统的原理（hadoop之类的分布式体系与之有相似之处）。</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/04/seq_fastdfs.jpg' width='' height='' title='fastdfs调用时序图'><span class='caption-text'>fastdfs调用时序图</span></span></p>

<p>&emsp;&emsp;上面这张图中客户端针对文件服务系统的调用，首先得通过tracker服务器，这个服务器充当了调度者的作用。客户端可以是任何的程序客户端，比如java客户端、php客户端、nginx插件客户端等。</p>

<p>&emsp;&emsp;在客户端调用之前先得启动tracker server，然后再分别启动各个storage server，每个storage server启动后会注册自己的信息到指定的tracker server中（其实，tracker server服务器也可以有多个，从高可用性方面考虑我们一般会启动多个tracker server实例）。</p>

<p>&emsp;&emsp;storage server负责具体文件的存储。storage server按照分组的方式来保存文件的，比如group1,group2等。一个组中可以有多台服务器，同一个组里的所有服务器中保存的文件内容都是相同的，因为同一个组中的服务器之间会相互自动同步文件，这样就实现了冗余备份及负载均衡的功能（负载均衡由tracker server调试的哦）。</p>

<p>&emsp;&emsp;不同组中的storage server之间是独立的，当系统存储容量不够时，通过添加新服务器并分配到新的组中，tracker server发现新的服务器后会自动调度以实现后续客户文件的写入位置。</p>

<p>&emsp;&emsp;上图中，客户通过询问tracker server得到可用的storage server（tracker server会通过负载均衡及各个storage的存储可用容量大小算法决定，当然这个也可以在配置文件中指定），客户端得到storage server后进行相应的文件操作，同组服务器间会根据操作的结果进行文件同步（时序9，10是同步操作）。</p>

<p>&emsp;&emsp;好了，原理先说到这。下面，我将给大家简单介绍FastDfs的安装及使用，以及一些注意事项。</p>

<p>&emsp;&emsp;我的服务器是ubuntu server，我计划安装在两台服务器上，ip分别是:192.168.68.133, 192.168.68.136，暂时简称为1号服务器，2号服务器。</p>

<p>&emsp;&emsp;一号服务器上，将安装一个tracker server实例，一个位于group1中的storage server实例，一个位于group2中storage server实例。</p>

<p>&emsp;&emsp;二号服务器上，也将安装一个tracker server实例，一个位于group1中的storage server实例。需要大家注意的是，fastdfs中一台服务器上可以安装多个组，但一个组中的多个storade server必须安装在不同的服务器上，并且同组中的storage server的服务端口必须一致，否则无法实现文件同步。</p>

<p>&emsp;&emsp;我先在一号服务器192.168.68.133上安装fastdfs。首先要准备安装环境，不同的linux发行版本可能会有所不同，我用的服务器版本是ubuntu 12.04 server，以下的操作均以这个版本的ubuntu服务器为例。<!--more--></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vim /etc/profile
</span><span class='line'>export LANGUAGE="en_US.UTF-8"
</span><span class='line'>export LANG=en_US:zh_CN.UTF-8
</span><span class='line'>export LC_ALL=C</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;接下来让语言环境配置参数立即生效：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source /etc/profile</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;再接着，安装fastdfs编译依赖包，大家要注意的是少一个依赖都不行，我先前安装时缺少了libevent-dev，致使安装不成功但安装过程又不报错，花费了大量的时间。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>aptitude install libevent
</span><span class='line'>apt-get install libevent-dev
</span><span class='line'>
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo aptitude install build-essential m4
</span><span class='line'>
</span><span class='line'>sudo ln -s /lib/lsb/init-functions  /etc/init.d/functions
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;好了，环境准备好了后就到<a href="https://code.google.com/p/fastdfs">fastdfs官网</a>上去下载安装包吧，地址<a href="https://code.google.com/p/fastdfs/downloads/list">https://code.google.com/p/fastdfs/downloads/list</a>，我下载的是
FastDFS_v4.06.tar.gz ，如果你想要安装最新版本，请用svn去下载最新的5.x版本。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tar -zxvf FastDFS_v4.06.tar.gz
</span><span class='line'>cd FastDFS </span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;这样就进入了源代码目录，我们先要对安装的目录做一个规划(4.06版本默认的安装目录似乎不太合理)，我将fastdfs的所有文件都安装到/usr/local/fastdfs中，配置文件存放在/usr/local/fastdfs/conf下，这就需要我们修改源代码目录下的make.sh，下面是一些要修改的地方：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vim make.sh</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;需要对：</p>

<ol>
<li><p> TARGET_PREFIX，TARGET_CONF_PATH进行修改;</p></li>
<li><p> 需要对libpthread.so、libpthread.a的路径进行修改，这和ubuntu有关，其它linux发行版本并不需要改这个(你可以用find / -name &lsquo;libpthread.so&rsquo;  ，以及ind / -name &lsquo;libpthread.a&rsquo;  找到这两文件在系统中的位置)；</p></li>
<li><p> 另外要对mkdir,cp操作的几个路径进行修改为我们配置文件所在的路径。</p></li>
</ol>


<p>&emsp;&emsp;我贴出make.sh修改过的地方，请大家自行对照：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>TARGET_PREFIX=/usr/local/fastdfs
</span><span class='line'>TARGET_CONF_PATH=/usr/local/fastdfs/conf
</span><span class='line'>
</span><span class='line'>if [ -f /usr/lib/i386-linux-gnu/libpthread.so ] || [ -f /usr/local/lib/libpthread.so ] || [ -f /lib64/libpthread.so ] || [ -f /usr/lib64/libpthread.so ] || [ -f /usr/lib/i386-linux-gnu/libpthread.a ] || [ -f /usr/local/lib/libpthread.a ] || [ -f /lib64/libpthread.a ] || [ -f /usr/lib64/libpthread.a ]; then
</span><span class='line'>............
</span><span class='line'>............
</span><span class='line'>
</span><span class='line'>if [ "$uname" = "Linux" ]; then
</span><span class='line'>    if [ "$WITH_LINUX_SERVICE" = "1" ]; then
</span><span class='line'>      if [ ! -d /usr/local/fastdfs/conf ]; then
</span><span class='line'>        mkdir -p /usr/local/fastdfs/conf
</span><span class='line'>        cp -f conf/tracker.conf /usr/local/fastdfs/conf/
</span><span class='line'>        cp -f conf/storage.conf /usr/local/fastdfs/conf/
</span><span class='line'>        cp -f conf/client.conf /usr/local/fastdfs/conf/
</span><span class='line'>        cp -f conf/http.conf /usr/local/fastdfs/conf/
</span><span class='line'>        cp -f conf/mime.types /usr/local/fastdfs/conf/
</span><span class='line'>      fi
</span><span class='line'>
</span><span class='line'>    
</span><span class='line'>............
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;下面开始安装吧，如下命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo make;
</span><span class='line'>sudo make install;
</span><span class='line'>sudo make clean;</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;不同的linux发行版本可能存在依赖包没有安装而报错，具体情况需要根据出错信息具体解决，我试过redhead,freebsd,openSuse,centos几个系统，都是要进行一些环境的配置才可以安装成功。</p>

<p>&emsp;&emsp;下一篇文章我将按照文章开头的服务器规划进行具体的配置，请大家关注。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分享几段数据导入导出参考代码]]></title>
    <link href="http://yanyaner.com/blog/2014/05/29/code-share-poi/"/>
    <updated>2014-05-29T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/05/29/code-share-poi</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;给童鞋写的几段参考demo代码，有需要的可以参考一下哦：</p>

<ol>
<li><p>poi excel数据导入（导入数据是考虑该数据已经存在的情况，如果存在则进行更新操作）</p></li>
<li><p>zip照片包导入（照片的导入会更新已经存在的照片并且会按业务规则建立照片目录分类存放）</p></li>
<li><p>按模板导格式导出数据至excel中（excel导出需要提供一个excel文件模板，将数据直接写到模板中，这样才能更好地符合用户的实际业务场景）</p></li>
</ol>


<p>&emsp;&emsp;下面这demo写得非常简单，并没有考虑导入出错时给予调用者出错的细节信息，这些代码大家都可以继续完善。另外你也可以将表和excel的字段对应关系保存在数据库中，让用户通过界面自由定义指定映射关系（当然这需要更深层次的封装，这个代码我以后贴出来）。</p>

<p>&emsp;&emsp;业务接口核心方法共3个，大家可以参考这种设计以简化调用者的复杂性：</p>

<figure class='code'><figcaption><span>ISystemService.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * demo系统业务接口</span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">ISystemService</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">importStudents</span><span class="o">(</span><span class="n">InputStream</span> <span class="n">excelIs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">classesId</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">importStudentPhotos</span><span class="o">(</span><span class="kt">byte</span><span class="o">[]</span> <span class="n">zipFileByte</span><span class="o">,</span> <span class="n">String</span> <span class="n">uploadDir</span><span class="o">,</span> <span class="kt">int</span> <span class="n">classesId</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">exportStudents</span><span class="o">(</span><span class="n">String</span> <span class="n">title</span> <span class="o">,</span> <span class="n">InputStream</span> <span class="n">templateFile</span><span class="o">,</span> <span class="n">OutputStream</span> <span class="n">outputFile</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;业务实现类代码如下：<!-- more --></p>

<figure class='code'><figcaption><span>SystemServiceImpl.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * demo系统业务类实现</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nd">@Service</span><span class="o">(</span><span class="s">&quot;systemService&quot;</span><span class="o">)</span>
</span><span class='line'><span class="nd">@Transactional</span><span class="o">(</span><span class="n">readOnly</span> <span class="o">=</span> <span class="kc">true</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SystemServiceImpl</span> <span class="kd">implements</span> <span class="n">ISystemService</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">// 通用dao</span>
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">IBaseDao</span> <span class="n">dao</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// 用来输出日志</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">LOG</span> <span class="o">=</span> <span class="n">LoggerFactory</span>
</span><span class='line'>          <span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">SystemServiceImpl</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">exportStudents</span><span class="o">(</span><span class="n">String</span> <span class="n">title</span> <span class="o">,</span><span class="n">InputStream</span> <span class="n">templateFile</span><span class="o">,</span> <span class="n">OutputStream</span> <span class="n">outputFile</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">HSSFWorkbook</span> <span class="n">wb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HSSFWorkbook</span><span class="o">(</span><span class="n">templateFile</span><span class="o">);</span>
</span><span class='line'>          <span class="n">HSSFSheet</span> <span class="n">sheet</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">getSheetAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="c1">//设置标题</span>
</span><span class='line'>          <span class="n">sheet</span><span class="o">.</span><span class="na">getRow</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getCell</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">title</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="c1">//取得模板行数据</span>
</span><span class='line'>          <span class="n">HSSFRow</span> <span class="n">templateRow</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">getRow</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="c1">//查询要导出的数据 </span>
</span><span class='line'>          <span class="n">List</span><span class="o">&lt;</span><span class="n">Student</span><span class="o">&gt;</span> <span class="n">students</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">queryEntitys</span><span class="o">(</span><span class="s">&quot;from Student s&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[]{});</span>
</span><span class='line'>          
</span><span class='line'>          <span class="kt">int</span> <span class="n">startRow</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="n">Student</span> <span class="n">s</span> <span class="o">:</span> <span class="n">students</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">HSSFRow</span> <span class="n">row</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">createRow</span><span class="o">(</span><span class="n">startRow</span><span class="o">);</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">HSSFCell</span> <span class="n">cell_id</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>              <span class="n">cell_id</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">templateRow</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getCellStyle</span><span class="o">());</span>
</span><span class='line'>              <span class="n">cell_id</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">HSSFCell</span> <span class="n">cell_name</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>              <span class="n">cell_name</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">templateRow</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="na">getCellStyle</span><span class="o">());</span>
</span><span class='line'>              <span class="n">cell_name</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">HSSFCell</span> <span class="n">cell_sex</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'>              <span class="n">cell_sex</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">templateRow</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="mi">2</span><span class="o">).</span><span class="na">getCellStyle</span><span class="o">());</span>
</span><span class='line'>              <span class="n">cell_sex</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">getSex</span><span class="o">());</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">HSSFCell</span> <span class="n">cell_bm_code</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
</span><span class='line'>              <span class="n">cell_bm_code</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">templateRow</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="mi">3</span><span class="o">).</span><span class="na">getCellStyle</span><span class="o">());</span>
</span><span class='line'>              <span class="n">cell_bm_code</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">getClasses</span><span class="o">().</span><span class="na">getCode</span><span class="o">()</span> <span class="o">+</span> <span class="n">s</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
</span><span class='line'>              
</span><span class='line'>              
</span><span class='line'>              <span class="n">HSSFCell</span> <span class="n">cell_classes_code</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">4</span><span class="o">);</span>
</span><span class='line'>              <span class="n">cell_classes_code</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">templateRow</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="mi">4</span><span class="o">).</span><span class="na">getCellStyle</span><span class="o">());</span>
</span><span class='line'>              <span class="n">cell_classes_code</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">getClasses</span><span class="o">().</span><span class="na">getCode</span><span class="o">());</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">startRow</span> <span class="o">=</span> <span class="n">startRow</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">wb</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">outputFile</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">LOG</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&quot;export excel error!&quot;</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>          <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">&quot;导出excel文件出错！&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Transactional</span><span class="o">(</span><span class="n">readOnly</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">importStudentPhotos</span><span class="o">(</span><span class="kt">byte</span><span class="o">[]</span> <span class="n">zipFileByte</span><span class="o">,</span> <span class="n">String</span> <span class="n">uploadDir</span><span class="o">,</span> <span class="kt">int</span> <span class="n">classId</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>              <span class="c1">//班级编码</span>
</span><span class='line'>              <span class="n">String</span> <span class="n">classesCode</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getClassesById</span><span class="o">(</span><span class="n">classId</span><span class="o">).</span><span class="na">getCode</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>              <span class="c1">//解压缩zip文件</span>
</span><span class='line'>              <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                  
</span><span class='line'>                  <span class="n">String</span> <span class="n">tempFileName</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;java.io.tmpdir&quot;</span><span class="o">)</span> <span class="o">+</span>  <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>                  <span class="n">File</span> <span class="n">tempFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">tempFileName</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">FileUtils</span><span class="o">.</span><span class="na">writeByteArrayToFile</span><span class="o">(</span><span class="n">tempFile</span><span class="o">,</span> <span class="n">zipFileByte</span><span class="o">);</span>
</span><span class='line'>                  
</span><span class='line'>                  <span class="c1">//本班的所有学生</span>
</span><span class='line'>                  <span class="n">List</span><span class="o">&lt;</span><span class="n">Student</span><span class="o">&gt;</span> <span class="n">students</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Student</span><span class="o">&gt;(</span><span class="n">getClassesById</span><span class="o">(</span><span class="n">classId</span><span class="o">).</span><span class="na">getStudents</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>                  <span class="n">ZipFile</span> <span class="n">zipfile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZipFile</span><span class="o">(</span><span class="n">tempFile</span><span class="o">,</span> <span class="s">&quot;gb2312&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">Enumeration</span><span class="o">&lt;</span><span class="n">ZipArchiveEntry</span><span class="o">&gt;</span> <span class="n">entries</span> <span class="o">=</span> <span class="n">zipfile</span><span class="o">.</span><span class="na">getEntries</span><span class="o">();</span>
</span><span class='line'>                  <span class="k">while</span> <span class="o">(</span><span class="n">entries</span><span class="o">.</span><span class="na">hasMoreElements</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                      
</span><span class='line'>                      <span class="n">ZipArchiveEntry</span> <span class="n">entry</span> <span class="o">=</span> <span class="n">entries</span><span class="o">.</span><span class="na">nextElement</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>                      <span class="k">if</span> <span class="o">(!</span> <span class="n">entry</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                          <span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">entry</span><span class="o">.</span><span class="na">getName</span><span class="o">();</span>
</span><span class='line'>                          <span class="n">String</span> <span class="n">studentName</span> <span class="o">=</span> <span class="n">name</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">name</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="s">&quot;.&quot;</span><span class="o">));</span>
</span><span class='line'>                          
</span><span class='line'>                          <span class="k">for</span> <span class="o">(</span><span class="n">Student</span> <span class="n">stu</span> <span class="o">:</span> <span class="n">students</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                              <span class="k">if</span> <span class="o">(</span><span class="n">studentName</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">stu</span><span class="o">.</span><span class="na">getName</span><span class="o">()))</span> <span class="o">{</span>
</span><span class='line'>                                  <span class="n">String</span> <span class="n">newPhotoName</span> <span class="o">=</span> <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">()</span> <span class="o">+</span> <span class="n">name</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="s">&quot;.&quot;</span><span class="o">));</span>
</span><span class='line'>                                  <span class="k">if</span> <span class="o">(!</span> <span class="s">&quot;upload/default.jpg&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">stu</span><span class="o">.</span><span class="na">getPhoto</span><span class="o">()))</span> <span class="o">{</span>
</span><span class='line'>                                      <span class="n">newPhotoName</span> <span class="o">=</span> <span class="n">stu</span><span class="o">.</span><span class="na">getPhoto</span><span class="o">().</span><span class="na">substring</span><span class="o">(</span><span class="n">stu</span><span class="o">.</span><span class="na">getPhoto</span><span class="o">().</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>                                  <span class="o">}</span>
</span><span class='line'>                                  
</span><span class='line'>                                  <span class="n">FileUtils</span><span class="o">.</span><span class="na">copyInputStreamToFile</span><span class="o">(</span><span class="n">zipfile</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">(</span><span class="n">entry</span><span class="o">),</span>
</span><span class='line'>                                          <span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="n">uploadDir</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">classesCode</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">newPhotoName</span><span class="o">));</span>
</span><span class='line'>                                  <span class="n">stu</span><span class="o">.</span><span class="na">setPhoto</span><span class="o">(</span><span class="s">&quot;upload/&quot;</span> <span class="o">+</span> <span class="n">classesCode</span> <span class="o">+</span> <span class="s">&quot;/&quot;</span> <span class="o">+</span> <span class="n">newPhotoName</span><span class="o">);</span>
</span><span class='line'>                                  <span class="n">dao</span><span class="o">.</span><span class="na">updateEntity</span><span class="o">(</span><span class="n">stu</span><span class="o">);</span>
</span><span class='line'>                                  <span class="k">break</span><span class="o">;</span>
</span><span class='line'>                              <span class="o">}</span>
</span><span class='line'>                          <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>                      <span class="o">}</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>                  
</span><span class='line'>              <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">LOG</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&quot;import zip photo error.&quot;</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>                  <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span><span class="o">(</span><span class="s">&quot;导入学生照片信息失败，详细错误：&quot;</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="nd">@Transactional</span><span class="o">(</span><span class="n">readOnly</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">importStudents</span><span class="o">(</span><span class="n">InputStream</span> <span class="n">excelIs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">classesId</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//查询出要导入的学生信息所在的班级</span>
</span><span class='line'>      <span class="n">Classes</span> <span class="n">classes</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getClassesById</span><span class="o">(</span><span class="n">classesId</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">HSSFWorkbook</span> <span class="n">excel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HSSFWorkbook</span><span class="o">(</span><span class="n">excelIs</span><span class="o">);</span>
</span><span class='line'>          <span class="n">HSSFSheet</span> <span class="n">sheet</span> <span class="o">=</span> <span class="n">excel</span><span class="o">.</span><span class="na">getSheetAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="kt">int</span> <span class="n">rows</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">getPhysicalNumberOfRows</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">//有效行起始位置，因为原excel文件中，有两行标题</span>
</span><span class='line'>          <span class="kt">int</span> <span class="n">startRow</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">startRow</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">rows</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>              <span class="n">HSSFRow</span> <span class="n">row</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">getRow</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>              <span class="n">HSSFCell</span> <span class="n">cell</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>              <span class="n">Student</span> <span class="n">student</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Student</span><span class="o">();</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">//excel文件列顺序：序号，姓名，性别，年龄</span>
</span><span class='line'>              <span class="n">student</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">row</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="na">getStringCellValue</span><span class="o">());</span>
</span><span class='line'>              <span class="n">student</span><span class="o">.</span><span class="na">setSex</span><span class="o">(</span><span class="n">row</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="mi">2</span><span class="o">).</span><span class="na">getStringCellValue</span><span class="o">());</span>
</span><span class='line'>              <span class="n">student</span><span class="o">.</span><span class="na">setAge</span><span class="o">((</span><span class="kt">int</span><span class="o">)</span> <span class="n">row</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="mi">3</span><span class="o">).</span><span class="na">getNumericCellValue</span><span class="o">());</span>
</span><span class='line'>              <span class="n">student</span><span class="o">.</span><span class="na">setClasses</span><span class="o">(</span><span class="n">classes</span><span class="o">);</span>
</span><span class='line'>              <span class="n">student</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="s">&quot;123&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="n">student</span><span class="o">.</span><span class="na">setState</span><span class="o">(</span><span class="n">Student</span><span class="o">.</span><span class="na">STATE_STUDING</span><span class="o">);</span>
</span><span class='line'>              <span class="n">student</span><span class="o">.</span><span class="na">setEmployment</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>              <span class="n">student</span><span class="o">.</span><span class="na">setCode</span><span class="o">(</span><span class="n">classesId</span> <span class="o">+</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>                      <span class="o">+</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">row</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getNumericCellValue</span><span class="o">());</span>
</span><span class='line'>                      
</span><span class='line'>              <span class="k">this</span><span class="o">.</span><span class="na">addStudent</span><span class="o">(</span><span class="n">student</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>          <span class="c1">//e.printStackTrace();</span>
</span><span class='line'>          <span class="n">LOG</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&quot;导入excel文件失败！&quot;</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;前端控制器代码如下：</p>

<figure class='code'><figcaption><span>StudentAction.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Controller</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">StudentAction</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">ISystemService</span> <span class="n">systemService</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">WebApplicationContext</span> <span class="n">appContext</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="n">ObjectMapper</span> <span class="n">om</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectMapper</span><span class="o">();</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 导出学生信息到excel</span>
</span><span class='line'><span class="cm">  * @param sid</span>
</span><span class='line'><span class="cm">  * @param resp</span>
</span><span class='line'><span class="cm">  * @throws Exception</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&quot;/student/export_excel&quot;</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="n">RequestMethod</span><span class="o">.</span><span class="na">GET</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">exportStudents</span><span class="o">(</span><span class="n">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">templateFile</span> <span class="o">=</span> <span class="n">appContext</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">().</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">&quot;template/student_template.xls&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">title</span> <span class="o">=</span> <span class="s">&quot;xxxxxx缴费情况表（2014）&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="n">title</span> <span class="o">+</span> <span class="s">&quot;.xls&quot;</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//设置客户端默认文件名</span>
</span><span class='line'>      <span class="n">resp</span><span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;Content-Disposition&quot;</span><span class="o">,</span> <span class="s">&quot;attachment;filename=&quot;</span> <span class="o">+</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">fileName</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(),</span><span class="s">&quot;ISO8859-1&quot;</span><span class="o">));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">systemService</span><span class="o">.</span><span class="na">exportStudents</span><span class="o">(</span><span class="n">title</span><span class="o">,</span> <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="n">templateFile</span><span class="o">),</span> <span class="n">resp</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 导入学生照片信息</span>
</span><span class='line'><span class="cm">  * @param sid</span>
</span><span class='line'><span class="cm">  * @param resp</span>
</span><span class='line'><span class="cm">  * @throws Exception</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&quot;/student/importPhoto&quot;</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="n">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">inportStudentPhoto</span><span class="o">(</span><span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&quot;file&quot;</span><span class="o">)</span><span class="n">CommonsMultipartFile</span> <span class="n">file</span><span class="o">,</span>
</span><span class='line'>          <span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&quot;classId&quot;</span><span class="o">)</span><span class="kt">int</span> <span class="n">classId</span><span class="o">,</span>
</span><span class='line'>          <span class="n">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">successFlag</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">dir</span> <span class="o">=</span> <span class="n">appContext</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">().</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">&quot;upload&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">systemService</span><span class="o">.</span><span class="na">importStudentPhotos</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(),</span> <span class="n">dir</span> <span class="o">,</span> <span class="n">classId</span><span class="o">);</span>
</span><span class='line'>          <span class="n">successFlag</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">resp</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;&lt;script&gt;parent.callBack(&quot;</span><span class="o">+</span><span class="n">successFlag</span><span class="o">+</span><span class="s">&quot;);&lt;/script&gt;&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//导入excle的action代码非常简单，我就不再写了</span>
</span><span class='line'>  
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;以前还写过一篇简单的excel导出代码，大家可以看看<a href="http://yanyaner.com/blog/2012/10/30/poi-excel/">《Excel文件导出代码》</a>一文。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java安全那些事之六（客户端安全）]]></title>
    <link href="http://yanyaner.com/blog/2014/05/23/security6/"/>
    <updated>2014-05-23T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/05/23/security6</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;这篇文章我想说一下客户端保存密码的安全性问题。目前在客户端保存用户登录密码的场景非常的普遍，尤其是在手机客户端应用中更为常见。下图是一个浏览器端中设计的保存密码界面。</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/05/auto_login.jpg' width='' height='' title='保存密码及自动登录界面'><span class='caption-text'>保存密码及自动登录界面</span></span></p>

<p>&emsp;&emsp;图中，用户可以选择保存自己的用户名和密码，如果用户选择了这一项，密码当然是保存在客户端的哦（浏览器中就是cookie）。在保存了上次登录密码的情况下客户端再次进行手动或自动登录时，客户端将取出自动保存的密码提交到服务器。</p>

<p>&emsp;&emsp;我们可以想像到，如果将密码以明文的方式保存到客户端显然是不可取的。对密码进行加密处理后再保存客户端是一个可行的做法，但对密码加密的算法就值得我们去选择，base64肯定是不行的了，DES、RSA都是可以选择的加密方法，因为这些算法是可还原的算法，也就是说服务器收到加密密码后须还原成明文，再执行后续的登录业务。</p>

<p>&emsp;&emsp;交互示意图如下：</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/05/seq_auto_login.jpg' width='' height='' title='保存密码登录处理时序'><span class='caption-text'>保存密码登录处理时序</span></span></p>

<p>&emsp;&emsp;简单地给大家解释一下上图中的流程：</p>

<p>&emsp;&emsp;客户端在第一次登录时，如果选择了记录用户名和密码，在第一次登录成功后系统将返回经过加密处理的密码，客户端在得加密密码后进行本地保存（时序2.1为客户端保存服务器端返回的经过加密处理的密码）。</p>

<p>&emsp;&emsp;客户端在第二次登录时提交的是曾经保存的加密密码，服务器得到密码后检测出来是经过加密处理的密码（时序3.1的处理）。</p>

<p>&emsp;&emsp;服务器端进行安全检测（比如本次登录ip和上次不同等方法），如果检测没有通过就进行异常处理，比如返回图片验证码让用户输入或要求用户重新输入密码等（时序3.2即是这个处理）。</p>

<p>&emsp;&emsp;安全检测通过后，系统将解密还原加密的密码（时序3.3的处理），这个过程可能会用到密钥，如果采用的是RSA加密算法，这时可从数据库中取出模和指数生成私钥，以便进行解密处理。</p>

<p>&emsp;&emsp;解密成功后，即可调用正常登录业务逻辑（时序3.4）。</p>

<p>&emsp;&emsp;下图是在浏览器cookies中保存了加密密码的界面截图：</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/05/auto_login_cookies.jpg' width='' height='' title='cookies中的内容'><span class='caption-text'>cookies中的内容</span></span></p>

<p>&emsp;&emsp;不多说了，下面给出演示代码，我用的是RSA密码加密算法。首先贴出登录的html代码:<!--more--></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>         <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span> <span class="na">style=</span><span class="s">&quot;height: 50px;&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>          <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-md-6 col-md-offset-2&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;form</span> <span class="na">class=</span><span class="s">&quot;form-horizontal&quot;</span> <span class="na">role=</span><span class="s">&quot;form&quot;</span> <span class="na">id=</span><span class="s">&quot;loginForm&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                          <span class="nt">&lt;label</span>  <span class="na">class=</span><span class="s">&quot;col-sm-4 control-label&quot;</span><span class="nt">&gt;</span>登录编码:<span class="nt">&lt;/label&gt;</span>
</span><span class='line'>                          <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-sm-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                              <span class="nt">&lt;input</span> <span class="na">value=</span><span class="s">&quot;lovo&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;name&quot;</span> <span class="na">class=</span><span class="s">&quot;form-control&quot;</span>  <span class="na">placeholder=</span><span class="s">&quot;请输入用户名&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                          <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>                      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>                      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                          <span class="nt">&lt;label</span>  <span class="na">class=</span><span class="s">&quot;col-sm-4 control-label&quot;</span><span class="nt">&gt;</span>登录密码:<span class="nt">&lt;/label&gt;</span>
</span><span class='line'>                          <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-sm-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                              <span class="nt">&lt;input</span> <span class="na">value=</span><span class="s">&quot;111&quot;</span> <span class="na">type=</span><span class="s">&quot;password&quot;</span> <span class="na">name=</span><span class="s">&quot;password&quot;</span> <span class="na">id=</span><span class="s">&quot;i_pwd&quot;</span> <span class="na">class=</span><span class="s">&quot;form-control&quot;</span>  <span class="na">placeholder=</span><span class="s">&quot;请输入密码&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                          <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>                      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>                       <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                          <span class="nt">&lt;label</span>  <span class="na">class=</span><span class="s">&quot;col-sm-4 control-label&quot;</span><span class="nt">&gt;&lt;/label&gt;</span>
</span><span class='line'>                          <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-sm-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                              <span class="nt">&lt;input</span> <span class="na">value=</span><span class="s">&quot;1&quot;</span> <span class="na">type=</span><span class="s">&quot;checkbox&quot;</span> <span class="na">name=</span><span class="s">&quot;savePwd&quot;</span> <span class="na">id=</span><span class="s">&quot;chk_sp&quot;</span> <span class="nt">&gt;</span>保存用户名和密码
</span><span class='line'>                              <span class="nt">&lt;input</span> <span class="na">value=</span><span class="s">&quot;1&quot;</span> <span class="na">type=</span><span class="s">&quot;checkbox&quot;</span> <span class="na">name=</span><span class="s">&quot;autoLogin&quot;</span>  <span class="na">id=</span><span class="s">&quot;chk_al&quot;</span><span class="nt">&gt;</span>自动登录
</span><span class='line'>                          <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>                      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>                      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                          <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-sm-offset-5 &quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                              <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">class=</span><span class="s">&quot;btn btn-lg btn-primary&quot;</span> <span class="na">id=</span><span class="s">&quot;btn_login&quot;</span><span class="nt">&gt;</span>登录<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>                              <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">&quot;reset&quot;</span> <span class="na">class=</span><span class="s">&quot;btn btn-lg col-sm-offset-2&quot;</span><span class="nt">&gt;</span>重置<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>                          <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>                      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;/form&gt;</span>
</span><span class='line'>
</span><span class='line'>              <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>     <span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;接下来是页面的行为，即js代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="nx">link</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;lib/bootstrap/css/bootstrap.min.css&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">link</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;lib/bootstrap/css/bootstrap-theme.min.css&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">link</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span>  <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;css/project.css&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;lib/jquery/jquery-1.7.2.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;lib/cookie/jquery.cookie.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s2">&quot;pwd&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#i_pwd&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s2">&quot;pwd&quot;</span><span class="p">));</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#chk_sp&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">,</span> <span class="s2">&quot;checked&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#btn_login&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span> 
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//登录系统调用</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>          <span class="nx">url</span><span class="o">:</span><span class="s2">&quot;login&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">type</span><span class="o">:</span><span class="s2">&quot;get&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">data</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#loginForm&quot;</span><span class="p">).</span><span class="nx">serialize</span><span class="p">(),</span>
</span><span class='line'>          <span class="c1">//data:{&quot;name&quot;:encodeURI($(&quot;input[name=&#39;name&#39;]&quot;).val()),&quot;password&quot;:$(&quot;input[name=&#39;password&#39;]&quot;).val()},</span>
</span><span class='line'>          <span class="nx">dataType</span><span class="o">:</span><span class="s2">&quot;json&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">success</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="nx">result</span><span class="p">.</span><span class="nx">code</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">alert</span><span class="p">(</span><span class="nx">result</span><span class="p">.</span><span class="nx">msg</span><span class="p">);</span>
</span><span class='line'>              <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s2">&quot;auto_login&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                      <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;恭喜&quot;</span> <span class="o">+</span> <span class="nx">result</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s2">&quot;登录成功！&quot;</span><span class="p">);</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>                  <span class="c1">//进行cookie的设置</span>
</span><span class='line'>                  <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#chk_sp&quot;</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:checked&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                      <span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s2">&quot;pwd&quot;</span><span class="p">,</span><span class="nx">result</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">encyPwd</span><span class="p">,{</span><span class="nx">expires</span><span class="o">:</span><span class="nx">result</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">expires</span><span class="p">});</span>
</span><span class='line'>                  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                      <span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s2">&quot;pwd&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,{</span><span class="nx">expires</span><span class="o">:-</span><span class="mi">1</span><span class="p">});</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>                  
</span><span class='line'>                  <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#chk_al&quot;</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:checked&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                      <span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s2">&quot;auto_login&quot;</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,{</span><span class="nx">expires</span><span class="o">:</span><span class="nx">result</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">expires</span><span class="p">});</span>
</span><span class='line'>                  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                      <span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s2">&quot;auto_login&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,{</span><span class="nx">expires</span><span class="o">:-</span><span class="mi">1</span><span class="p">});</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>                  
</span><span class='line'>                  <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="s2">&quot;main/pet_list.html&quot;</span><span class="p">;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s2">&quot;auto_login&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#chk_al&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">,</span> <span class="s2">&quot;checked&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#btn_login&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;服务器端登录部分的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Controller</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LoginAction</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">IMyService</span> <span class="n">myService</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//保存用户名和密码天数</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">EXPIRES_DAYS</span> <span class="o">=</span> <span class="mi">7</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">//加密后的密码后缀</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">ENCY_PWD_END</span> <span class="o">=</span> <span class="s">&quot;*ENCY*&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 登录系统</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span><span class="o">=</span><span class="s">&quot;/login&quot;</span><span class="o">,</span> <span class="n">method</span><span class="o">=</span><span class="n">RequestMethod</span><span class="o">.</span><span class="na">GET</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">login</span><span class="o">(</span>
</span><span class='line'>          <span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">nickName</span><span class="o">,</span>
</span><span class='line'>          <span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&quot;password&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">password</span><span class="o">,</span>
</span><span class='line'>          <span class="nd">@RequestParam</span><span class="o">(</span><span class="n">value</span><span class="o">=</span><span class="s">&quot;savePwd&quot;</span><span class="o">,</span><span class="n">defaultValue</span><span class="o">=</span><span class="s">&quot;0&quot;</span><span class="o">)</span> <span class="kt">int</span> <span class="n">savePassword</span><span class="o">,</span>
</span><span class='line'>          <span class="n">HttpSession</span> <span class="n">session</span><span class="o">,</span>
</span><span class='line'>          <span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span>
</span><span class='line'>          <span class="n">HttpServletResponse</span> <span class="n">response</span>
</span><span class='line'>          <span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//nickName = URLDecoder.decode(nickName,&quot;utf-8&quot;);</span>
</span><span class='line'>      <span class="n">nickName</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">nickName</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">&quot;iso8859-1&quot;</span><span class="o">),</span><span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>      <span class="n">ObjectMapper</span> <span class="n">om</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectMapper</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ResponseResult</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ResponseResult</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">password</span><span class="o">.</span><span class="na">endsWith</span><span class="o">(</span><span class="n">ENCY_PWD_END</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">//加密的密码，取掉最后的标识 </span>
</span><span class='line'>              <span class="n">Pet</span> <span class="n">p</span> <span class="o">=</span> <span class="n">myService</span><span class="o">.</span><span class="na">getPetByNickName</span><span class="o">(</span><span class="n">nickName</span><span class="o">);</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">p</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">result</span><span class="o">.</span><span class="na">setCode</span><span class="o">(</span><span class="n">ResponseResult</span><span class="o">.</span><span class="na">FAIL</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">result</span><span class="o">.</span><span class="na">setMsg</span><span class="o">(</span><span class="s">&quot;登录用户不存！&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">om</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">(),</span> <span class="n">result</span><span class="o">);</span>
</span><span class='line'>                  <span class="k">return</span> <span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">//check safe</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getLastLoginIp</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span>
</span><span class='line'>                      <span class="o">&amp;&amp;</span> <span class="o">!</span> <span class="n">p</span><span class="o">.</span><span class="na">getLastLoginIp</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">()))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="c1">//安全检测规则，及安全检测失败的处理，由用户给出实现</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="c1">//根据数据库保存的moduls和exponent生成私钥</span>
</span><span class='line'>               <span class="n">RSAPrivateKey</span> <span class="n">rpk</span> <span class="o">=</span> <span class="n">RSAUtil</span><span class="o">.</span><span class="na">generatePrivateKey</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getPrivateModulus</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getPrivateExponent</span><span class="o">());</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">//将密码解密为原文处理</span>
</span><span class='line'>              <span class="n">Cipher</span> <span class="n">cipherDecoder</span> <span class="o">=</span> <span class="n">Cipher</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="n">cipherDecoder</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">Cipher</span><span class="o">.</span><span class="na">DECRYPT_MODE</span><span class="o">,</span> <span class="n">rpk</span><span class="o">);</span>
</span><span class='line'>              <span class="kt">byte</span><span class="o">[]</span> <span class="n">orgDec</span> <span class="o">=</span> <span class="n">cipherDecoder</span><span class="o">.</span><span class="na">doFinal</span><span class="o">(</span><span class="n">Hex</span><span class="o">.</span><span class="na">decodeHex</span><span class="o">(</span><span class="n">password</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="n">password</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">-</span> <span class="n">ENCY_PWD_END</span><span class="o">.</span><span class="na">length</span><span class="o">()).</span><span class="na">toCharArray</span><span class="o">()));</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">password</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">orgDec</span><span class="o">)</span> <span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">Pet</span> <span class="n">pet</span> <span class="o">=</span> <span class="n">myService</span><span class="o">.</span><span class="na">login</span><span class="o">(</span><span class="n">nickName</span><span class="o">,</span> <span class="n">password</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">session</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="n">IConst</span><span class="o">.</span><span class="na">LOGIN_KEY</span><span class="o">,</span> <span class="n">pet</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">Map</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">();</span>
</span><span class='line'>          <span class="n">data</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">,</span> <span class="n">pet</span><span class="o">.</span><span class="na">getNickName</span><span class="o">());</span>
</span><span class='line'>          
</span><span class='line'>          
</span><span class='line'>          <span class="c1">//响应中加入cookie信息</span>
</span><span class='line'>          <span class="n">Cookie</span> <span class="n">cookie</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Cookie</span><span class="o">(</span><span class="s">&quot;pwd&quot;</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">savePassword</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">//用户需要保存密码</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">//生成rsa keyPair</span>
</span><span class='line'>              <span class="n">Map</span> <span class="n">keyPair</span> <span class="o">=</span> <span class="n">RSAUtil</span><span class="o">.</span><span class="na">generateKeyPair</span><span class="o">();</span>
</span><span class='line'>              <span class="n">RSAPublicKey</span> <span class="n">publicKey</span> <span class="o">=</span> <span class="o">(</span><span class="n">RSAPublicKey</span><span class="o">)</span><span class="n">keyPair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">RSAUtil</span><span class="o">.</span><span class="na">PUBLIC_KEY</span><span class="o">);</span>
</span><span class='line'>              <span class="n">RSAPrivateKey</span> <span class="n">privateKey</span> <span class="o">=</span> <span class="o">(</span><span class="n">RSAPrivateKey</span><span class="o">)</span><span class="n">keyPair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">RSAUtil</span><span class="o">.</span><span class="na">PRIVATE_KEY</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>              <span class="c1">//下面私钥的模和指数保存至数据库</span>
</span><span class='line'>              <span class="n">pet</span><span class="o">.</span><span class="na">setPrivateModulus</span><span class="o">(</span><span class="n">privateKey</span><span class="o">.</span><span class="na">getModulus</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>              <span class="n">pet</span><span class="o">.</span><span class="na">setPrivateExponent</span><span class="o">(</span><span class="n">privateKey</span><span class="o">.</span><span class="na">getPrivateExponent</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>              <span class="n">pet</span><span class="o">.</span><span class="na">setLastLoginIp</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">());</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">myService</span><span class="o">.</span><span class="na">updatePet</span><span class="o">(</span><span class="n">pet</span><span class="o">);</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">Cipher</span> <span class="n">cipherEncoder</span> <span class="o">=</span> <span class="n">Cipher</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="n">cipherEncoder</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">Cipher</span><span class="o">.</span><span class="na">ENCRYPT_MODE</span><span class="o">,</span> <span class="n">publicKey</span><span class="o">);</span>
</span><span class='line'>              <span class="c1">//加密字串结果</span>
</span><span class='line'>              <span class="kt">byte</span><span class="o">[]</span> <span class="n">strEnc</span> <span class="o">=</span> <span class="n">cipherEncoder</span><span class="o">.</span><span class="na">doFinal</span><span class="o">(</span><span class="n">password</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">String</span> <span class="n">encyPwd</span> <span class="o">=</span> <span class="n">Hex</span><span class="o">.</span><span class="na">encodeHexString</span><span class="o">(</span><span class="n">strEnc</span><span class="o">)</span> <span class="o">+</span> <span class="n">ENCY_PWD_END</span><span class="o">;</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">//响应中加入cookie信息</span>
</span><span class='line'>              <span class="n">cookie</span><span class="o">.</span><span class="na">setValue</span><span class="o">(</span><span class="n">encyPwd</span><span class="o">);</span>
</span><span class='line'>              <span class="n">cookie</span><span class="o">.</span><span class="na">setMaxAge</span><span class="o">(</span><span class="n">EXPIRES_DAYS</span><span class="o">*</span><span class="mi">24</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="o">);</span>
</span><span class='line'>              <span class="c1">//cookie.seth</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">data</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;encyPwd&quot;</span><span class="o">,</span> <span class="n">encyPwd</span><span class="o">);</span>
</span><span class='line'>              <span class="n">data</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;expires&quot;</span><span class="o">,</span> <span class="n">EXPIRES_DAYS</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">//删除cookie</span>
</span><span class='line'>              <span class="n">cookie</span><span class="o">.</span><span class="na">setMaxAge</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>    
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">result</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">response</span><span class="o">.</span><span class="na">addCookie</span><span class="o">(</span><span class="n">cookie</span><span class="o">);</span>
</span><span class='line'>          <span class="n">om</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">(),</span> <span class="n">result</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">SecurityException</span> <span class="n">se</span> <span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">se</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">result</span><span class="o">.</span><span class="na">setCode</span><span class="o">(</span><span class="n">ResponseResult</span><span class="o">.</span><span class="na">FAIL</span><span class="o">);</span>
</span><span class='line'>          <span class="n">result</span><span class="o">.</span><span class="na">setMsg</span><span class="o">(</span><span class="n">se</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">om</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">(),</span> <span class="n">result</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Entity</span>
</span><span class='line'><span class="nd">@Table</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;t_pet&quot;</span><span class="o">)</span>
</span><span class='line'><span class="nd">@JsonFilter</span><span class="o">(</span><span class="s">&quot;myPet&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">Pet</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">nickName</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">password</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">gender</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Date</span> <span class="n">birthday</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">privateModulus</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">privateExponent</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">lastLoginIp</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">//......略</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;最后贴出RSA工具类，因为上面的登录代码中用到了。</p>

<figure class='code'><figcaption><span>RSAUtil.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RSAUtil</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">PUBLIC_KEY</span> <span class="o">=</span> <span class="s">&quot;public_key&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">PRIVATE_KEY</span> <span class="o">=</span> <span class="s">&quot;private_key&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//生成RSA密钥的位数</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">ENC_LENGTH</span> <span class="o">=</span> <span class="mi">512</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">Map</span> <span class="nf">generateKeyPair</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">KeyPairGenerator</span> <span class="n">keyPairGen</span><span class="o">;</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">keyPairGen</span> <span class="o">=</span> <span class="n">KeyPairGenerator</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="n">keyPairGen</span><span class="o">.</span><span class="na">initialize</span><span class="o">(</span><span class="n">ENC_LENGTH</span><span class="o">);</span>
</span><span class='line'>          <span class="n">KeyPair</span> <span class="n">keyPair</span> <span class="o">=</span> <span class="n">keyPairGen</span><span class="o">.</span><span class="na">generateKeyPair</span><span class="o">();</span>
</span><span class='line'>              
</span><span class='line'>          <span class="n">Map</span> <span class="n">keys</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">();</span>
</span><span class='line'>          <span class="n">keys</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">PUBLIC_KEY</span><span class="o">,</span> <span class="n">keyPair</span><span class="o">.</span><span class="na">getPublic</span><span class="o">());</span>
</span><span class='line'>          <span class="n">keys</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">PRIVATE_KEY</span><span class="o">,</span> <span class="n">keyPair</span><span class="o">.</span><span class="na">getPrivate</span><span class="o">());</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">return</span> <span class="n">keys</span><span class="o">;</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NoSuchAlgorithmException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 使用模和指数生成RSA公钥</span>
</span><span class='line'><span class="cm">  * 注意：【此代码用了默认补位方式，为RSA/None/PKCS1Padding，不同JDK默认的补位方式可能不同，如Android默认是RSA</span>
</span><span class='line'><span class="cm">  * /None/NoPadding】</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @param modulus</span>
</span><span class='line'><span class="cm">  *            模</span>
</span><span class='line'><span class="cm">  * @param exponent</span>
</span><span class='line'><span class="cm">  *            指数</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">RSAPublicKey</span> <span class="nf">generatePublicKey</span><span class="o">(</span><span class="n">String</span> <span class="n">modulus</span><span class="o">,</span> <span class="n">String</span> <span class="n">exponent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">BigInteger</span> <span class="n">b1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigInteger</span><span class="o">(</span><span class="n">modulus</span><span class="o">);</span>
</span><span class='line'>          <span class="n">BigInteger</span> <span class="n">b2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigInteger</span><span class="o">(</span><span class="n">exponent</span><span class="o">);</span>
</span><span class='line'>          <span class="n">KeyFactory</span> <span class="n">keyFactory</span> <span class="o">=</span> <span class="n">KeyFactory</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="n">RSAPublicKeySpec</span> <span class="n">keySpec</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RSAPublicKeySpec</span><span class="o">(</span><span class="n">b1</span><span class="o">,</span> <span class="n">b2</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span> <span class="o">(</span><span class="n">RSAPublicKey</span><span class="o">)</span> <span class="n">keyFactory</span><span class="o">.</span><span class="na">generatePublic</span><span class="o">(</span><span class="n">keySpec</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 使用模和指数生成RSA私钥</span>
</span><span class='line'><span class="cm">  * 注意：【此代码用了默认补位方式，为RSA/None/PKCS1Padding，不同JDK默认的补位方式可能不同，如Android默认是RSA</span>
</span><span class='line'><span class="cm">  * /None/NoPadding】</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @param modulus</span>
</span><span class='line'><span class="cm">  *            模</span>
</span><span class='line'><span class="cm">  * @param exponent</span>
</span><span class='line'><span class="cm">  *            指数</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">RSAPrivateKey</span> <span class="nf">generatePrivateKey</span><span class="o">(</span><span class="n">String</span> <span class="n">modulus</span><span class="o">,</span>
</span><span class='line'>          <span class="n">String</span> <span class="n">exponent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">BigInteger</span> <span class="n">b1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigInteger</span><span class="o">(</span><span class="n">modulus</span><span class="o">);</span>
</span><span class='line'>          <span class="n">BigInteger</span> <span class="n">b2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigInteger</span><span class="o">(</span><span class="n">exponent</span><span class="o">);</span>
</span><span class='line'>          <span class="n">KeyFactory</span> <span class="n">keyFactory</span> <span class="o">=</span> <span class="n">KeyFactory</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="n">RSAPrivateKeySpec</span> <span class="n">keySpec</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RSAPrivateKeySpec</span><span class="o">(</span><span class="n">b1</span><span class="o">,</span> <span class="n">b2</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span> <span class="o">(</span><span class="n">RSAPrivateKey</span><span class="o">)</span> <span class="n">keyFactory</span><span class="o">.</span><span class="na">generatePrivate</span><span class="o">(</span><span class="n">keySpec</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;上面的代码写得比较乱且粗糙，仅供大家了解我描述的处理步骤哦。如果你要把上面的代码用于生产环境则必须进行重构，可考虑把所有的逻辑都放入login这个业务方法中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java安全那些事之五（客户端安全）]]></title>
    <link href="http://yanyaner.com/blog/2014/04/21/security5/"/>
    <updated>2014-04-21T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/04/21/security5</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;安全问题的水很深，“乌云”平台上曝光的一些漏洞不凡BAT(百度、阿里、腾讯)等一些大的公司，这些公司一般都有专业的安全团队都会出问题，更何况一些小的公司。本文简单讲解前端的一些安全知识，以引起大家注意。</p>

<p>&emsp;&emsp;前端常见的安全问题有：sql注入，xss以及csrf这几大类，而解决的核心思路就是：不要信任用户提交的任何东西。</p>

<p>&emsp;&emsp;sql注入问题虽然是一个古老的问题，但目前仍然还是有很多系统存在这个漏洞，避免sql注入漏洞说来也是比较简单的，程序开发人员要特别注意的是：不要把用户的输入直接拼装成sql然后执行。java中的主流orm框架如hibernate、ibatis等都考虑到这个问题，如果你用原生jdbc编程则需要预编译你的sql得到PreparedStatement，另外，alibaba的druid数据源中如果开启了wall filter也具备jdbc底层的sql注入防护功能。</p>

<p>&emsp;&emsp;再来看xss，xss是跨站脚本攻击，比如你的一个界面字段中用户输入了有具有执行能力的js代码，如果服务器端不做任何处理就将用户输入保存到数据库中，前端展示又直接将数据库中取出的内容拼在页面中，就会存在xss漏洞。当有其它用户在查看到这段信息时，就有可能把用户的cookie等信息发送到对方指定的服务器上，这真的是太危险了。</p>

<p>&emsp;&emsp;xss的解决办法主要是对客户输入的内容进行过淲处理，也有人叫“消毒”。</p>

<p>&emsp;&emsp;比如下面的一段代码，就实现了简单粗暴式的用户输入消毒。<!--more--></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">Logger</span> <span class="n">log</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="s">&quot;[HtmlCodeUtil]&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">regEx_script</span> <span class="o">=</span> <span class="s">&quot;&lt;[\\s]*?script[^&gt;]*?&gt;[\\s\\S]*?&lt;[\\s]*?\\/[\\s]*?script[\\s]*?&gt;&quot;</span><span class="o">;</span><span class="c1">//定义script的正则表达式{或&lt;script[^&gt;]*?&gt;[\\s\\S]*?&lt;\\/script&gt; }</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">regEx_style</span> <span class="o">=</span> <span class="s">&quot;&lt;[\\s]*?style[^&gt;]*?&gt;[\\s\\S]*?&lt;[\\s]*?\\/[\\s]*?style[\\s]*?&gt;&quot;</span><span class="o">;</span>  <span class="c1">// 定义style的正则表达式{或&lt;style&gt;]*?&gt;[\s\S]*?&lt;\/style&gt; }</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">regEx_html</span> <span class="o">=</span> <span class="s">&quot;&lt;[^&gt;]+&gt;&quot;</span><span class="o">;</span>  <span class="c1">// 定义HTML标签的正则表达式</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">Pattern</span> <span class="n">p_script</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">Pattern</span> <span class="n">p_style</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">Pattern</span> <span class="n">p_html</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 将字符串中的html内容替换成 “”</span>
</span><span class='line'><span class="cm">     * @param inputString</span>
</span><span class='line'><span class="cm">     * @return</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">html2Text</span><span class="o">(</span><span class="n">String</span> <span class="n">inputHtmlString</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Matcher</span> <span class="n">m_script</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Matcher</span> <span class="n">m_style</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Matcher</span> <span class="n">m_html</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">inputHtmlString</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">m_script</span> <span class="o">=</span> <span class="n">p_script</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">inputHtmlString</span><span class="o">);</span>
</span><span class='line'>            <span class="n">inputHtmlString</span> <span class="o">=</span> <span class="n">m_script</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">);</span>  <span class="c1">// 过滤script标签</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">m_style</span> <span class="o">=</span> <span class="n">p_style</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">inputHtmlString</span><span class="o">);</span>
</span><span class='line'>            <span class="n">inputHtmlString</span> <span class="o">=</span> <span class="n">m_style</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">);</span>  <span class="c1">// 过滤style标签</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">m_html</span> <span class="o">=</span> <span class="n">p_html</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">inputHtmlString</span><span class="o">);</span>
</span><span class='line'>            <span class="n">inputHtmlString</span> <span class="o">=</span> <span class="n">m_html</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">);</span>  <span class="c1">// 过滤html标签</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&quot;filter html code error, content is:{}&quot;</span><span class="o">,</span> <span class="n">inputHtmlString</span><span class="o">);</span>
</span><span class='line'>            <span class="c1">//清空</span>
</span><span class='line'>            <span class="n">inputHtmlString</span> <span class="o">=</span> <span class="s">&quot;您提交的内容有系统不允许的标签！&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">inputHtmlString</span><span class="o">;</span> <span class="c1">// 返回文本字符串</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;使用如下测试代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">HtmlUtils</span><span class="o">.</span><span class="na">htmlEscape</span><span class="o">(</span><span class="s">&quot;&lt;script&gt;while (true) {alert(&#39;aa&#39;);};&lt;/script&gt;&lt;p&gt;Hello&lt;/p&gt;&quot;</span><span class="o">));</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;但是，上面的消毒代码过于简单粗暴，在一般在项目中我们可以使用开源的工具来帮助我们做过滤消毒的事。<a href="http://code.google.com/p/xssprotect/">xssprotect</a>、<a href="http://josephoconnell.com/java/xss-html-filter/">HTML filtering utility for Java</a>都实现了过滤消毒的功能。</p>

<p>&emsp;&emsp;请大家看看HTML filtering使用的演示代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="n">String</span> <span class="n">html</span> <span class="o">=</span> <span class="s">&quot;&lt;script&gt;while (true) {alert(&#39;aa&#39;);};&lt;/script&gt;&lt;p&gt;Hello&lt;/p&gt;&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">String</span> <span class="n">result</span>  <span class="o">=</span> <span class="k">new</span> <span class="n">HTMLFilter</span><span class="o">().</span><span class="na">filter</span><span class="o">(</span><span class="n">html</span><span class="o">);</span>
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//输出的结果是：while (true) {alert(&#39;aa&#39;);};Hello</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;最后一个，也是比较棘手的个是CSRF漏洞攻击，CSRF和XSS不相同，CSRF以用户的身份进行合法的操作的一种攻击方式，也叫做跨站请求伪造。比如：伪造用户的一个合法请求<a href="">http://www.domain.com/addNews.do?title=发布重大新闻啦</a>,将这个地址放入一个超链接的href中，然后再发布到系统中。这个时候，如果一个合法用户登录成功后，无意中点击了这个链接，那么系统就会以他的身份发布一条新闻，而用户可能对自己发布新闻这个行为浑然不知。如果这个链接是一个转账或删除某些数据的操作，那么危险性就显而易见了。</p>

<p>&emsp;&emsp;解决CSRF不能简单地用过滤消毒、不允许发布本站地址的url等方式解决（因为url可以通过另的方式发送给用户），我们需要另想办法。</p>

<p>&emsp;&emsp;一种方案是使用restful风格设计系统api，get请求仅仅做等幂的数据查询，而post、delete、put会对数据进行修改，这样一来就可以防止链接中的CSRF修改数据带来的风险，但这并不能完全保证数据的安全，因为通过js、iframe、表单等方式还是可让伪造的地址以合法的身份运行，但是restful风格的设计确实可以提高CSRF攻击门槛，也是我们在今后所有项目中都必须采用的一种系统对外接口。</p>

<p>&emsp;&emsp;也有人采用检测http referer的方式，如果referer不是本站域名中的，则不予功能的执行，就像很多网站图片防盗链接的做法相同，这种检测referer的方式也可以阻止很大一部分通过QQ、邮件发来的CSRF攻击链接。</p>

<p>&emsp;&emsp;还有一种做法比较好，就是对每个url都带一个服务器端生成的token令牌，一个token用过一次后就失效（记得在struts1中就曾经有防止表单重复提交的功能，原理和我这讲的是相同的），这样可以有效防止CSRF，但同时也增加了系统的复杂性，因为服务器要在会话状态中记住每一个页面每一个操作链接的token，实际项目中可采用专门提取出来一个抽象层来做这事会更好些。</p>

<p>&emsp;&emsp;还是那句话，“道高一尺魔高一丈”，今天看似安全的东西也许明天就出现漏洞，没有绝对的安全，做为企业必须要有安全意识，并随时关注安全方面的资讯及内容。更多xss与csrf的内容请大家参阅<a href="https://blog.tonyseek.com/post/introduce-to-xss-and-csrf/">《总结 XSS 与 CSRF 两种跨站攻击》</a>一文。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java安全那些事之四（无状态安全认证）]]></title>
    <link href="http://yanyaner.com/blog/2014/04/16/security4/"/>
    <updated>2014-04-16T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/04/16/security4</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;本文简单讲述web系统间安全调用设计方面的一些知识。目前异构系统间常用的调用方式有webservice、基于restful的json等方式，当客户端调用服务器端的服务接口时，服务器一定要对客户端的这次调用进行安全验证，以确保调用者具备相应的资格。</p>

<p>&emsp;&emsp;当客户端和服务器端完成一次调用的过程中，我们主要面临这样的一些威胁：</p>

<p>&emsp;&emsp;1、数据包被截获并得到明文，暴漏用户敏感信息（比如公用wiff环境中的信息安全）。</p>

<p>&emsp;&emsp;2、数据包被截获并篡改关键业务数据，再发送给服务器（比如修改转账数据包中的目的账号或金额等）。</p>

<p>&emsp;&emsp;3、数据包被截获，并反复&#8221;回放&#8221;（即多次向服务器发送相同的数据包，多次执行业务）。</p>

<p>&emsp;&emsp;4、其它的&hellip;..，以后有时间再继续补充，呵呵</p>

<p>&emsp;&emsp;对于第1条，解决的办法相对比较简单，使用基于SSL的https协议交换数据即可，请大家参阅我的<a href="http://yanyaner.com/blog/2014/04/15/security3/">《java安全那些事之三（RSA及https）》</a>一文。</p>

<p>&emsp;&emsp;对于第2条，我们可以使用hash数据签名来防止数据被更改，想深入了解前请参阅我的<a href="http://yanyaner.com/blog/2014/04/13/security1/">《java安全那些事之一(md5、sha)》</a>一文。</p>

<p>&emsp;&emsp;至于第3条，我们可以在请求中添加时间戳的方式来处理。具体做法是：在发送请求的数中，包含生成本次客户端请求的毫秒，并将此一并加入第2条的hash签名生成中，服务器收到请求后对该时间进行验证，如果超过允许的时间范围，就认为是过期的请求不予处理（当然，更好的做法是在业务层设计某种机制来处理这种重复性将更好）。</p>

<p>&emsp;&emsp;下面我写一个简单的demo，说明其中的交互原理，先看图：</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/04/sign_architect.jpg' width='' height='' title='认证安全调用示例图'><span class='caption-text'>认证安全调用示例图</span></span></p>

<p>&emsp;&emsp;我的demo是一个webservice的例子，如果你是基于restful json的方式，本质上和本例是一样的，请自行类比。我先定义一个ws接口，接口中的sayHello方法是用来向客户问好的，如下：</p>

<figure class='code'><figcaption><span>IMyService.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">javax.jws.WebParam</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.jws.WebResult</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.jws.WebService</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@WebService</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IMyService</span> <span class="o">{</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 该方法向某人问好</span>
</span><span class='line'><span class="cm">  * @param firstName 姓</span>
</span><span class='line'><span class="cm">  * @param lastName  名</span>
</span><span class='line'><span class="cm">  * @param appId     调用者id</span>
</span><span class='line'><span class="cm">  * @param timeMs    调用时间ms</span>
</span><span class='line'><span class="cm">  * @param sign      数据签名</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="nd">@WebResult</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;helloResult&quot;</span><span class="o">)</span><span class="n">String</span>
</span><span class='line'>  <span class="n">sayHello</span><span class="o">(</span><span class="nd">@WebParam</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;fname&quot;</span><span class="o">)</span><span class="n">String</span> <span class="n">firstName</span><span class="o">,</span>
</span><span class='line'>          <span class="nd">@WebParam</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;lname&quot;</span><span class="o">)</span><span class="n">String</span> <span class="n">lastName</span><span class="o">,</span>
</span><span class='line'>          <span class="nd">@WebParam</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;appId&quot;</span><span class="o">)</span><span class="n">String</span> <span class="n">appId</span><span class="o">,</span>
</span><span class='line'>          <span class="nd">@WebParam</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;ts&quot;</span><span class="o">)</span><span class="kt">long</span> <span class="n">timeMs</span><span class="o">,</span>
</span><span class='line'>          <span class="nd">@WebParam</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;sign&quot;</span><span class="o">)</span><span class="n">String</span> <span class="n">sign</span> <span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;正如上面的示意图所示，这个接口中除了传入业务需要的fname,lname之外，剩余的3个参数都是和安全验证相关的，appId是应服务方预先分配给我们的id，timeMs是客户发送该请求的时间，最后是数据签名。看看ws的实现类你就清楚了。<!-- more--></p>

<figure class='code'><figcaption><span>MyServiceImpl.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyServiceImpl</span> <span class="kd">implements</span> <span class="n">IMyService</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//超时时间间隔</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">long</span> <span class="n">howLong</span> <span class="o">=</span> <span class="mi">500</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">sayHello</span><span class="o">(</span><span class="n">String</span> <span class="n">firstName</span><span class="o">,</span> <span class="n">String</span> <span class="n">lastName</span><span class="o">,</span> <span class="n">String</span> <span class="n">appId</span><span class="o">,</span> <span class="kt">long</span> <span class="n">time</span><span class="o">,</span>  <span class="n">String</span> <span class="n">sign</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">key</span> <span class="o">=</span> <span class="n">DB</span><span class="o">.</span><span class="na">getKey</span><span class="o">(</span><span class="n">appId</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">key</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="s">&quot;对不起，你没有授权！&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">str_sign</span> <span class="o">=</span> <span class="n">Md5Encrypt</span><span class="o">.</span><span class="na">md5</span><span class="o">(</span><span class="n">firstName</span> <span class="o">+</span> <span class="n">lastName</span>  <span class="o">+</span> <span class="n">time</span> <span class="o">+</span> <span class="n">appId</span> <span class="o">+</span> <span class="n">key</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(!</span> <span class="n">str_sign</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">sign</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="s">&quot;数字签名错误！&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="kt">long</span> <span class="n">now</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="kt">long</span> <span class="n">dau</span> <span class="o">=</span> <span class="n">now</span> <span class="o">-</span> <span class="n">time</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">dau</span> <span class="o">&gt;</span> <span class="n">howLong</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="s">&quot;时间戳验证失败！&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;你好，&quot;</span> <span class="o">+</span> <span class="n">firstName</span> <span class="o">+</span> <span class="n">lastName</span> <span class="o">+</span> <span class="s">&quot;!&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>DB.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 该类用来模拟数据库调用</span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DB</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">db</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//保存经过我们授权的用户id及key</span>
</span><span class='line'>  <span class="kd">static</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">db</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;app001&quot;</span><span class="o">,</span> <span class="s">&quot;3c9909afec25354d551dae21590bb26e3&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">db</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;app002&quot;</span><span class="o">,</span> <span class="s">&quot;7eyBedfger6fg44ydfsd3ssefsdfsdfsd&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">getKey</span><span class="o">(</span><span class="n">String</span> <span class="n">who</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">db</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">who</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;实现类中的几个步骤需要说明：</p>

<p>&emsp;&emsp;1、先在数据库中查询客户是否已授权过，只有通过授权的客户端调用才可以继续。如果该用户授权过，取得该用户的appkey。</p>

<p>&emsp;&emsp;2、将业务参数，appid,ts等字段连接起来，加上appkey后一起做hash签名生成sign，本例中用的md5。</p>

<p>&emsp;&emsp;3、将计算得到的签名和用户上传上来的签名进行比对，以判断数据是否被篡改，如果签名不一致，终止后续执行。</p>

<p>&emsp;&emsp;4、获得当前服务器时间，并取出用户请求参数中的ts时间相减得到时间差，如果时间间隔超时了（这个超时时间要根据具体的环境确定，因为网络间调用本身就有延迟），就认为是无效的请求。</p>

<p>&emsp;&emsp;5、执行真正的业务逻辑。</p>

<p>&emsp;&emsp;6、调用后得给客户端发回响应，响应数据也采用相同的规则和方式生成sign，原理和服务器端的验证是一样的，客户端收到这个消息也要进行签名验证。</p>

<p>&emsp;&emsp;在架构设计上，上面的几个步骤中我们可以把1~4步专门提取出来，放到另外的一个逻辑层中进行处理，比如：AOP或filter等方式，同理，第6步也可提取出来专门处理。</p>

<p>&emsp;&emsp;客户端的调用代码，必须按照服务器要求的参数提交，并按同样的规则生成sign。下面是axis调用sayHello的ws的代码。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Client</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">appId</span> <span class="o">=</span> <span class="s">&quot;app001&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">myKey</span> <span class="o">=</span> <span class="s">&quot;3c9909afec25354d551dae21590bb26e3&quot;</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">url</span> <span class="o">=</span> <span class="s">&quot;http://localhost:8080/web_service_service/ws/helloService&quot;</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Service</span> <span class="n">service</span> <span class="o">=</span>  <span class="k">new</span> <span class="n">Service</span><span class="o">();</span>
</span><span class='line'>      <span class="n">Call</span> <span class="n">call</span> <span class="o">=</span> <span class="o">(</span><span class="n">Call</span><span class="o">)</span> <span class="n">service</span><span class="o">.</span><span class="na">createCall</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">call</span><span class="o">.</span><span class="na">setTargetEndpointAddress</span><span class="o">(</span><span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">url</span><span class="o">));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">call</span><span class="o">.</span><span class="na">setOperationName</span><span class="o">(</span><span class="k">new</span> <span class="n">QName</span><span class="o">(</span><span class="s">&quot;http://service.my.com/&quot;</span><span class="o">,</span> <span class="s">&quot;sayHello&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="n">call</span><span class="o">.</span><span class="na">addParameter</span><span class="o">(</span>
</span><span class='line'>              <span class="s">&quot;fname&quot;</span>
</span><span class='line'>              <span class="o">,</span> <span class="n">XMLType</span><span class="o">.</span><span class="na">XSD_STRING</span><span class="o">,</span> <span class="n">ParameterMode</span><span class="o">.</span><span class="na">IN</span><span class="o">);</span>
</span><span class='line'>      <span class="n">call</span><span class="o">.</span><span class="na">addParameter</span><span class="o">(</span>
</span><span class='line'>              <span class="s">&quot;lname&quot;</span>
</span><span class='line'>              <span class="o">,</span> <span class="n">XMLType</span><span class="o">.</span><span class="na">XSD_STRING</span><span class="o">,</span> <span class="n">ParameterMode</span><span class="o">.</span><span class="na">IN</span><span class="o">);</span>
</span><span class='line'>      <span class="n">call</span><span class="o">.</span><span class="na">addParameter</span><span class="o">(</span>
</span><span class='line'>              <span class="s">&quot;appId&quot;</span>
</span><span class='line'>              <span class="o">,</span> <span class="n">XMLType</span><span class="o">.</span><span class="na">XSD_STRING</span><span class="o">,</span> <span class="n">ParameterMode</span><span class="o">.</span><span class="na">IN</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">call</span><span class="o">.</span><span class="na">addParameter</span><span class="o">(</span>
</span><span class='line'>              <span class="s">&quot;ts&quot;</span>
</span><span class='line'>              <span class="o">,</span> <span class="n">XMLType</span><span class="o">.</span><span class="na">XSD_STRING</span><span class="o">,</span> <span class="n">ParameterMode</span><span class="o">.</span><span class="na">IN</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">call</span><span class="o">.</span><span class="na">addParameter</span><span class="o">(</span>
</span><span class='line'>              <span class="s">&quot;sign&quot;</span>
</span><span class='line'>              <span class="o">,</span> <span class="n">XMLType</span><span class="o">.</span><span class="na">XSD_STRING</span><span class="o">,</span> <span class="n">ParameterMode</span><span class="o">.</span><span class="na">IN</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">call</span><span class="o">.</span><span class="na">setReturnType</span><span class="o">(</span><span class="n">org</span><span class="o">.</span><span class="na">apache</span><span class="o">.</span><span class="na">axis</span><span class="o">.</span><span class="na">encoding</span><span class="o">.</span><span class="na">XMLType</span><span class="o">.</span><span class="na">XSD_STRING</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="kt">long</span> <span class="n">now</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Object</span> <span class="n">result</span> <span class="o">=</span> <span class="n">call</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="k">new</span> <span class="n">Object</span><span class="o">[]{</span><span class="s">&quot;言&quot;</span><span class="o">,</span><span class="s">&quot;娃娃&quot;</span><span class="o">,</span> <span class="n">appId</span><span class="o">,</span>  <span class="n">now</span><span class="o">,</span>  <span class="n">Md5Encrypt</span><span class="o">.</span><span class="na">md5</span><span class="o">(</span><span class="s">&quot;言&quot;</span> <span class="o">+</span> <span class="s">&quot;娃娃&quot;</span>  <span class="o">+</span> <span class="n">now</span> <span class="o">+</span> <span class="n">appId</span> <span class="o">+</span>  <span class="n">myKey</span><span class="o">)});</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>   
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;请大家注意call.invoke后面的参数，以及sign的生成规则，这个规则和服务器上的规则是一样的。另外，大家要注意，客户端上传的参数中一定要有appid，以表明自己的身份，appkey只用于生成hash过程中使用，服务器端也使用这个appkey来生成hash，因此，appkey必须要保密，如果appkey被他人获得，那么安全调用也就再无安全了。</p>

<p>&emsp;&emsp;本文中给大家介绍的方法在很多系统中都有广泛的应用，比如在线支持接口，开放平台api调用接口等都是基于这种方式，另外，这种方式的安全认识还有一个巨大的好处：服务器端不需要维护客户端状态，这样一来服务器端集群的伸缩性就变得十分简单了。</p>

<p>&emsp;&emsp;有想了解ws架构设计的同学，可以看我的<a href="http://yanyaner.com/blog/2011/04/11/webservice-architect/">《Webservice架构设计》</a>一文。</p>

<p>&emsp;&emsp;好了，本文先到此结束，后续安全性的文章请大家继续关注。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java安全那些事之三（RSA及https）]]></title>
    <link href="http://yanyaner.com/blog/2014/04/15/security3/"/>
    <updated>2014-04-15T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/04/15/security3</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;大家也许看到过有些网站的登录功能都使用的是hppts协议开头的网址，这个https就使用了RSA加密算法，可以有效保护敏感信息在传输过程中的安全性（即使被截获也无法破解）。</p>

<p>&emsp;&emsp;RSA算法属于不对称加密算法，信息发送方和接收方使用不同的密钥（即公钥私钥对）进行通讯，其中的公钥是可以对外公开的，私钥必须保密。信息发送方用公钥对信息进行加密，而信息接收方对信息的解密必须使用私钥，除此别无它法。反之，用私钥加密的信息也只能用公钥才能解密，因此，RSA算法不仅可以用作加密解决方案，也可以做为双方通讯过程中不可抵赖的凭证。示意图见下：</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/04/rsa.jpg' width='' height='' title='RSA加密解密示意图'><span class='caption-text'>RSA加密解密示意图</span></span></p>

<p>&emsp;&emsp;在进行RSA加密解密之前，首先要生成公钥和私钥对。</p>

<p>&emsp;&emsp;我先给大家介绍一种基于JKS（也就是java keystore）的公钥私钥保存方式，我们用下面的命令是生成一个别名是mykey.mm的test.keystore文件，打开keystore文件的密码我输入的是123456。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\key&gt;keytool -genkey -alias mykey.mm -keyalg RSA -keystore test.keystore
</span><span class='line'>输入keystore密码：
</span><span class='line'>Keystore 密码太短 -至少必须为6个字符
</span><span class='line'>输入keystore密码：
</span><span class='line'>再次输入新密码:
</span><span class='line'>您的名字与姓氏是什么？
</span><span class='line'>  [Unknown]：  liu
</span><span class='line'>您的组织单位名称是什么？
</span><span class='line'>  [Unknown]：  maxsoft
</span><span class='line'>您的组织名称是什么？
</span><span class='line'>  [Unknown]：  maxsoft.com
</span><span class='line'>您所在的城市或区域名称是什么？
</span><span class='line'>  [Unknown]：  cd
</span><span class='line'>您所在的州或省份名称是什么？
</span><span class='line'>  [Unknown]：  sc
</span><span class='line'>该单位的两字母国家代码是什么
</span><span class='line'>  [Unknown]：  cn
</span><span class='line'>CN=liu, OU=maxsoft, O=maxsoft.com, L=cd, ST=sc, C=cn 正确吗？
</span><span class='line'>  [否]：  y
</span><span class='line'>
</span><span class='line'>输入&lt;my.yy&gt;的主密码
</span><span class='line'>        （如果和 keystore 密码相同，按回车）：
</span><span class='line'>
</span><span class='line'>C:\key&gt;</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;上面的命令会在c:\key下生成一个test.keystore文件，这个文件中包含了公钥和私钥，java中使用test.keystore文件并进行加密解密的调用代码写法如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">alias</span> <span class="o">=</span> <span class="s">&quot;mykey.mm&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">password</span> <span class="o">=</span> <span class="s">&quot;123456&quot;</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">KeyStore</span> <span class="n">store</span> <span class="o">=</span> <span class="n">KeyStore</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;JKS&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">store</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="s">&quot;c://key//test.keystore&quot;</span><span class="o">),</span> <span class="n">password</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//得到公钥</span>
</span><span class='line'>      <span class="n">PublicKey</span> <span class="n">publickey</span> <span class="o">=</span>  <span class="n">store</span><span class="o">.</span><span class="na">getCertificate</span><span class="o">(</span><span class="n">alias</span><span class="o">).</span><span class="na">getPublicKey</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//得到私钥</span>
</span><span class='line'>      <span class="n">PrivateKey</span> <span class="n">privateKey</span> <span class="o">=</span> <span class="o">(</span><span class="n">PrivateKey</span><span class="o">)</span><span class="n">store</span><span class="o">.</span><span class="na">getKey</span><span class="o">(</span><span class="n">alias</span><span class="o">,</span> <span class="n">password</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">orgStr</span> <span class="o">=</span> <span class="s">&quot;言娃娃yanyaner.com&quot;</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//加密处理</span>
</span><span class='line'>      <span class="n">Cipher</span> <span class="n">cipherEncoder</span> <span class="o">=</span> <span class="n">Cipher</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">cipherEncoder</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">Cipher</span><span class="o">.</span><span class="na">ENCRYPT_MODE</span><span class="o">,</span> <span class="n">publickey</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">//加密字串结果</span>
</span><span class='line'>      <span class="kt">byte</span><span class="o">[]</span> <span class="n">strEnc</span> <span class="o">=</span> <span class="n">cipherEncoder</span><span class="o">.</span><span class="na">doFinal</span><span class="o">(</span><span class="n">orgStr</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;RSA加密后的内容是：\r\n&quot;</span> <span class="o">+</span> <span class="n">Base64</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">strEnc</span><span class="o">));</span>
</span><span class='line'>      
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//解密处理</span>
</span><span class='line'>      <span class="n">Cipher</span> <span class="n">cipherDecoder</span> <span class="o">=</span> <span class="n">Cipher</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">cipherDecoder</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">Cipher</span><span class="o">.</span><span class="na">DECRYPT_MODE</span><span class="o">,</span> <span class="n">privateKey</span><span class="o">);</span>
</span><span class='line'>      <span class="kt">byte</span><span class="o">[]</span> <span class="n">orgDec</span> <span class="o">=</span> <span class="n">cipherDecoder</span><span class="o">.</span><span class="na">doFinal</span><span class="o">(</span><span class="n">strEnc</span><span class="o">);</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;RSA解密后的内容是：\r\n&quot;</span> <span class="o">+</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">orgDec</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;加密过程用到了公钥，而解密用到了私钥。反之亦然，即加密用私钥，解密用公钥。代码输出的结果是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">RSA</span><span class="err">加密后的内容是：</span>
</span><span class='line'><span class="n">Mow</span><span class="o">+</span><span class="n">hRU2V8rt6lRjT1ydb7Lmdwmb1QeelDRxVh0O8kb6FZXWfs6fVuNMMDn8G7w5gA4mnheM</span><span class="o">+</span><span class="n">A</span><span class="o">/</span><span class="n">z</span>
</span><span class='line'><span class="n">OUaU83q1bsXWFni3p</span><span class="o">+</span><span class="n">ER9oOy</span><span class="o">/</span><span class="n">Wx0rwHGKIYxvqTyrYJgOVnpNrwwa5b2GljWVKdlai3BPgxzY</span><span class="o">+</span><span class="n">kk</span>
</span><span class='line'><span class="n">Oj2IsLcU9OyXmr5cqYdLlC47Vtb</span><span class="o">++</span><span class="n">CUGg</span><span class="o">+</span><span class="mi">6</span><span class="n">X071cArTw90KYZk2TYSdawvS3BbgzFcA</span><span class="o">/</span><span class="n">BHz36vsK</span>
</span><span class='line'><span class="mi">4</span><span class="n">Q7sjsHY2SG4ITiq8pAM3pXYHLbTvUH4SLBdJTMry1kEGqvgJA3dy63Ut</span><span class="o">+</span><span class="n">Rl43hZ</span><span class="o">+</span><span class="n">XJZICPPAvSo</span>
</span><span class='line'><span class="n">xD3Euo</span><span class="o">/</span><span class="mi">5</span><span class="n">bhyO1Y8Jbdrj7C4eHADMZ</span><span class="o">+</span><span class="n">Zpn7RfGA</span><span class="o">==</span>
</span><span class='line'><span class="n">RSA</span><span class="err">解密后的内容是：</span>
</span><span class='line'><span class="err">言娃娃</span><span class="n">yanyaner</span><span class="o">.</span><span class="na">com</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;接下来，我们使用另外一种公钥私钥保存的方式，我们通过openssl这种使用更为广泛的基于RSA的工具生成加密公钥私钥对。<!-- more--></p>

<p>&emsp;&emsp;在windows下通过openssl来生成私钥，请在cmd中输入下面的命令，这个命令会生成私钥文件rsa_private.key，我们可以指定文件名：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">D:</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="n">openssl</span><span class="o">&gt;</span><span class="n">openssl</span> <span class="n">genrsa</span> <span class="o">-</span><span class="n">out</span> <span class="n">rsa_private</span><span class="o">.</span><span class="na">key</span> <span class="mi">1024</span>
</span><span class='line'><span class="n">Generating</span> <span class="n">RSA</span> <span class="kd">private</span> <span class="n">key</span><span class="o">,</span> <span class="mi">1024</span> <span class="n">bit</span> <span class="kt">long</span> <span class="n">modulus</span>
</span><span class='line'><span class="o">....++++++</span>
</span><span class='line'><span class="o">........++++++</span>
</span><span class='line'><span class="n">unable</span> <span class="n">to</span> <span class="n">write</span> <span class="err">&#39;</span><span class="n">random</span> <span class="n">state</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">e</span> <span class="n">is</span> <span class="mi">65537</span> <span class="o">(</span><span class="mh">0x10001</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;接下来再根据私钥来生成公钥文件rsa_public.key，如下命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">D:</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="n">openssl</span><span class="o">&gt;</span><span class="n">openssl</span> <span class="n">rsa</span> <span class="o">-</span><span class="n">in</span>  <span class="n">rsa_private</span><span class="o">.</span><span class="na">key</span> <span class="o">-</span><span class="n">out</span> <span class="n">rsa_public</span><span class="o">.</span><span class="na">key</span> <span class="o">-</span><span class="n">pubout</span>
</span><span class='line'><span class="n">writing</span> <span class="n">RSA</span> <span class="n">key</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;通过上面的命令，我们就生成了公钥和私钥文件，这时候的私钥还不能直接被java使用，接下来需要对rsa_private.key私钥文件进行PKCS#8编码，如下命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">D:</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="n">openssl</span><span class="o">&gt;</span><span class="n">openssl</span> <span class="n">pkcs8</span> <span class="o">-</span><span class="n">topk8</span> <span class="o">-</span><span class="n">in</span> <span class="n">rsa_private</span><span class="o">.</span><span class="na">key</span> <span class="o">-</span><span class="n">out</span> <span class="n">pkcs8_rsa_private</span><span class="o">.</span><span class="na">key</span> <span class="o">-</span><span class="n">nocrypt</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;通过上面三个命令，我们在d:\temp目录下会存在三个文件，如下图：</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/04/ppkey_files.jpg' width='' height='' title='RSA密钥文件'><span class='caption-text'>RSA密钥文件</span></span></p>

<p>&emsp;&emsp;好了，可以写java代码了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 得到公钥对象</span>
</span><span class='line'><span class="cm">  * @param publicKeyFile</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  * @throws Exception</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">RSAPublicKey</span> <span class="nf">getRSAPublicKey</span><span class="o">(</span><span class="n">String</span> <span class="n">publicKeyFile</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">X509EncodedKeySpec</span> <span class="n">keySpec</span><span class="o">=</span> <span class="k">new</span> <span class="n">X509EncodedKeySpec</span><span class="o">(</span><span class="n">readKeysAsByteArray</span><span class="o">(</span><span class="n">publicKeyFile</span><span class="o">));</span>
</span><span class='line'>      <span class="n">KeyFactory</span> <span class="n">keyFactory</span><span class="o">=</span> <span class="n">KeyFactory</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">(</span><span class="n">RSAPublicKey</span><span class="o">)</span> <span class="n">keyFactory</span><span class="o">.</span><span class="na">generatePublic</span><span class="o">(</span><span class="n">keySpec</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 得到私钥对象</span>
</span><span class='line'><span class="cm">  * @param priveKeyFile</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  * @throws Exception</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">RSAPrivateKey</span> <span class="nf">getRSAPrivateKey</span><span class="o">(</span><span class="n">String</span> <span class="n">priveKeyFile</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">PKCS8EncodedKeySpec</span> <span class="n">keySpec</span><span class="o">=</span> <span class="k">new</span> <span class="n">PKCS8EncodedKeySpec</span><span class="o">(</span><span class="n">readKeysAsByteArray</span><span class="o">(</span><span class="n">priveKeyFile</span><span class="o">));</span>
</span><span class='line'>        <span class="n">KeyFactory</span> <span class="n">keyFactory</span><span class="o">=</span> <span class="n">KeyFactory</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span>  <span class="o">(</span><span class="n">RSAPrivateKey</span><span class="o">)</span> <span class="n">keyFactory</span><span class="o">.</span><span class="na">generatePrivate</span><span class="o">(</span><span class="n">keySpec</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 读取密钥文件为byte数组</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  * @throws Exception</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">byte</span><span class="o">[]</span> <span class="nf">readKeysAsByteArray</span><span class="o">(</span><span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">BufferedReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="n">fileName</span><span class="o">)));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">line</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">((</span><span class="n">line</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span> <span class="o">!</span> <span class="n">line</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&quot;-----&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">line</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\r&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">BASE64Decoder</span> <span class="n">base64Decoder</span><span class="o">=</span> <span class="k">new</span> <span class="n">BASE64Decoder</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span>  <span class="n">base64Decoder</span><span class="o">.</span><span class="na">decodeBuffer</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;需要解释的是，上面代码中的readKeysAsByteArray方法，是用来读取key文件的，因为key文件中的多余行我们要去掉，比如，下面就是一个私钥文件内容，文件头和尾都有多余的信息：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">-----</span><span class="n">BEGIN</span> <span class="n">PRIVATE</span> <span class="n">KEY</span><span class="o">-----</span>
</span><span class='line'><span class="n">MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBANmxTOBVBVrl25Ge</span>
</span><span class='line'><span class="n">sCD3b57dxK7LLK2RiSrBvdoaBK</span><span class="o">/</span><span class="n">g5mVV5RggG3GI8cCC4gDv2oGWNdwbNJiGZreZ</span>
</span><span class='line'><span class="n">Knm4G0y5Pq86tuJO6vmYKrD0cEZlp0uh9b2cAeP3ry</span><span class="o">+</span><span class="mi">87</span><span class="n">VwpIFnpaiXCzB6xhEb1</span>
</span><span class='line'><span class="mi">2</span><span class="n">FvP8hbs</span><span class="o">/</span><span class="n">K7iHkLbysUB7F</span><span class="o">/</span><span class="n">XUbRPAgMBAAECgYEAj84lB6iCghqH4nlexlhOXzcG</span>
</span><span class='line'><span class="n">v6Ut3XbfkuQrY1F</span><span class="o">+</span><span class="n">uSSrblPApCBJoMWjVdXgMFhCEwrEh6NdKkjWwAApZADv3pXj</span>
</span><span class='line'><span class="n">m</span><span class="o">/</span><span class="n">LXQYwRaKExJtTdl38ujSfL</span><span class="o">/</span><span class="n">tN5vSaMqmnnDa6IMc0AfjjWHDuX5Jurqi47l8Rh</span>
</span><span class='line'><span class="n">yF4gSvXTfsAwD8ZT6XECQQD3I8orEj4fAAIKF4KvmHREl9yVKr</span><span class="o">+</span><span class="n">iqaT7q4q5C94i</span>
</span><span class='line'><span class="n">Gs</span><span class="o">/</span><span class="n">RyN421NiR9ns5</span><span class="o">+</span><span class="n">R3ooJ</span><span class="o">+</span><span class="n">mBufMsUTLQFvPgmcB</span><span class="o">+</span><span class="n">VfXAkEA4X8</span><span class="o">/</span><span class="n">owQ50xlB3lSC</span>
</span><span class='line'><span class="n">dHotY4rE7N3gCeLxN</span><span class="o">+</span><span class="n">FpzxK</span><span class="o">+</span><span class="mi">6</span><span class="n">lZjelxjsQ0wFKMrvLjQFZWcDrLcCOFE3ldCJGOS</span>
</span><span class='line'><span class="o">+</span><span class="mi">3</span><span class="n">CYSQJALnR0yRnZwXv</span><span class="o">/</span><span class="mi">5</span><span class="n">iO7NgSjPk2JciSh9xKKZ6A8KEJ509FUZSur0YS63N0H</span>
</span><span class='line'><span class="n">FsOkAplGyS</span><span class="o">+</span><span class="n">dHNXph4cmeuAZOr7C6wJBAIC5x3Yj326mqHdm</span><span class="o">/</span><span class="n">uHHLUn52djuAAsk</span>
</span><span class='line'><span class="n">xlcEEwbmyJ21mywqua5EvQHK9BjT19W6hk</span><span class="o">/</span><span class="n">NwtY</span><span class="o">+</span><span class="mi">4</span><span class="n">rWaUmO7hBiNeiECQDhAAYha</span>
</span><span class='line'><span class="n">huZwqLVB</span><span class="o">/</span><span class="n">UUMdqxJreEee5q</span><span class="o">+</span><span class="n">SyaAn</span><span class="o">+</span><span class="n">aHLWCq0vYQ9DEU72vAhvgnQQ0oTLPkQ5od</span>
</span><span class='line'><span class="n">NBCD4J</span><span class="o">/</span><span class="mi">2</span><span class="n">OGQOIH8</span><span class="o">=</span>
</span><span class='line'><span class="o">-----</span><span class="n">END</span> <span class="n">PRIVATE</span> <span class="n">KEY</span><span class="o">-----</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;信息发送方、接收方的代码，大家可以参照下面的示例代码写出：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">RSAPublicKey</span> <span class="n">publickey</span> <span class="o">=</span> <span class="n">getRSAPublicKey</span><span class="o">(</span><span class="s">&quot;D:/temp/openssl/rsa_public.key&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">RSAPrivateKey</span> <span class="n">privateKey</span> <span class="o">=</span> <span class="n">getRSAPrivateKey</span><span class="o">(</span><span class="s">&quot;D:/temp/openssl/pkcs8_rsa_private.key&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">String</span> <span class="n">orgStr</span> <span class="o">=</span> <span class="s">&quot;言娃娃-yanyaner.com&quot;</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//加密处理</span>
</span><span class='line'>      <span class="n">Cipher</span> <span class="n">cipherEncoder</span> <span class="o">=</span> <span class="n">Cipher</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">cipherEncoder</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">Cipher</span><span class="o">.</span><span class="na">ENCRYPT_MODE</span><span class="o">,</span> <span class="n">publickey</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//加密字串结果</span>
</span><span class='line'>      <span class="kt">byte</span><span class="o">[]</span> <span class="n">strEnc</span> <span class="o">=</span> <span class="n">cipherEncoder</span><span class="o">.</span><span class="na">doFinal</span><span class="o">(</span><span class="n">orgStr</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;加密后的内容是：\r\n&quot;</span> <span class="o">+</span> <span class="n">Base64</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">strEnc</span><span class="o">));</span>
</span><span class='line'>      
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//解密处理</span>
</span><span class='line'>      <span class="n">Cipher</span> <span class="n">cipherDecoder</span> <span class="o">=</span> <span class="n">Cipher</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">cipherDecoder</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">Cipher</span><span class="o">.</span><span class="na">DECRYPT_MODE</span><span class="o">,</span> <span class="n">privateKey</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="kt">byte</span><span class="o">[]</span> <span class="n">orgDec</span> <span class="o">=</span> <span class="n">cipherDecoder</span><span class="o">.</span><span class="na">doFinal</span><span class="o">(</span><span class="n">strEnc</span><span class="o">);</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;解密后的内容是：\r\n&quot;</span> <span class="o">+</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">orgDec</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;最终输出结果是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">加密后的内容是：</span>
</span><span class='line'><span class="n">dzxXcllos3pROKeWGShl3uu0KQdRrJiYHhUGqcHT6DkPRW71cYFITj0XlwkIjaWGw8CyJbc5r</span><span class="o">/</span><span class="n">AR</span>
</span><span class='line'><span class="n">qwtuVFN</span><span class="o">/</span><span class="n">IybI</span><span class="o">/</span><span class="n">kUdfuAVrmDuIVn86rlkAEVbZTel8WOoUlRmlyflhbYUk0SeflcKdFgVELk5WVZ</span><span class="o">+</span>
</span><span class='line'><span class="n">J</span><span class="o">/</span><span class="n">DGn1kJ23KcIXbC1YM</span><span class="o">=</span>
</span><span class='line'>
</span><span class='line'><span class="err">解密后的内容是：</span>
</span><span class='line'><span class="err">言娃娃</span><span class="o">-</span><span class="n">yanyaner</span><span class="o">.</span><span class="na">com</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;通过阅读上面的调用代码，我想大家对RSA加密算法已经有了一些认识，在这些代码中我们发现，RSA的私钥的存放必须要得到很好的保护，如果私钥被他人得到，那么双方的通讯的内容也就公开了。有些童鞋在架构设计时也会考虑将密钥分段存放，这样的话没有任何一个人可以得到完整的密钥，在应用计算时再从各个地方得到分段并组装在一起，这样的安全性就比较高了。</p>

<p>&emsp;&emsp;最后，我给大家简单介绍一下tomcat(其实nginx这些服务器的https配置与之类似，明白了原理后，就是配置文件的写法不一样而已)中的基于RSA的https（https是在数据链路层进行通讯加密，这个协议用到了rsa,md5,des等一些加密算法，算是设计精妙）配置内容。配置tomcat的https支持hppts，首先也是要建立RSA证书，同样是基于JKS的，如下命令即可：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">D:</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="n">tomcat</span><span class="o">-</span><span class="n">cer</span><span class="o">&gt;</span><span class="n">keytool</span> <span class="o">-</span><span class="n">genkey</span> <span class="o">-</span><span class="n">alias</span> <span class="n">mytomcat</span> <span class="o">-</span><span class="n">keyalg</span> <span class="n">RSA</span> <span class="o">-</span><span class="n">keystore</span> <span class="n">tomcat</span><span class="o">.</span><span class="na">keystore</span>
</span><span class='line'><span class="err">输入密钥库口令</span><span class="o">:</span>
</span><span class='line'><span class="err">再次输入新口令</span><span class="o">:</span>
</span><span class='line'><span class="err">您的名字与姓氏是什么</span><span class="o">?</span>
</span><span class='line'>  <span class="o">[</span><span class="n">Unknown</span><span class="o">]:</span>  <span class="n">liu</span>
</span><span class='line'><span class="err">您的组织单位名称是什么</span><span class="o">?</span>
</span><span class='line'>  <span class="o">[</span><span class="n">Unknown</span><span class="o">]:</span>  <span class="n">maxsoft</span>
</span><span class='line'><span class="err">您的组织名称是什么</span><span class="o">?</span>
</span><span class='line'>  <span class="o">[</span><span class="n">Unknown</span><span class="o">]:</span>  <span class="n">org</span>
</span><span class='line'><span class="err">您所在的城市或区域名称是什么</span><span class="o">?</span>
</span><span class='line'>  <span class="o">[</span><span class="n">Unknown</span><span class="o">]:</span>  <span class="n">cd</span>
</span><span class='line'><span class="err">您所在的省</span><span class="o">/</span><span class="err">市</span><span class="o">/</span><span class="err">自治区名称是什么</span><span class="o">?</span>
</span><span class='line'>  <span class="o">[</span><span class="n">Unknown</span><span class="o">]:</span>  <span class="n">sc</span>
</span><span class='line'><span class="err">该单位的双字母国家</span><span class="o">/</span><span class="err">地区代码是什么</span><span class="o">?</span>
</span><span class='line'>  <span class="o">[</span><span class="n">Unknown</span><span class="o">]:</span>  <span class="n">cn</span>
</span><span class='line'><span class="n">CN</span><span class="o">=</span><span class="n">liu</span><span class="o">,</span> <span class="n">OU</span><span class="o">=</span><span class="n">maxsoft</span><span class="o">,</span> <span class="n">O</span><span class="o">=</span><span class="n">org</span><span class="o">,</span> <span class="n">L</span><span class="o">=</span><span class="n">cd</span><span class="o">,</span> <span class="n">ST</span><span class="o">=</span><span class="n">sc</span><span class="o">,</span> <span class="n">C</span><span class="o">=</span><span class="n">cn</span><span class="err">是否正确</span><span class="o">?</span>
</span><span class='line'>  <span class="o">[</span><span class="err">否</span><span class="o">]:</span>  <span class="n">y</span>
</span><span class='line'>
</span><span class='line'><span class="err">输入</span> <span class="o">&lt;</span><span class="n">mytomcat</span><span class="o">&gt;</span> <span class="err">的密钥口令</span>
</span><span class='line'>        <span class="o">(</span><span class="err">如果和密钥库口令相同</span><span class="o">,</span> <span class="err">按回车</span><span class="o">):</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;接下来修改tomcat 的 server.xml中Connector部分的配置：</p>

<figure class='code'><figcaption><span>server.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Connector</span> <span class="na">protocol=</span><span class="s">&quot;org.apache.coyote.http11.Http11Protocol&quot;</span>
</span><span class='line'>             <span class="na">port=</span><span class="s">&quot;8443&quot;</span>  <span class="na">SSLEnabled=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>               <span class="na">maxThreads=</span><span class="s">&quot;150&quot;</span> <span class="na">scheme=</span><span class="s">&quot;https&quot;</span> <span class="na">secure=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>               <span class="na">clientAuth=</span><span class="s">&quot;false&quot;</span> <span class="na">sslProtocol=</span><span class="s">&quot;TLS&quot;</span>
</span><span class='line'>             <span class="na">keystoreFile=</span><span class="s">&quot;D:/temp/tomcat-cer/tomcat.keystore&quot;</span>
</span><span class='line'>             <span class="na">keystorePass=</span><span class="s">&quot;123456&quot;</span>
</span><span class='line'>             <span class="nt">/&gt;</span>
</span><span class='line'>          
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>&emsp;&emsp;要注意的是，我将文件中的protocol由protocol=&ldquo;HTTP/1.1&rdquo; 改为了protocol=&ldquo;org.apache.coyote.http11.Http11Protocol&#8221;，因为我的tomcat6是6.0.36，会报No Certificate file specified or invalid file format错误，高版本的tomcat默认AprLifecycleListener是高为on的，你在配置文件中可以看到这个开关SSLEngine=&#8221;on&rdquo; ，只有修改后才可以正确运行。</p>

<p>&emsp;&emsp;进入浏览器访问你的项目，会发现https已经生效。</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/04/browser_ssl_warning.jpg' width='' height='' title='浏览器中https警告'><span class='caption-text'>浏览器中https警告</span></span></p>

<p>&emsp;&emsp;如果你不想让浏览器出现这样的警告，那么你就得到第三方认证的证书机构去申请密钥了，而不能像上面一样通过命令行自己生成密钥，因为我们生成的密钥浏览器认为有风险而不被信任(当然如果用户通过添加例外，浏览器仍然可以继续访问这个https的网站)。</p>

<p>&emsp;&emsp;另外大家要注意的是，rsa算法比较耗费时间，效率低下，而且对要加密的内容长度上也有限制，因此一般可用来对密码等长度较短的明文加密。因此，在https通讯过程中，只有在通讯开始的握手过程中会使用rsa以交换对称加密密钥，在后期的数据通讯中都是采用的DES对称加密算法。</p>

<p>&emsp;&emsp;关于RSA的介绍先到此，下篇文章接着讲一些架构级的安全认证设计知识，请大家关注。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java安全那些事之二（base64,des）]]></title>
    <link href="http://yanyaner.com/blog/2014/04/14/security2/"/>
    <updated>2014-04-14T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/04/14/security2</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;和Hash的不可逆相比，还有一些算法是可逆的，也就是数据在发送方经过加密后，再传输至接收方，接收方对收到的信息后进行解密得到明文。</p>

<p>&emsp;&emsp;我们先来看可逆算法中最简单的一种：Base64，请先看代码。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">b64result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">Base64</span><span class="o">.</span><span class="na">encodeBase64</span><span class="o">(</span><span class="s">&quot;刘江华&quot;</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;base64加密后密文是：&quot;</span> <span class="o">+</span> <span class="n">b64result</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">orgStr</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">Base64</span><span class="o">.</span><span class="na">decodeBase64</span><span class="o">(</span><span class="n">b64result</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;base64解密为明文是：&quot;</span> <span class="o">+</span> <span class="n">orgStr</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;上面代码的输出是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">base64</span><span class="err">加密后密文是：</span><span class="mi">5</span><span class="n">YiY5rGf5Y2O</span>
</span><span class='line'><span class="n">base64</span><span class="err">解密为明文是：刘江华</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;由此可见，base64加密算法会把明文加密后变成我们看不明白的密文，但我们也可以通过base64算法很快解密得到明文，这也就是说，如果信息在传输过程中被第三方截获，对方又知道你采用的是base64算法，那么你的密文也就无秘密可言。</p>

<p>&emsp;&emsp;既然如此，是不是说base64就完全无用了呢？当然不是！如果我们仔细观察会发现，该算法输出的内容都是数字和字母之类的ascii可显示字符，而无论你的输入是中文还是特殊字符。这一特点对于信息传输过程中，明文中包含特殊字符而可能产生乱码的情况非常有用。比如：对要传输的内容进行base64编码，再通过http协议传输到接收方，接收方再按base64解码得到明文。base64还有其它的一些用处，比方说将byte[] 转换为可显示字符等等，我不再多说。base64运行示意图如下：</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/04/base64.jpg' width='' height='' title='base64加密解密示意图'><span class='caption-text'>base64加密解密示意图</span></span></p>

<p>&emsp;&emsp;接下来，我们再来看看另外一种加密强度更好的方法：DES加密算法。DES属于对称加密算法，信息发送者通过一个私钥来加密信息后再传输，而信息接收者也使用同样的一个私钥完成信息的解密。</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/04/des.jpg' width='' height='' title='des加密解密示意图'><span class='caption-text'>des加密解密示意图</span></span></p>

<p>&emsp;&emsp;之所以称DES为对称加密算法，主要原因是信息发送方和信息接收方使用的是相同的密钥，上图中的private key就是。代码写出来就是下面这样的：<!-- more--></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * des加密示例代码</span>
</span><span class='line'><span class="cm"> * @param orgData</span>
</span><span class='line'><span class="cm"> * @param privateKey</span>
</span><span class='line'><span class="cm"> * @return</span>
</span><span class='line'><span class="cm"> * @throws Exception</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">byte</span><span class="o">[]</span> <span class="nf">desEncode</span><span class="o">(</span><span class="kt">byte</span><span class="o">[]</span> <span class="n">orgData</span><span class="o">,</span> <span class="n">String</span> <span class="n">privateKey</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">KeyGenerator</span> <span class="n">kgenerator</span> <span class="o">=</span> <span class="n">KeyGenerator</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;DES&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">kgenerator</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="k">new</span> <span class="n">SecureRandom</span><span class="o">(</span><span class="n">privateKey</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">Cipher</span> <span class="n">cipher</span> <span class="o">=</span> <span class="n">Cipher</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;DES&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">cipher</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">Cipher</span><span class="o">.</span><span class="na">ENCRYPT_MODE</span><span class="o">,</span> <span class="n">kgenerator</span><span class="o">.</span><span class="na">generateKey</span><span class="o">());</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">return</span> <span class="n">cipher</span><span class="o">.</span><span class="na">doFinal</span><span class="o">(</span><span class="n">orgData</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * des解密示例代码</span>
</span><span class='line'><span class="cm"> * @param passedData</span>
</span><span class='line'><span class="cm"> * @param privateKey</span>
</span><span class='line'><span class="cm"> * @return</span>
</span><span class='line'><span class="cm"> * @throws Exception</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">byte</span><span class="o">[]</span> <span class="nf">desDecode</span><span class="o">(</span><span class="kt">byte</span><span class="o">[]</span> <span class="n">passedData</span><span class="o">,</span> <span class="n">String</span> <span class="n">privateKey</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">KeyGenerator</span> <span class="n">kgenerator</span> <span class="o">=</span> <span class="n">KeyGenerator</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;DES&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">kgenerator</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="k">new</span> <span class="n">SecureRandom</span><span class="o">(</span><span class="n">privateKey</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">Cipher</span> <span class="n">cipher</span> <span class="o">=</span> <span class="n">Cipher</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;DES&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">cipher</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">Cipher</span><span class="o">.</span><span class="na">DECRYPT_MODE</span><span class="o">,</span> <span class="n">kgenerator</span><span class="o">.</span><span class="na">generateKey</span><span class="o">());</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">return</span> <span class="n">cipher</span><span class="o">.</span><span class="na">doFinal</span><span class="o">(</span><span class="n">passedData</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;上面的加密和解密方法中，均传入了一个desPrivateKey，这个key是两方共用的，调用示例代码如下，其中的desPrivateKey是随机生成的一个私钥，两方共同持有。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="n">String</span> <span class="n">orgStr</span> <span class="o">=</span> <span class="s">&quot;hello,刘江华&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">String</span> <span class="n">desPrivateKey</span> <span class="o">=</span> <span class="s">&quot;3c9909afec25354d551dae21590bb26e3&quot;</span><span class="o">;</span>
</span><span class='line'>          
</span><span class='line'>  <span class="kt">byte</span><span class="o">[]</span> <span class="n">en_bytes</span> <span class="o">=</span> <span class="n">desEncode</span><span class="o">(</span><span class="n">orgStr</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(),</span> <span class="n">desPrivateKey</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;DES加密后的内容是：&quot;</span> <span class="o">+</span> <span class="k">new</span> <span class="n">BASE64Encoder</span><span class="o">().</span><span class="na">encode</span><span class="o">(</span><span class="n">en_bytes</span><span class="o">));</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kt">byte</span><span class="o">[]</span> <span class="n">de_bytes</span> <span class="o">=</span> <span class="n">desDecode</span><span class="o">(</span><span class="n">en_bytes</span><span class="o">,</span> <span class="n">desPrivateKey</span><span class="o">);</span>
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;DES解密后的内容是：&quot;</span> <span class="o">+</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">de_bytes</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;代码执行后的输出如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">DES</span><span class="err">加密后的内容是：</span><span class="n">VExT39v</span><span class="o">/</span><span class="n">M504pQY</span><span class="o">/</span><span class="n">L</span><span class="o">+</span><span class="n">d84w</span><span class="o">==</span>
</span><span class='line'><span class="n">DES</span><span class="err">解密后的内容是：</span><span class="n">hello</span><span class="o">,</span><span class="err">刘江华</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;由此我们可以得出结论，DES算法的关键在于私钥的安全保管，如果信息发送方和接收方中的任何一个泄露了私钥，双方的通讯过程也就无法保密了，因此，密钥的保密是一个关键。</p>

<p>&emsp;&emsp;下一篇文章，我继续给大家讲解RSA算法及其应用，RSA这是一种非对称加密算法，请大家随时关注我的博客。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java安全那些事之一(md5、sha)]]></title>
    <link href="http://yanyaner.com/blog/2014/04/13/security1/"/>
    <updated>2014-04-13T15:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/04/13/security1</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;安全攻防的世界，永远是道高一尺魔高一丈的世界，再强的安全防护在FBI面前几乎无密码可言，如果你去看看美国的楞镜门事件相关新闻就知道了。我并不是安全密码方面的专家，本文不想研究算法，只是从应用角度给大家普及些许web应用系统中安全相关的一些知识，希望对大家开发普通的企业级应用及互联网应用有帮助。</p>

<p>&emsp;&emsp;先来看看加密及解密。</p>

<p>&emsp;&emsp;登录是任何一个系统都有的功能，在登录的过程中需要对用户提供的密码进行验证以检测其身份合法性，这点对于我们应用开发者而言，就是如何持久化用户的密码。如果仅仅以明文方式将用户密码保存在数据库中，那未免有些太“瓜西西”了，这就像CSDN所犯错一样低级。因此，我们一定要对用户密码进行相应的处理后再保存，即使被黑客拖库也可以防止用户密码的泄露。</p>

<p>&emsp;&emsp;Hash是常用的方法。Hash一般翻译为&#8221;散列&#8221;或直接音译为&#8221;哈希&#8221;，就是把任意长度的输入变换成固定长度的散列输出。这种转换是一种压缩映射，也就是散列值的空间通常远小于输入的空间，不同的输入可能会散列成相同的输出，而不可能从散列值来唯一的确定输入值，简单的说就是一种将任意长度的消息压缩到某一固定长度的消息摘要。</p>

<p>&emsp;&emsp;Hash常用的算法有md5、sha等，比如下面的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">DigestUtils</span><span class="o">.</span><span class="na">md5Hex</span><span class="o">(</span><span class="s">&quot;ljh&quot;</span><span class="o">));</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">DigestUtils</span><span class="o">.</span><span class="na">sha256Hex</span><span class="o">(</span><span class="s">&quot;ljh&quot;</span><span class="o">));</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">DigestUtils</span><span class="o">.</span><span class="na">sha384Hex</span><span class="o">(</span><span class="s">&quot;ljh&quot;</span><span class="o">));</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">DigestUtils</span><span class="o">.</span><span class="na">sha512Hex</span><span class="o">(</span><span class="s">&quot;ljh&quot;</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;大家要注意上面这4行代码的输出结果长度分别是：32，64，96，128位长，如何你决定采用其中的一种hash来处理用户密码的消息接要并持久化，一定要注意数据库字段的长度设定哦。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">67</span><span class="n">f87c9b32834504b4ddf432055d88bd</span>
</span><span class='line'><span class="mi">871</span><span class="n">ca93f9e215997cc2d65b4a6924c706b69b09c4d419f89c24746d3ae04727b</span>
</span><span class='line'><span class="n">d24d011e9d67511deea2f1296adaa65db2c161f8537ed48d5893c06d712abdf4a229c98f8d0fd2776fd8119248949a72</span>
</span><span class='line'><span class="mi">1</span><span class="n">def79cd9d613a9ceefa285902cd1eb2397b176fd16a09525f52947518c196e8e3349d017182b12726e6a74a0f553af2b6991034f0a9361671176c5f96c5a21b5YiY5rGf5Y2O</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more-->


<p>&emsp;&emsp;上面我用到了MD5与SHA1 Hash算法，这两种算法的区别在于：MD5比SHA1运算速度快，但SHA1比MD5强度高，其中，hash输出结果长度越长代表保密强度越好。Hash算法理论上是不可逆的，这意味着你不可能通过hash值反向计算出原始信息，因此，如果你的数据库中保存的是用户密码的hash值，将无人能够知道用户的原始密码是什么了，就好比你的银行密码遗忘了，只有带有效证件去银行重新设置密码，而老的密码将夫人知晓，包括DBA、开发人员。</p>

<p>&emsp;&emsp;那么，对于程序员来说，如何通过用户输入的密码来验证用户的身份呢？非常简单，基本流程是：得到用户输入的用户名及密码&mdash;>对输入的密码进行hash运算&mdash;>根据用户名到数据库中查询出这个用户&mdash;>取得数据库中保存的用户曾经的密码hash值&mdash;>比对两个hash值得出结论。</p>

<p>&emsp;&emsp;既然Hash加密密码有这么多的好处，那Hash保存密码真的可以高枕无忧了么？非也。hash是可以进行暴力破解的（虽然代价非常大的，一般情况下不会采用，但也不能排除），现在比较流行的做法是反向hash查询，就是预先在一张巨大的表中保存事先计算出来的hash值，通过询这个表就可以得到明文了。因此，如果用户的密码足够简单而常见，通过一次hash计算出来的结果几乎无秘密可言。另外，你也可以到网上了解一下“彩虹表”RainbowCrack相关的内容<a href="http://my.oschina.net/jgy/blog/38252">彩虹表-破解哈希算法 MD5加密法</a>，以空间换时间。</p>

<p>&emsp;&emsp;既然一次hash计算出来的保密性不好，那就多计算几次效果如何？比如：md5(md5(pwd))，答案是,这样的计算结果也是不安全，互联网上已经有多次hash计算结果的查询（有的是要收费的）。</p>

<p>&emsp;&emsp;其中，最好的一种办法是，加“随机盐”，也就是为每个用户保存一个足够长的随机字符串，使用这个salt参与计算，再进行多次hash计算。比如：md5(md5(pwd + salt))，这种做法相对来说就安全多了。在具体的项目中，你可以再改进一下这个算法，增加些复杂性（比如:md5(username.hashcode() + sha384Hex(salt + md5(pwd + slat)))），并且，程序在生成每个用户的salt时，要足够随机、足够长，这种方式对付hash反向查询就十分有效了。</p>

<p>&emsp;&emsp;hash算法除了用于密码的安全性外，还经常用于数据签名，这一块的应用我在随后的文章中会提到。</p>

<p>&emsp;&emsp;好了，这一部分先简单介绍到这，下一篇我们来看看Base64,DES,RSA等与加密解决信息有关的内容。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[监控系统中的异步消息使用实例（二）]]></title>
    <link href="http://yanyaner.com/blog/2014/04/09/async_message_architect2/"/>
    <updated>2014-04-09T12:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/04/09/async_message_architect2</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;接上节，再次贴出架构图，我们接下来要讲的是图中黄色部分的配置。</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/04/monitor_jms1.jpg' width='' height='' title='业务方法监控架构'><span class='caption-text'>业务方法监控架构</span></span></p>

<p>&emsp;&emsp;先将spy程序导成一个jar包，加入到需要监控的目标服务器lib目录，monitor_spy.jar结构如下所示：</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/04/jarinfo.jpg' width='' height='' title='monitor_spy.jar结构'><span class='caption-text'>monitor_spy.jar结构</span></span></p>

<p>&emsp;&emsp;为了能够实现对目标系统业务方法执行情况进行监控，需要将我们已经写好的拦截器配置到目标系统中去，下面是我的一个配置示例：</p>

<figure class='code'><figcaption><span>spring-spy.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="c">&lt;!-- jms连接工厂 --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;jmsFactory&quot;</span> <span class="na">class=</span><span class="s">&quot;org.apache.activemq.pool.PooledConnectionFactoryBean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;connectionFactory&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">&quot;org.apache.activemq.ActiveMQConnectionFactory&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;brokerURL&quot;</span> <span class="na">value=</span><span class="s">&quot;tcp://localhost:61616&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>      <span class="c">&lt;!-- 配置池中最大连接数据以及最大活动连接数 --&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;maxConnections&quot;</span> <span class="na">value=</span><span class="s">&quot;100&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;maximumActive&quot;</span> <span class="na">value=</span><span class="s">&quot;100&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">&lt;!-- jms模板方法 --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;jmsTemplate&quot;</span> <span class="na">class=</span><span class="s">&quot;org.springframework.jms.core.JmsTemplate&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;constructor-arg</span> <span class="na">ref=</span><span class="s">&quot;jmsFactory&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/constructor-arg&gt;</span>
</span><span class='line'>      <span class="c">&lt;!-- 默认会创建queue类型的目标</span>
</span><span class='line'><span class="c">      &lt;property name=&quot;defaultDestinationName&quot; value=&quot;queue/methodSpyLogger&quot;&gt;&lt;/property&gt; --&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;defaultDestination&quot;</span> <span class="na">ref=</span><span class="s">&quot;destinationQueue1&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">&lt;!-- 发送消息的目的地 --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;destinationQueue1&quot;</span> <span class="na">class=</span><span class="s">&quot;org.apache.activemq.command.ActiveMQQueue&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="c">&lt;!-- 设置消息队列的名字 --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;constructor-arg</span>  <span class="na">value=</span><span class="s">&quot;queue/methodSpyLogger&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c">&lt;!-- 配置Spring和方法相关的监控 --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;method-pointcut&quot;</span> <span class="na">class=</span><span class="s">&quot;org.springframework.aop.support.JdkRegexpMethodPointcut&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;patterns&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;list&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>com.lovo.mis.xjgl.service.impl.*<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/list&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- 方法AOP拦截器 --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;spy-method-interceptor&quot;</span>
</span><span class='line'>          <span class="na">class=</span><span class="s">&quot;com.monitor.client.spy.SpyMethodIntercepter&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;messageDao&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">&quot;com.monitor.client.dao.JMSMessageDaoImpl&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;jmsTemplate&quot;</span> <span class="na">ref=</span><span class="s">&quot;jmsTemplate&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>          <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;userNameSessionKey&quot;</span> <span class="na">value=</span><span class="s">&quot;loginUserName&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- 将切面应用到通知上 --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;aop:config</span> <span class="na">proxy-target-class=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;aop:advisor</span> <span class="na">advice-ref=</span><span class="s">&quot;spy-method-interceptor&quot;</span>
</span><span class='line'>                     <span class="na">pointcut-ref=</span><span class="s">&quot;method-pointcut&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/aop:config&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;配置文件中有几个地方需要进行说明：<!-- more --></p>

<p>&emsp;&emsp;1、目标机器要修改的部分是JdkRegexpMethodPointcut中的patterns，由patterns指定需要监控的业务类所在的位置。</p>

<p>&emsp;&emsp;2、jmsFactory部分配置你的异步消息服务器连接信息，比如brokerURL等。</p>

<p>&emsp;&emsp;3、jmsTemplate中，通过defaultDestination指定一个Destination，因为一个消息服务器上存在多个Destination。也可以通过defaultDestinationName直接指定消息Destination的名称，系统默认创建的是queue，也就是说，如果你要使用topic类型的消息，就必须通过defaultDestination指定一个Destination。</p>

<p>&emsp;&emsp;4、messageDao可自由替换为其它实现类，比如你可以写一个mongoDB版本的实现以提供更好的性性，支持更大数据量。</p>

<p>&emsp;&emsp;最后来看看消费者代码，是直接使用ActiveMQ驱动实现的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="n">ActiveMQConnectionFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ActiveMQConnectionFactory</span><span class="o">(</span><span class="s">&quot;tcp://localhost:61616&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Connection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">createConnection</span><span class="o">();</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//尝试真正建立连接，这里可以catch Exception</span>
</span><span class='line'>    <span class="n">connection</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//得到一个会话，只有得到会话后，才可进行后续的操作</span>
</span><span class='line'>    <span class="n">Session</span> <span class="n">session</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">createSession</span><span class="o">(</span><span class="kc">false</span><span class="o">,</span> <span class="n">Session</span><span class="o">.</span><span class="na">AUTO_ACKNOWLEDGE</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//创建一个目标队列</span>
</span><span class='line'>    <span class="n">Destination</span> <span class="n">queue</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="na">createQueue</span><span class="o">(</span><span class="s">&quot;queue/methodSpyLogger&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">MessageConsumer</span> <span class="n">consumer</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="na">createConsumer</span><span class="o">(</span><span class="n">queue</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//可通过其它一些机制，来改变flag为false，以退出处理</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">flag</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">while</span> <span class="o">(</span><span class="n">flag</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">ObjectMessage</span> <span class="n">msg</span> <span class="o">=</span> <span class="o">(</span><span class="n">ObjectMessage</span><span class="o">)</span><span class="n">consumer</span><span class="o">.</span><span class="na">receive</span><span class="o">();</span>
</span><span class='line'>      <span class="n">MethodLoggerMessage</span> <span class="n">myMsg</span> <span class="o">=</span> <span class="o">(</span><span class="n">MethodLoggerMessage</span><span class="o">)</span><span class="n">msg</span><span class="o">.</span><span class="na">getObject</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">myMsg</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">//这里，可调用dao或service，向关系数据库(或nosql)中保存msg中的内容&quot;);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">session</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">connection</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;注意，如果队列中已经没有消息了，代码中的consumer.receive()会阻塞，直到有新的消息后再处理。我们也可以采用监听器的方式来处理消息服务器中的消息，比如下面的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="c1">//处理消息者</span>
</span><span class='line'>    <span class="n">MessageConsumer</span> <span class="n">consumer</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="na">createConsumer</span><span class="o">(</span><span class="n">queue</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//处理多条消息</span>
</span><span class='line'>    <span class="n">consumer</span><span class="o">.</span><span class="na">setMessageListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MessageListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onMessage</span><span class="o">(</span><span class="n">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>         <span class="c1">//转换，这可以对类型进行检测，使用instance of</span>
</span><span class='line'>          <span class="n">TextMessage</span> <span class="n">txtMsg</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextMessage</span><span class="o">)</span><span class="n">msg</span><span class="o">;</span>
</span><span class='line'>          <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;得到消息内容：&quot;</span><span class="o">+</span><span class="n">txtMsg</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
</span><span class='line'>              <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;处理完一条消息！！&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="c1">//如果开启了事务，请session.commit();</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">JMSException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>              <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;当目标程序运行时，我们可以打开ActiveMQ的管理界面，即可发现这个queue及上面的消费者。</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/04/active_mq_admin.jpg' width='' height='' title='ActiveMQ的管理界面'><span class='caption-text'>ActiveMQ的管理界面</span></span></p>

<p>&emsp;&emsp;大家还要注意的是，我们的AOP通知中，还获取了调用者的ip，访问者姓名等信息，这些和web环境相关的信息是通过类似于下面的代码实现的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">ServletRequestAttributes</span> <span class="n">sas</span> <span class="o">=</span> <span class="o">(</span><span class="n">ServletRequestAttributes</span><span class="o">)</span><span class="n">RequestContextHolder</span><span class="o">.</span><span class="na">getRequestAttributes</span><span class="o">();</span>
</span><span class='line'><span class="n">HttpServletRequest</span> <span class="n">req</span> <span class="o">=</span> <span class="n">sas</span><span class="o">.</span><span class="na">getRequest</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">logger</span><span class="o">.</span><span class="na">setIp</span><span class="o">(</span><span class="n">req</span><span class="o">.</span><span class="na">getLocalAddr</span><span class="o">());</span>
</span><span class='line'><span class="n">logger</span><span class="o">.</span><span class="na">setSessionId</span><span class="o">(</span><span class="n">sas</span><span class="o">.</span><span class="na">getSessionId</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'><span class="k">if</span> <span class="o">(</span><span class="n">req</span><span class="o">.</span><span class="na">getSession</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">logger</span><span class="o">.</span><span class="na">setOperater</span><span class="o">((</span><span class="n">String</span><span class="o">)</span><span class="n">req</span><span class="o">.</span><span class="na">getSession</span><span class="o">().</span><span class="na">getAttribute</span><span class="o">(</span><span class="n">userNameSessionKey</span><span class="o">));</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>      
</span></code></pre></td></tr></table></div></figure>


<p> &emsp;&emsp;其中的RequestContextHolder是由spring封装，具体做法是将用户web相关的信息通过filter或listener放入ThreadLocal对象中，在需要的地方通过RequestContextHolder从ThreadLocal中取得，因此，你想让上面的代码正常工作，要记得在web.xml中添加一个spring已经写好的RequestContextListener监听器哦。</p>

<figure class='code'><figcaption><span>web.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;listener&gt;</span>
</span><span class='line'>  <span class="nt">&lt;listener-class&gt;</span>
</span><span class='line'>      org.springframework.web.context.request.RequestContextListener
</span><span class='line'>  <span class="nt">&lt;/listener-class&gt;</span>
</span><span class='line'><span class="nt">&lt;/listener&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p> &emsp;&emsp;当然，本例中所使用的消息服务器是ActiveMQ，这个服务器实现了JMS规范，在企业级应用场景中不会存在问题。如果在互联网行业中，由于会面临高并发、大流量等情况，ActiveMQ不能保证高可用性、稳定性及性能要求，这个时候我们可以考虑其它的第三方消息服务器，比如淘宝的taobao-metaq，alibaba-rocketmq等，这些服务器是经过实际考验的开源产品，值得在互联网场景中使用。当然，这些MQ服务器和JMS规范没有任何关系，JMS企业级要求中并没有考虑过多的并发、大数据量的需求。</p>

<p> &emsp;&emsp;另外，kafka，rabbitmq等消息服务器也具有不错的性能，都可以进入架构的技术方案选型范围。比如，下面是一段rabbitmq的调用示例代码(注：rabbitmq需要er_lang并发程序包支持哦)，和JMS的调用相当类似。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">com.rabbitmq.client.Channel</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.rabbitmq.client.Connection</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.rabbitmq.client.ConnectionFactory</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="o">.......</span><span class="c1">//略去代码</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">testSendMessage</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">SimpleDateFormat</span> <span class="n">sf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd hh:mm:ss&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ConnectionFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ConnectionFactory</span><span class="o">();</span>
</span><span class='line'>      <span class="n">factory</span><span class="o">.</span><span class="na">setHost</span><span class="o">(</span><span class="s">&quot;localhost&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Connection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">newConnection</span><span class="o">();</span>
</span><span class='line'>      <span class="n">Channel</span> <span class="n">channel</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">createChannel</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="n">sf</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="k">new</span> <span class="n">Date</span><span class="o">())</span> <span class="o">+</span> <span class="s">&quot;:Hello!!!&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">channel</span><span class="o">.</span><span class="na">basicPublish</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">,</span> <span class="s">&quot;queue/sendEmail&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      
</span><span class='line'>      <span class="n">channel</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      <span class="n">connection</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;send message ok!&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">testReciveMessage</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;recever starting.....&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">QUEUE_NAME</span> <span class="o">=</span> <span class="s">&quot;queue/sendEmail&quot;</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">SimpleDateFormat</span> <span class="n">sf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd hh:mm:ss&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ConnectionFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ConnectionFactory</span><span class="o">();</span>
</span><span class='line'>      <span class="n">factory</span><span class="o">.</span><span class="na">setHost</span><span class="o">(</span><span class="s">&quot;localhost&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Connection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">newConnection</span><span class="o">();</span>
</span><span class='line'>      <span class="n">Channel</span> <span class="n">channel</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">createChannel</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">channel</span><span class="o">.</span><span class="na">queueDeclare</span><span class="o">(</span><span class="n">QUEUE_NAME</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">QueueingConsumer</span> <span class="n">consumer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">QueueingConsumer</span><span class="o">(</span><span class="n">channel</span><span class="o">);</span>
</span><span class='line'>      <span class="n">channel</span><span class="o">.</span><span class="na">basicConsume</span><span class="o">(</span><span class="n">QUEUE_NAME</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="n">consumer</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">QueueingConsumer</span><span class="o">.</span><span class="na">Delivery</span> <span class="n">delivery</span> <span class="o">=</span> <span class="n">consumer</span><span class="o">.</span><span class="na">nextDelivery</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">msg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">delivery</span><span class="o">.</span><span class="na">getBody</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;rec end!!!&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p> &emsp;&emsp;先说到这吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[监控系统中的异步消息使用实例（一）]]></title>
    <link href="http://yanyaner.com/blog/2014/04/08/async_message_architect1/"/>
    <updated>2014-04-08T12:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/04/08/async_message_architect1</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;以后的文章要尽量做到通俗，让非技术人员都读得懂，道理就跟艺术作品一样，一件好的作品，不需要配任何文字说明就足以打动普通观众，做到雅俗共赏而且有深度和内涵，其实，这需要作者相当的功力。</p>

<p>&emsp;&emsp;近期一些童鞋在实现一个监控系统，其中的一个功能是：对监控平台上布署的第三方应用业务方法执行细节进行监控，比如：方法调用者，调用者ip，应用系统名称，子系统名称，方法名称，执行耗时等信息。如何能够让监控系统得到目标机器上需要监控的业务方法执行情况呢？如何保证在监控的过程中不影响对方的业务的正常执行？下面我给出一种参考架构实现，这也是在概要设计的时候就应该明确的东西（专业名词叫架构原型）。</p>

<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/04/monitor_jms1.jpg' width='' height='' title='业务方法监控架构'><span class='caption-text'>业务方法监控架构</span></span></p>

<p>&emsp;&emsp;首先，MonitorPlatform是我们的监控平台（图中青色部分），targetServer上运行着需要监控的系统hotel project（图中黄色部分）,如果我们想要获得目标机器上的我们需要的信息，最简单的办法是运行一个spy程序在对方的机器上，图中的spy app是起这个作用的（当然你也可以使用jmx规范来实现类似功能），举个不恰当的例子，就好比你在某人的机器上安装了一个木马程序，通过远程控制端你就可以得到对方机器上你感兴趣的任何东西，甚至包括控制摄像头哦。</p>

<p>&emsp;&emsp;其次，监控平台同时要监控多个目标系统，就我们例子中监控业务方法执行情况而言，就需要把监控得到的信息加以持久化以备后查，如果目标系统业务繁忙，而我们的spy app又要将取到的信息进行数据库持久化，数据库很可能会成为性能瓶颈从而造成性能问题，因此，我在这里采用了异步消息系统的设计，以缓解持久化压力。正如图所示，spy app将采集到的业务方法执行数据直接写入异步消息服务器的queue中，而monitor platform中的处理程序将从queue中取出消息，再进行后续的持久化处理。这种异步的消息设计方式可以有效缓解系统的压力，在很多项目中都可以采用（互联网项目中可用这种方式来&#8221;削峰&#8221;，缓解高并发压力）。</p>

<p>&emsp;&emsp;最后一个问题,spy如何采集到目标机器业务方法的执行情况呢。最佳答案当然是AOP。大家可以参考我的另一篇文章<a href="http://yanyaner.com/blog/2013/03/26/logger/">一种日志记录解决方案</a>。</p>

<p>&emsp;&emsp;下面，我们一起来看看架构原型中的原代码实现吧。MethodLoggerMessage是需要持久化的消息对象，请注意实现Serializable接口。<!-- more --></p>

<figure class='code'><figcaption><span>MethodLoggerMessage.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">monitor</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">commons</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 需要持久化的对象消息</span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MethodLoggerMessage</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//方法执行时间，单位：毫秒</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">double</span> <span class="n">howLong</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">//方法名</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">methodName</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">//执行者ip地址</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">ip</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">//执行者session会话id</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">sessionId</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">//执行者</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">operater</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">//执行时间</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Date</span> <span class="n">execTimer</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">double</span> <span class="nf">getHowLong</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">howLong</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setHowLong</span><span class="o">(</span><span class="kt">double</span> <span class="n">howLong</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">howLong</span> <span class="o">=</span> <span class="n">howLong</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getMethodName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">methodName</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setMethodName</span><span class="o">(</span><span class="n">String</span> <span class="n">methodName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">methodName</span> <span class="o">=</span> <span class="n">methodName</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getIp</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">ip</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setIp</span><span class="o">(</span><span class="n">String</span> <span class="n">ip</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">ip</span> <span class="o">=</span> <span class="n">ip</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getOperater</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">operater</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setOperater</span><span class="o">(</span><span class="n">String</span> <span class="n">operater</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">operater</span> <span class="o">=</span> <span class="n">operater</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getSessionId</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">sessionId</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setSessionId</span><span class="o">(</span><span class="n">String</span> <span class="n">sessionId</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">sessionId</span> <span class="o">=</span> <span class="n">sessionId</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Date</span> <span class="nf">getExecTimer</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">execTimer</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setExecTimer</span><span class="o">(</span><span class="n">Date</span> <span class="n">execTimer</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">execTimer</span> <span class="o">=</span> <span class="n">execTimer</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;MethodLoggerMessage [howLong=&quot;</span> <span class="o">+</span> <span class="n">howLong</span> <span class="o">+</span> <span class="s">&quot;, methodName=&quot;</span>
</span><span class='line'>              <span class="o">+</span> <span class="n">methodName</span> <span class="o">+</span> <span class="s">&quot;, ip=&quot;</span> <span class="o">+</span> <span class="n">ip</span> <span class="o">+</span> <span class="s">&quot;, sessionId=&quot;</span> <span class="o">+</span> <span class="n">sessionId</span>
</span><span class='line'>              <span class="o">+</span> <span class="s">&quot;, operater=&quot;</span> <span class="o">+</span> <span class="n">operater</span> <span class="o">+</span> <span class="s">&quot;, execTimer=&quot;</span> <span class="o">+</span> <span class="n">execTimer</span> <span class="o">+</span> <span class="s">&quot;]&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;IMessageDao接口用来定义消息持久化行为，可以有很同种不同的实现版本，如基于消息的，关系数据库的或nosql的等等，有了这个接口，我们在intercepter中就可以做到拦截代码和持久化代码的解耦。</p>

<figure class='code'><figcaption><span>IMessageDao.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">monitor</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">dao</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 持久化消息服务</span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IMessageDao</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">persist</span><span class="o">(</span><span class="n">Serializable</span> <span class="n">msg</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;接下来是消息持久化实现类源代码。因为采用了jms，因此我直接使用了spring对jms封装的模板方法实现。</p>

<figure class='code'><figcaption><span>JMSMessageDaoImpl.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">monitor</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">dao</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.jms.JMSException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.jms.Message</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.jms.ObjectMessage</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.jms.Session</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.jms.core.JmsTemplate</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.jms.core.MessageCreator</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * jms消息处理实现</span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JMSMessageDaoImpl</span> <span class="kd">implements</span> <span class="n">IMessageDao</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">//jms模板</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">JmsTemplate</span> <span class="n">jmsTemplate</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">//目标队列名称</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">destinationName</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">persist</span><span class="o">(</span><span class="kd">final</span> <span class="n">Serializable</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">MessageCreator</span> <span class="n">mc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MessageCreator</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="n">Message</span> <span class="nf">createMessage</span><span class="o">(</span><span class="n">Session</span> <span class="n">session</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">JMSException</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">//创建对象消息，并发送之</span>
</span><span class='line'>              <span class="n">ObjectMessage</span> <span class="n">objMsg</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="na">createObjectMessage</span><span class="o">();</span>
</span><span class='line'>              <span class="n">objMsg</span><span class="o">.</span><span class="na">setObject</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>              <span class="k">return</span> <span class="n">objMsg</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">};</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">destinationName</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">jmsTemplate</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">mc</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">//发送到指定的目标</span>
</span><span class='line'>          <span class="n">jmsTemplate</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">destinationName</span><span class="o">,</span> <span class="n">mc</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setJmsTemplate</span><span class="o">(</span><span class="n">JmsTemplate</span> <span class="n">jmsTemplate</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">jmsTemplate</span> <span class="o">=</span> <span class="n">jmsTemplate</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setDestinationName</span><span class="o">(</span><span class="n">String</span> <span class="n">destinationName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">destinationName</span> <span class="o">=</span> <span class="n">destinationName</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;最重要的就是这个拦截器实现了。环绕拦截器，功能最为强大。</p>

<figure class='code'><figcaption><span>SpyMethodIntercepter.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">monitor</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">spy</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.aopalliance.intercept.MethodInterceptor</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.aopalliance.intercept.MethodInvocation</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.slf4j.Logger</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.slf4j.LoggerFactory</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.DisposableBean</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.InitializingBean</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.context.request.RequestContextHolder</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.context.request.ServletRequestAttributes</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.monitor.client.commons.MethodLoggerMessage</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.monitor.client.dao.IMessageDao</span><span class="o">;</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 目标服务器方法拦截器，调用信息可以通过异步消息机制持久化，具体要看IMessageDao实现</span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SpyMethodIntercepter</span> <span class="kd">implements</span> <span class="n">MethodInterceptor</span><span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">LOG</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">SpyMethodIntercepter</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//消息处理dao</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">IMessageDao</span> <span class="n">messageDao</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">//当前登录者在目标系统中的登录用户名之key,在配置第三方程序时注入</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">userNameSessionKey</span> <span class="o">=</span> <span class="s">&quot;loginedUserName&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Object</span> <span class="nf">invoke</span><span class="o">(</span><span class="n">MethodInvocation</span> <span class="n">method</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Throwable</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//取方法执行时的开始时间</span>
</span><span class='line'>      <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">nanoTime</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">method</span><span class="o">.</span><span class="na">proceed</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">throw</span> <span class="n">ex</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">//为了不影响目标方法的运行，这里再次try</span>
</span><span class='line'>              <span class="c1">//得到访问者request对象</span>
</span><span class='line'>              <span class="n">ServletRequestAttributes</span> <span class="n">sas</span> <span class="o">=</span> <span class="o">(</span><span class="n">ServletRequestAttributes</span><span class="o">)</span><span class="n">RequestContextHolder</span><span class="o">.</span><span class="na">getRequestAttributes</span><span class="o">();</span>
</span><span class='line'>              <span class="n">HttpServletRequest</span> <span class="n">req</span> <span class="o">=</span> <span class="n">sas</span><span class="o">.</span><span class="na">getRequest</span><span class="o">();</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">//取方法执行后的时间</span>
</span><span class='line'>              <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">nanoTime</span><span class="o">();</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">//方法执行时间</span>
</span><span class='line'>              <span class="kt">long</span> <span class="n">howLong</span> <span class="o">=</span> <span class="n">end</span> <span class="o">-</span> <span class="n">start</span><span class="o">;</span>
</span><span class='line'>              <span class="n">String</span> <span class="n">methodName</span> <span class="o">=</span> <span class="n">method</span><span class="o">.</span><span class="na">getMethod</span><span class="o">().</span><span class="na">getName</span><span class="o">();</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">//持久化方法调用日志</span>
</span><span class='line'>              <span class="n">MethodLoggerMessage</span> <span class="n">logger</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MethodLoggerMessage</span><span class="o">();</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">logger</span><span class="o">.</span><span class="na">setMethodName</span><span class="o">(</span><span class="n">methodName</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>              <span class="c1">//方法执行时间，单位：毫秒</span>
</span><span class='line'>              <span class="n">logger</span><span class="o">.</span><span class="na">setHowLong</span><span class="o">((</span><span class="kt">double</span><span class="o">)</span><span class="n">howLong</span><span class="o">/(</span><span class="mi">1000</span><span class="o">*</span><span class="mi">1000</span><span class="o">));</span>
</span><span class='line'>      
</span><span class='line'>              <span class="n">logger</span><span class="o">.</span><span class="na">setIp</span><span class="o">(</span><span class="n">req</span><span class="o">.</span><span class="na">getLocalAddr</span><span class="o">());</span>
</span><span class='line'>              <span class="n">logger</span><span class="o">.</span><span class="na">setSessionId</span><span class="o">(</span><span class="n">sas</span><span class="o">.</span><span class="na">getSessionId</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">req</span><span class="o">.</span><span class="na">getSession</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">logger</span><span class="o">.</span><span class="na">setOperater</span><span class="o">((</span><span class="n">String</span><span class="o">)</span><span class="n">req</span><span class="o">.</span><span class="na">getSession</span><span class="o">().</span><span class="na">getAttribute</span><span class="o">(</span><span class="n">userNameSessionKey</span><span class="o">));</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>              <span class="n">logger</span><span class="o">.</span><span class="na">setExecTimer</span><span class="o">(</span><span class="k">new</span> <span class="n">Date</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>              <span class="n">messageDao</span><span class="o">.</span><span class="na">persist</span><span class="o">(</span><span class="n">logger</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">exc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">//do nothing or LOG.debug(ex.getMessage());</span>
</span><span class='line'>              <span class="n">LOG</span><span class="o">.</span><span class="na">warn</span><span class="o">(</span><span class="s">&quot;Error in spy: {}&quot;</span><span class="o">,</span> <span class="n">exc</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setMessageDao</span><span class="o">(</span><span class="n">IMessageDao</span> <span class="n">messageDao</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">messageDao</span> <span class="o">=</span> <span class="n">messageDao</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUserNameSessionKey</span><span class="o">(</span><span class="n">String</span> <span class="n">userNameSessionKey</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">userNameSessionKey</span> <span class="o">=</span> <span class="n">userNameSessionKey</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;至此，spy程序这边基本开发完成了。目标服务器上，该如何配置呢？监控平台的消息处理者又该如何实现呢？</p>

<p>&emsp;&emsp;且听下回分解。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[缓存之redis]]></title>
    <link href="http://yanyaner.com/blog/2014/03/27/cache-redis/"/>
    <updated>2014-03-27T12:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/03/27/cache-redis</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper'><img class='caption' src='http://yanyaner.com/uploads/2014/03/redis.jpg' width='' height='' title=''><span class='caption-text'></span></span></p>

<p>&emsp;&emsp;缓存在软件系统中有着不可替代的作用，特别是访问量巨大的网站，我们对系统热点数据的缓存将会降低数据库的压力，提高系统性能。目前常用的缓存大致分为本地缓存和独立的缓存服务，本地缓存常用的有ehcached,oscached等，而独立的服务器缓存常用的有memcached、redis等。</p>

<p>&emsp;&emsp;Redis is an open source, BSD licensed, advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets.</p>

<p>&emsp;&emsp;这是redis官网<a href="http://redis.io/">redis.io</a>对redis的描述，我们从中可以看出，它是一个高性能的、更加高级的key-value缓存服务器。其中的更加高级，可能是相对于memcached这种简单的缓存服务器而言。比如redis可以在不取回缓存对象的情况下，通过指令直接对缓存的数字类型进行加、减操作，也可以对缓存的list中的内容进行修改操作，还可以对缓存的字符串进行直接的修改操作等等，这些操作都不需要取回缓存中的数据，因此没有序列化、反序列化的开销，性能会更高。另外，redis对一些复杂数据结构的支持，可以满足一些特定场景下的需求，比如sorted sets。</p>

<p>&emsp;&emsp;当然更高级、先进的redis，在功能强大的同时也增加了自身的复杂性。复杂可不是什么好事情，复杂的东西可能会给我们带来烦恼，实践证明，真正能够解决问题的方案一般都是简单的。因此，就redis和memcached而言，后者功能简单也更容易使用，这就造成了memcached在当前依然是缓存服务器中的老大（当然任何事都不能太绝对，我们在实际项目中可以根据不同的需求应用场景选择不同的缓存方案）。</p>

<p>&emsp;&emsp;本文是入门级文章，我在讲解redis的同时，也会顺便提到memcached，以便于大家对比。<!-- more --></p>

<p>&emsp;&emsp;先来安装redis，同样以windows系统为例（因为更多同鞋没有安装linux环境）。winodws的安装很简单，下载redis for windows的编译版本（地址在：<a href="http://code.google.com/p/servicestack/downloads/list">http://code.google.com/p/servicestack/downloads/list</a>），这是一个zip压缩包，将这个包解压到某个目录下，运行其中的redis-server.exe即可启动服务器。</p>

<p>&emsp;&emsp;如果你要指定一些额外的配置参数，可以在运行cmd中指定redis的配置文件，比如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>redis-server.exe conf/myredis.conf，
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;这样就可以在myredis.conf中配置更多的信息了。比如：daemonize，logfile，database，dbfilename，slaveof,loglevel等等，其中有两个参数我要说一下。</p>

<p>&emsp;&emsp;dbfilename参数，这个参数可以指定持久化文件名，默认是dump.rdb。这个参数说明redis可以将内存中缓存的东西进行持久化，如果您缓存服务器宕机重启了，redis下次重启时可以自动从这个文件中读取数据并恢复至内存中。这个功能在memcached中是没有的，memcached如果重新启动，缓存的数据将全部丢失。话又说回来，缓存的数据一般是来自数据库的，完全可以重新加载，系统在经过一段时间的运行后自然会重新填充到缓存服务器中的。当然，丢失缓存数据这对于一些大数据高并发发的网站来说，也许并不可接受，因为可能在瞬间造成数据库的极大访问压力而造成系统崩溃。</p>

<p>&emsp;&emsp;另一个参数是slaveof，这个参数可以指定redis主服务器，也就是说redis可以做成主从结构的，通过这种架构来保证系统的高可用性。当然，memcached也可以做成主从结构，但memcache需要第三方的插件支持（可以下载memcached-repcached并安装）。主从结构可以做到当主服务器发生故障的时候，从服务器可以升级以继续提供服务。</p>

<p>&emsp;&emsp;说到高可用性，另一个问题不得不提出，那就是分布式（即集群），因为缓存的东西都是在内在中的，一台服务器的内在毕竟有限，那我们就得搭建一个服务器集群在多台服务器上保存缓存的数据（即分片保存）。如何根据客户端的数据key找到集群中的正确的缓存服务器呢(实际项目中更有某台缓存服务器故障下线，或添加新的缓存服务器)？目前的做法是一致性hash，具体算法大家可以去查一下哦。</p>

<p>&emsp;&emsp;对分布式的Redis的访问，java客户端程序Jedis中已有实现，具体代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">List</span><span class="o">&lt;</span><span class="n">JedisShardInfo</span><span class="o">&gt;</span> <span class="n">jdsInfoList</span> <span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">JedisShardInfo</span><span class="o">&gt;();</span>
</span><span class='line'><span class="c1">//集群中的A服务器</span>
</span><span class='line'><span class="n">JedisShardInfo</span> <span class="n">infoA</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JedisShardInfo</span><span class="o">(</span><span class="n">hostA</span><span class="o">,</span> <span class="n">portA</span><span class="o">);</span>
</span><span class='line'><span class="c1">//集群中的B服务器</span>
</span><span class='line'><span class="n">JedisShardInfo</span> <span class="n">infoB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JedisShardInfo</span><span class="o">(</span><span class="n">hostB</span><span class="o">,</span> <span class="n">portB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//加入可用结点中</span>
</span><span class='line'><span class="n">jdsInfoList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">infoA</span><span class="o">);</span>
</span><span class='line'><span class="n">jdsInfoList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">infoB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//下面的Hashing.MURMUR_HASH就是由Jedis提供的分布式的hash key算法</span>
</span><span class='line'><span class="n">ShardedJedisPool</span> <span class="n">pool</span> <span class="o">=</span><span class="k">new</span> <span class="n">ShardedJedisPool</span><span class="o">(</span><span class="n">config</span><span class="o">,</span> <span class="n">jdsInfoList</span><span class="o">,</span> <span class="n">Hashing</span><span class="o">.</span><span class="na">MURMUR_HASH</span><span class="o">,</span> <span class="n">Sharded</span><span class="o">.</span><span class="na">DEFAULT_KEY_TAG_PATTERN</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">ShardedJedis</span> <span class="n">jedis</span> <span class="o">=</span> <span class="n">pool</span><span class="o">.</span><span class="na">getResource</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//下面就可以进行操作了哦</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;下面简单说一下，在java中如何访问redis。现在常用的客户端是jedis,具体的操作我也不想再写了，大家可以从这些方面去体验Redis的独特之处，我贴出网址。</p>

<p>&emsp;&emsp;一、丰富数据类型的支持。<a href="http://www.open-open.com/lib/view/open1385173126448.html">redis中各种数据类型对应的jedis操作命令 </a>.</p>

<p>&emsp;&emsp;二、对字符串的操作。<a href="http://blog.csdn.net/java2000_wl/article/details/8535486">redis &ndash; String字符串操作 </a>.</p>

<p>&emsp;&emsp;三、事务等特性。<a href="http://www.blogways.net/blog/2013/06/02/jedis-demo.html">Redis的Java客户端Jedis的八种调用方式(事务、管道、分布式…)介绍</a>.</p>

<p>&emsp;&emsp;四、其它的一些特殊用途，比如跨jvm主键生成器等。<a href="http://www.blogjava.net/masfay/archive/2012/07/03/382080.html">Jedis使用总结【pipeline】【分布式的id生成器】【分布式锁【watch】【multi】】【redis分布式】</a>.</p>

<p>&emsp;&emsp;大家要注意的是，大部分Jedis api的操作上传入的参数都是String或byte[],如果我们需要把对象放入redis中去，必须对对象进行序列化，而从redis中读出来又得反序列化，比如下面的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">tx</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">&quot;key_user1&quot;</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(),</span> <span class="n">SerializationUtils</span><span class="o">.</span><span class="na">serialize</span><span class="o">(</span><span class="n">u</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'><span class="n">User</span> <span class="n">u</span> <span class="o">=</span> <span class="o">(</span><span class="n">User</span><span class="o">)</span><span class="n">SerializationUtils</span><span class="o">.</span><span class="na">deserialize</span><span class="o">(</span><span class="n">jedis</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;key_user1&quot;</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;其中SerializationUtils是由spring core提供的，你也可以使用apache工具包中提供的类似功能类，或都自己用对象流实现也是一样的。</p>

<p>&emsp;&emsp;另外，如果您的项目中使用spring框架，您可以使用<a href="http://projects.spring.io/spring-data-redis/#quick-start">spring-data-redis</a>，spring data redis提供了几个常用的redis客户端的封装，以在高层面抽像出统一的使用接口（其实相当于适配器），建议在spring项目中采用这种方式。</p>

<p>&emsp;&emsp;同时，taobao也开源了自己redis客户端<a href="https://github.com/taobao/tedis">tedis</a>，据说具有更好的性能和可用性，tedis还提供了object的高层api，使用起来更为方便。另外，taobao开源了很多的软件系统，对于中国的开源界来说是一件很好的事，相比腾讯这些自私的公司，品质自然不在一个档次，但阿里系统的开源源代码中似乎都不写什么注释说明的（比如druid连接池开源代码），也许是这些公司的牛人太忙了，也许是认为写了注释也没人会去看吧，呵呵。</p>

<p>&emsp;&emsp;好,redis的内容先简单介绍到这吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读写分离架构之mysql实例]]></title>
    <link href="http://yanyaner.com/blog/2014/03/10/db-read-write-split/"/>
    <updated>2014-03-10T12:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/03/10/db-read-write-split</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;读写分离架构对提升系统性能非常重要，特别是在互联网项目中，查询操作可能达到90%以上，而且有较高的并发性。</p>

<p>&emsp;&emsp;对于数据库的读写分离，即是把所有的增、删、改操作发送到主数据库，所有查询操作发送到从数据库，通过增加从数据库实例个数以提升查询性能。当然也可以使用noSql数据库(如mongodb,hbase等)、搜索引擎（如lucene）等技术来做查询，关系数据库做核心数据保存，这种方式也是基于读写分离架构。</p>

<p>&emsp;&emsp;更多性能优化文章，大家可以参考我的文章：
<a href="http://yanyaner.com/blog/2010/11/05/prof-web/">系统性能优化总结之表现层</a>，<a href="http://yanyaner.com/blog/2010/11/08/prof-service/">系统性能优化总结之业务层</a>，<a href="http://yanyaner.com/blog/2010/11/09/prof-dao/">系统性能优化总结之持久层篇</a>，技术在不断发展，这三篇文章是几年前写的，目前看来少了很多东西，我后续将把一些近年来新的内容添加上去以符合一些新的场景。</p>

<p>&emsp;&emsp;目前很多数据库都支持主从复制，读写分离，如：Oracle， SqlServer， Mysql等，主数据库在写入数据时同时同步到从数据库。此文以mysql为例给大家加以介绍。网上也有很多这样的文章，大家可以去搜索阅读，但这些文章基本上都是基于*inux平台的，我将以windows平台的配置为例（其实原理都是一样的，只是配置上的一些差异而已）。</p>

<p>&emsp;&emsp;简单起见，机器用我的笔记本。localhost:3307为主服务器master，localhost:3308为从属服务器slave（可以增加多个slave），mysql版本为5.6。先配置主服务器，编辑my.ini，内容如下：<!-- more--></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[mysqld]</span>
</span><span class='line'> <span class="na">basedir</span> <span class="o">=</span><span class="s">D:/server/db/MySQL Server5.6</span>
</span><span class='line'><span class="s"> datadir =D:/server/db/mysql_db1/dbfile</span>
</span><span class='line'><span class="s"> port = 3307</span>
</span><span class='line'><span class="s"> server_id = 1</span>
</span><span class='line'><span class="s"> log-bin=mysql-bin</span>
</span><span class='line'>
</span><span class='line'> <span class="err">skip-character-set-client-handshake</span>
</span><span class='line'> <span class="na">init-connect</span> <span class="o">=</span> <span class="s">&#39;SET NAMES utf8&#39;</span>
</span><span class='line'><span class="s"> character_set_server=utf8</span>
</span><span class='line'><span class="s"> sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES </span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;从属数据库配置是(和主服务器的差别在于port、server_id与datadir不同)：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[mysqld]</span>
</span><span class='line'> <span class="na">basedir</span> <span class="o">=</span><span class="s">D:/server/db/MySQL Server5.6</span>
</span><span class='line'><span class="s"> datadir =D:/server/db/mysql_db2/dbfile</span>
</span><span class='line'><span class="s"> port = 3308</span>
</span><span class='line'><span class="s"> server_id = 10</span>
</span><span class='line'><span class="s"> log-bin=mysql-bin</span>
</span><span class='line'><span class="s"> skip-character-set-client-handshake</span>
</span><span class='line'><span class="s"> init-connect = &#39;SET NAMES utf8&#39;</span>
</span><span class='line'><span class="s"> character_set_server=utf8</span>
</span><span class='line'><span class="s"> sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES </span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;为了方便启动，把这两个数据库都注册为win服务，命令如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'> <span class="err">D:\server\db\MySQL</span> <span class="err">Server5.6\bin&gt;mysqld</span>
</span><span class='line'> <span class="err">--install</span> <span class="err">mysql5.6.master</span>
</span><span class='line'> <span class="na">--defaults-file</span><span class="o">=</span><span class="s">D:\server\db\mysql_db1\my.ini</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;从属服务器的注册与之类似不在写出，我们接下来在系统服务中分别启动这两个服务器实例。</p>

<p>&emsp;&emsp;再接下来要做的事情是配置主从复制功能，主服务器的增、删、改数据操作都将同步到多台从属服务器上，先在主服务器上给从属服务器分配登录账号，这个账号将是从属服务器进行数据同步操作的授权，命令如下（账号是backup，密码是123）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="err">GRANT</span> <span class="err">REPLICATION</span> <span class="err">SLAVE</span> <span class="err">ON</span>
</span><span class='line'><span class="err">*.*</span> <span class="err">to</span> <span class="err">&#39;backup&#39;@&#39;localhost&#39;</span>
</span><span class='line'><span class="err">identified</span> <span class="err">by</span> <span class="err">&#39;123’</span><span class="c1">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;继续命令行中运行：show master status; 记录下File及Position两个输出内容，这两个参数在配置slave时需要用到。</p>

<p>&emsp;&emsp;登录从服务器，执行下面的命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="err">change</span> <span class="err">master</span> <span class="err">to</span>
</span><span class='line'><span class="na">master_host</span><span class="o">=</span><span class="s">’localhost’,</span>
</span><span class='line'><span class="na">master_port</span><span class="o">=</span><span class="s">3307,</span>
</span><span class='line'><span class="na">master_user</span><span class="o">=</span><span class="s">’backup’,</span>
</span><span class='line'><span class="na">master_password</span><span class="o">=</span><span class="s">’123’,</span>
</span><span class='line'><span class="na">master_log_file</span><span class="o">=</span><span class="s">’mysql-bin.000006’,</span>
</span><span class='line'><span class="na">master_log_pos</span><span class="o">=</span><span class="s">120;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;上面命令中的master_host及master_port是主服务器的地址和端口号，master_user及master_password是授权命令输入的账号、密码，master_log_file及master_log_pos是show master status输出的东西。</p>

<p>&emsp;&emsp;接下来，从属服务器上运行start slave就可以启动从属服务，运行show slave status\G查看状态，如果输出的Slave_IO_Running和Slave_SQL_Running都是yes，则表示配置成功（如果配置有误，可stop slave服务，再次运行change master命令）。</p>

<p>&emsp;&emsp;至此，mysql的主从复制功能就配置完成了。也许你会说，我们的所有增、删、改通过对localhost:3307这个数据库操作，查询通过localhost:3308这个数据库操作不就完成了么？确实如你所说，这种方案是可行的，我们可以在spring中配置两个Datasource，并在技术架构上进行处理，把查询接口单独封装出来以使用不同的数据源。大家可以到我的博客文章<a href="http://yanyaner.com/blog/2010/11/01/p4/">四种持久层设计方案比较</a>中，查看其中的方案三设计。</p>

<p>&emsp;&emsp;当然，上面的访问方式也是有缺陷的，主要体现在，读写分离操作对应用程序并不透明，比如有多台读服务器，你的读操作数据源该如何去配置呢？读写分离会影响到应用代码？因此，我们还得寻找另一种对应用透明的访问方式，这就是用代理模式，屏蔽底层访问细节，这个代理类来负责低层的读写分离，缓存连接（相当于连接池），还包括读操作的负载均衡。</p>

<p>&emsp;&emsp;mysql-proxy就是这样一个程序，我下载的是mysql-proxy-0.8.4-win32-x86.zip，解压后运行bin中的mysql-proxy.exe即可。如果mysql-proxy.exe无法运行，可能是缺少vc2008支持包，大家到微软官网下载vcredist_x86.exe并安装。</p>

<p>&emsp;&emsp;为了后期运行方便，可以配置一个bat批处理文件，启动代理程序：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="err">D:\server\db\mysql-proxy\bin\mysql-proxy.exe</span>
</span><span class='line'> <span class="na">--proxy-backend-addresses</span><span class="o">=</span><span class="s">localhost:3307 </span>
</span><span class='line'><span class="s"> --proxy-read-only-backend-addresses=localhost:3308 </span>
</span><span class='line'><span class="s"> --proxy-lua-script=D:\server\db\mysql-proxy\share\doc\mysql-proxy\rw-splitting.lua</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;上面的配置中大家要注意：proxy-read-only-backend-addresses可以写多台服务器，用逗号分割开；rw-splitting.lua是读写分离lua脚本文件，您可以进行编辑以符合你的要求（比如有人修改min_idle_connections及max_idle_connections来观察到读写分离的效果），但一般情况下并不需要；你可以通过&mdash;proxy-address=host:port指定代理服务器端口号，如果不指定默认为4040(另，管理端口默认是4041，可以看到一些状态参数)。</p>

<p>&emsp;&emsp;应用程序中通过连接localhost:4040即可操作mysql数据库了，后台的一切都是通过mysql-proxy去处理的，数据库连接对应用程序变得透明了，我们的任务也就完成了。</p>

<p>&emsp;&emsp;下篇给出读写分离的性能测试数据。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[项目中ibatis与hibernate混用示例详解]]></title>
    <link href="http://yanyaner.com/blog/2014/03/06/ibatis-hibernate-in-query/"/>
    <updated>2014-03-06T12:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/03/06/ibatis-hibernate-in-query</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;对于一般的项目hibernate足以胜任，但在选择一个框架时都要考虑适用场景（比如非功能性需求），hibernate也不例外，比如：复杂多条件组合查询对于hibernate来说并不方便（我们需要手工拼接sql）。基于这样的原因，很多项目中会引入ibatis来做复杂查询操作以做为补充，这主要是针对编码复杂度的考虑，性能也是其次的一个因素（其实hibernate也不存在问题的，你还记得到hibernater中有SqlQuery么，呵呵）。</p>

<p>&emsp;&emsp;下面我给出一个简单的ibatis与hibernate混用示例，并在最后说明在实际使用过程中应该注意的问题。先来看spring的核心配置文件：</p>

<figure class='code'><figcaption><span>spring-core.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="c">&lt;!-- 读取配置参数 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;location&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;value&gt;</span>classpath:database.properties<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- 配置数据源 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;dataSource&quot;</span> <span class="na">class=</span><span class="s">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>
</span><span class='line'>        <span class="na">init-method=</span><span class="s">&quot;init&quot;</span> <span class="na">destroy-method=</span><span class="s">&quot;close&quot;</span>
</span><span class='line'>  <span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;driverClassName&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;value&gt;</span>${driverClassName}<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;url&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;value&gt;</span>${url}<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;username&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;value&gt;</span>${username}<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;password&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;value&gt;</span>${pwd}<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;defaultAutoCommit&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;value&gt;</span>false<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;initialSize&quot;</span> <span class="na">value=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;filters&quot;</span> <span class="na">value=</span><span class="s">&quot;stat,log4j&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;name&quot;</span> <span class="na">value=</span><span class="s">&quot;myDatasource1&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'>      <span class="c">&lt;!-- 最大活动连接数，也就是连接池中的最大缓存连接数 --&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;maxActive&quot;</span> <span class="na">value=</span><span class="s">&quot;20&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="c">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;timeBetweenEvictionRunsMillis&quot;</span> <span class="na">value=</span><span class="s">&quot;10000&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="c">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;minEvictableIdleTimeMillis&quot;</span> <span class="na">value=</span><span class="s">&quot;10000&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;minIdle&quot;</span> <span class="na">value=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      
</span><span class='line'>      
</span><span class='line'>  <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c">&lt;!-- hibernate参数配置文件，包括缓存的信息 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;hibernateProperties&quot;</span> <span class="na">class=</span><span class="s">&quot;org.springframework.beans.factory.config.PropertiesFactoryBean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;location&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;value&gt;</span>classpath:hibernate-config.properties<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!--  配置sessionFactory--&gt;</span>
</span><span class='line'>  <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;sessionFactory&quot;</span> <span class="na">class=</span><span class="s">&quot;org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;dataSource&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;ref</span> <span class="na">bean=</span><span class="s">&quot;dataSource&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;hibernateProperties&quot;</span> <span class="na">ref=</span><span class="s">&quot;hibernateProperties&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;packagesToScan&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;list&gt;</span>
</span><span class='line'>              <span class="nt">&lt;value&gt;</span>com.my.monitor.model<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/list&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/property&gt;</span>   
</span><span class='line'>  <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- 配置事务管理器 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;transactionManager&quot;</span>
</span><span class='line'>      <span class="na">class=</span><span class="s">&quot;org.springframework.orm.hibernate3.HibernateTransactionManager&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;sessionFactory&quot;</span> <span class="na">ref=</span><span class="s">&quot;sessionFactory&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- 对注解事务的支持 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tx:annotation-driven</span> <span class="na">transaction-manager=</span><span class="s">&quot;transactionManager&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c">&lt;!-- 注解驱动 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;context:component-scan</span> <span class="na">base-package=</span><span class="s">&quot;com.my.monitor&quot;</span> <span class="nt">&gt;&lt;/context:component-scan&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c">&lt;!-- hibernate通用dao --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;hibernateBaseDao&quot;</span>
</span><span class='line'>      <span class="na">class=</span><span class="s">&quot;com.my.ms.framework.persistence.hibernate.BaseDaoHibernateImpl&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;sessionFactory&quot;</span> <span class="na">ref=</span><span class="s">&quot;sessionFactory&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c">&lt;!-- ibatis通用dao，一般用于查询 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;ibatisBaseDao&quot;</span> <span class="na">class=</span><span class="s">&quot;com.my.ms.framework.persistence.ibatis.BaseDao&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;sqlMapClient&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">&quot;org.springframework.orm.ibatis.SqlMapClientFactoryBean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;dataSource&quot;</span> <span class="na">ref=</span><span class="s">&quot;dataSource&quot;</span><span class="nt">&gt;&lt;/property&gt;</span>
</span><span class='line'>              <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;configLocation&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;value&gt;</span>classpath:config/ibatis/sqlMapConfig.xml<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>  
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;这里封装了两个baseDao，分别针对的是hibernate与ibatis书写，源代码如下：<!-- more --></p>

<figure class='code'><figcaption><span>BaseDaoHibernateImpl.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">my</span><span class="o">.</span><span class="na">ms</span><span class="o">.</span><span class="na">framework</span><span class="o">.</span><span class="na">persistence</span><span class="o">.</span><span class="na">hibernate</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.hibernate.HibernateException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.hibernate.Query</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.hibernate.Session</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.orm.hibernate3.HibernateCallback</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.orm.hibernate3.support.HibernateDaoSupport</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.util.Assert</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.my.ms.framework.persistence.model.Page</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">BaseDaoHibernateImpl</span> <span class="kd">extends</span> <span class="n">HibernateDaoSupport</span> <span class="kd">implements</span>
</span><span class='line'>      <span class="n">IBaseDao</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addEntity</span><span class="o">(</span><span class="n">Object</span> <span class="n">entity</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">getHibernateTemplate</span><span class="o">().</span><span class="na">save</span><span class="o">(</span><span class="n">entity</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">updateEntity</span><span class="o">(</span><span class="n">Object</span> <span class="n">entity</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">getHibernateTemplate</span><span class="o">().</span><span class="na">update</span><span class="o">(</span><span class="n">entity</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">deleteEntity</span><span class="o">(</span><span class="n">Object</span> <span class="n">entity</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">getHibernateTemplate</span><span class="o">().</span><span class="na">delete</span><span class="o">(</span><span class="n">entity</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">deleteEntityById</span><span class="o">(</span><span class="n">Class</span> <span class="n">clazz</span><span class="o">,</span> <span class="n">Serializable</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">getHibernateTemplate</span><span class="o">().</span><span class="na">delete</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">queryEntityById</span><span class="o">(</span><span class="n">clazz</span><span class="o">,</span> <span class="n">id</span><span class="o">));</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">T</span> <span class="n">queryEntityById</span><span class="o">(</span><span class="n">Class</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">clazz</span><span class="o">,</span> <span class="n">Serializable</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">getHibernateTemplate</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="n">clazz</span><span class="o">,</span> <span class="n">id</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">List</span> <span class="nf">queryEntitys</span><span class="o">(</span><span class="n">String</span> <span class="n">queryString</span><span class="o">,</span> <span class="n">Object</span><span class="o">[]</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">getHibernateTemplate</span><span class="o">().</span><span class="na">find</span><span class="o">(</span><span class="n">queryString</span><span class="o">,</span> <span class="n">values</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Page</span> <span class="nf">queryEntityByPage</span><span class="o">(</span><span class="kt">int</span> <span class="n">pageNo</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pageSize</span><span class="o">,</span> <span class="n">String</span> <span class="n">queryString</span><span class="o">,</span>
</span><span class='line'>          <span class="n">Object</span><span class="o">[]</span> <span class="n">parameters</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Assert</span><span class="o">.</span><span class="na">isTrue</span><span class="o">(</span><span class="n">pageNo</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">,</span> <span class="s">&quot;起始页不能小于0！&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">// 去除select 子句，未考虑union的情况</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">beginPos</span> <span class="o">=</span> <span class="n">queryString</span><span class="o">.</span><span class="na">toLowerCase</span><span class="o">().</span><span class="na">indexOf</span><span class="o">(</span><span class="s">&quot;from&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Assert</span><span class="o">.</span><span class="na">isTrue</span><span class="o">(</span><span class="n">beginPos</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">queryString</span> <span class="o">+</span> <span class="s">&quot;无效，必须包含from关键字&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">hql4Count</span> <span class="o">=</span> <span class="s">&quot; select count(*)  &quot;</span>
</span><span class='line'>              <span class="o">+</span> <span class="n">queryString</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">beginPos</span><span class="o">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">queryEntityByPage</span><span class="o">(</span><span class="n">pageNo</span><span class="o">,</span> <span class="n">pageSize</span><span class="o">,</span> <span class="n">queryString</span><span class="o">,</span> <span class="n">hql4Count</span><span class="o">,</span>
</span><span class='line'>              <span class="n">parameters</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Page</span> <span class="nf">queryEntityByPage</span><span class="o">(</span><span class="kd">final</span> <span class="kt">int</span> <span class="n">pageNo</span><span class="o">,</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">pageSize</span><span class="o">,</span>
</span><span class='line'>          <span class="kd">final</span> <span class="n">String</span> <span class="n">queryString4Data</span><span class="o">,</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">queryString4Count</span><span class="o">,</span>
</span><span class='line'>          <span class="kd">final</span> <span class="n">Object</span><span class="o">[]</span> <span class="n">parameters</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Assert</span><span class="o">.</span><span class="na">hasText</span><span class="o">(</span><span class="n">queryString4Count</span><span class="o">,</span> <span class="s">&quot;用于计数的hql不能为空!&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Assert</span><span class="o">.</span><span class="na">hasText</span><span class="o">(</span><span class="n">queryString4Data</span><span class="o">,</span> <span class="s">&quot;用于查询的hql不能为空！&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Assert</span><span class="o">.</span><span class="na">isTrue</span><span class="o">(</span><span class="n">pageNo</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">,</span> <span class="s">&quot;起始页不能小于0！&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">(</span><span class="n">Page</span><span class="o">)</span> <span class="n">getHibernateTemplate</span><span class="o">().</span><span class="na">execute</span><span class="o">(</span><span class="k">new</span> <span class="n">HibernateCallback</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="kd">public</span> <span class="n">Object</span> <span class="nf">doInHibernate</span><span class="o">(</span><span class="n">Session</span> <span class="n">session</span><span class="o">)</span>
</span><span class='line'>                  <span class="kd">throws</span> <span class="n">HibernateException</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>              <span class="c1">// 根据指定的参数执行hibernate hql查询</span>
</span><span class='line'>              <span class="n">List</span> <span class="n">countlist</span> <span class="o">=</span> <span class="n">getHibernateTemplate</span><span class="o">().</span><span class="na">find</span><span class="o">(</span><span class="n">queryString4Count</span><span class="o">,</span>
</span><span class='line'>                      <span class="n">parameters</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>              <span class="kt">long</span> <span class="n">totalCount</span> <span class="o">=</span> <span class="o">((</span><span class="n">Long</span><span class="o">)</span> <span class="n">countlist</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">)).</span><span class="na">longValue</span><span class="o">();</span>
</span><span class='line'>              <span class="c1">// 如果记录总数小于1则返回空的Page</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">totalCount</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span>
</span><span class='line'>                  <span class="k">return</span> <span class="k">new</span> <span class="nf">Page</span><span class="o">(</span><span class="n">pageNo</span><span class="o">,</span> <span class="n">pageSize</span><span class="o">,</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">(),</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>              <span class="kt">int</span> <span class="n">startIndex</span> <span class="o">=</span> <span class="n">Page</span><span class="o">.</span><span class="na">getStartOfPage</span><span class="o">(</span><span class="n">pageNo</span><span class="o">,</span> <span class="n">pageSize</span><span class="o">);</span>
</span><span class='line'>              <span class="n">Query</span> <span class="n">query</span> <span class="o">=</span> <span class="n">getSession</span><span class="o">().</span><span class="na">createQuery</span><span class="o">(</span><span class="n">queryString4Data</span><span class="o">);</span>
</span><span class='line'>              <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">parameters</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">query</span><span class="o">.</span><span class="na">setParameter</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">parameters</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="n">List</span> <span class="n">list</span> <span class="o">=</span> <span class="n">query</span><span class="o">.</span><span class="na">setFirstResult</span><span class="o">(</span><span class="n">startIndex</span><span class="o">)</span>
</span><span class='line'>                      <span class="o">.</span><span class="na">setMaxResults</span><span class="o">(</span><span class="n">pageSize</span><span class="o">).</span><span class="na">list</span><span class="o">();</span>
</span><span class='line'>              <span class="k">return</span> <span class="k">new</span> <span class="nf">Page</span><span class="o">(</span><span class="n">pageNo</span><span class="o">,</span> <span class="n">pageSize</span><span class="o">,</span> <span class="n">list</span><span class="o">,</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">totalCount</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>针对ibatis的baseDao封装，主要是添加了一个分页方法，代码如下：</p>

<figure class='code'><figcaption><span>BaseDao.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">my</span><span class="o">.</span><span class="na">ms</span><span class="o">.</span><span class="na">framework</span><span class="o">.</span><span class="na">persistence</span><span class="o">.</span><span class="na">ibatis</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.orm.ibatis.SqlMapClientTemplate</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.my.ms.framework.persistence.model.Page</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">BaseDao</span> <span class="kd">extends</span> <span class="n">SqlMapClientTemplate</span> <span class="o">{</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 分页查询(sql语句块中的分页参数，请使用start与end)</span>
</span><span class='line'><span class="cm">  * @param pageNo</span>
</span><span class='line'><span class="cm">  * @param pageSize</span>
</span><span class='line'><span class="cm">  * @param sqlId4Data</span>
</span><span class='line'><span class="cm">  * @param sqlId4count</span>
</span><span class='line'><span class="cm">  * @param queryParam</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Page</span> <span class="nf">queryEntityByPage</span><span class="o">(</span><span class="kt">int</span> <span class="n">pageNo</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pageSize</span><span class="o">,</span> <span class="n">String</span> <span class="n">sqlId4Data</span><span class="o">,</span> <span class="n">String</span> <span class="n">sqlId4Count</span><span class="o">,</span> <span class="n">Map</span> <span class="n">queryParam</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">queryParam</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;start&quot;</span><span class="o">,</span> <span class="o">(</span><span class="n">pageNo</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">*</span> <span class="n">pageSize</span><span class="o">);</span>
</span><span class='line'>      <span class="n">queryParam</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;end&quot;</span><span class="o">,</span> <span class="n">pageSize</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Page</span> <span class="n">page</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Page</span><span class="o">(</span><span class="n">pageNo</span><span class="o">,</span> <span class="n">pageSize</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">page</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="n">queryForList</span><span class="o">(</span><span class="n">sqlId4Data</span><span class="o">,</span> <span class="n">queryParam</span><span class="o">));</span>
</span><span class='line'>      <span class="n">page</span><span class="o">.</span><span class="na">setRowcounts</span><span class="o">(((</span><span class="n">Number</span><span class="o">)</span><span class="n">queryForObject</span><span class="o">(</span><span class="n">sqlId4Count</span><span class="o">,</span> <span class="n">queryParam</span><span class="o">)).</span><span class="na">intValue</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span> <span class="n">page</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;上面两个实现的分页部分，用到了Page对象，请看分页对象的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">my</span><span class="o">.</span><span class="na">ms</span><span class="o">.</span><span class="na">framework</span><span class="o">.</span><span class="na">persistence</span><span class="o">.</span><span class="na">model</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 分页对象</span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Page</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 数据对象</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">data</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">rowcounts</span><span class="o">;</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 页码</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">pageNo</span><span class="o">;</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 最大显示页数</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">pageSize</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">Page</span><span class="o">(){</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">Page</span><span class="o">(</span><span class="kt">int</span> <span class="n">pageNo</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pageSize</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">pageNo</span> <span class="o">=</span> <span class="n">pageNo</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">pageSize</span> <span class="o">=</span> <span class="n">pageSize</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">Page</span><span class="o">(</span><span class="kt">int</span> <span class="n">pageNo</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pageSize</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span> <span class="n">rowcounts</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">pageNo</span> <span class="o">=</span> <span class="n">pageNo</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">pageSize</span> <span class="o">=</span> <span class="n">pageSize</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">rowcounts</span> <span class="o">=</span> <span class="n">rowcounts</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//计算该页对应的数据库下标</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getStartOfPage</span><span class="o">(</span><span class="kt">int</span> <span class="n">pageNo</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pageSize</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="mi">0</span> <span class="o">&gt;</span> <span class="n">pageNo</span><span class="o">)</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span><span class="o">(</span><span class="s">&quot;页面索引不能小于0!&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="o">(</span><span class="n">pageNo</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">*</span> <span class="n">pageSize</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//共有多少页</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPages</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">rowcounts</span> <span class="o">%</span> <span class="n">pageSize</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
</span><span class='line'>      <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">rowcounts</span><span class="o">/</span><span class="n">pageSize</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">rowcounts</span><span class="o">/</span><span class="n">pageSize</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getFirstNo</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getLastNo</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">getPages</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPreNo</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">pageNo</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">pageNo</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNextNo</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">pageNo</span> <span class="o">+</span> <span class="mi">1</span>  <span class="o">&lt;=</span> <span class="n">getPages</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">pageNo</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">getPages</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="nf">getData</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">data</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setData</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPageNo</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">pageNo</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPageNo</span><span class="o">(</span><span class="kt">int</span> <span class="n">pageNo</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">pageNo</span> <span class="o">=</span> <span class="n">pageNo</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPageSize</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">pageSize</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPageSize</span><span class="o">(</span><span class="kt">int</span> <span class="n">pageSize</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">pageSize</span> <span class="o">=</span> <span class="n">pageSize</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getRowcounts</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">rowcounts</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRowcounts</span><span class="o">(</span><span class="kt">int</span> <span class="n">rowcounts</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">rowcounts</span> <span class="o">=</span> <span class="n">rowcounts</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;具体使用时就比较方便了，下面是一个调用示例：</p>

<figure class='code'><figcaption><span>UserServiceImpl.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Service</span>
</span><span class='line'><span class="nd">@Transactional</span><span class="o">(</span><span class="n">readOnly</span><span class="o">=</span><span class="kc">false</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserServiceImpl</span> <span class="kd">implements</span> <span class="n">IUserService</span><span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">IBaseDao</span> <span class="n">hibernateDao</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">BaseDao</span> <span class="n">ibatisDao</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">User</span> <span class="nf">someBizMethod</span><span class="o">(</span><span class="kt">int</span> <span class="n">userId</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>      <span class="o">......</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">User</span> <span class="n">u1</span> <span class="o">=</span> <span class="o">(</span><span class="n">User</span><span class="o">)</span><span class="n">hibernateDao</span><span class="o">.</span><span class="na">queryEntityById</span><span class="o">(</span><span class="n">User</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">userId</span><span class="o">);</span>
</span><span class='line'>      <span class="n">u1</span><span class="o">.</span><span class="na">setUserName</span><span class="o">(</span><span class="n">u2</span><span class="o">.</span><span class="na">getUserName</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;hibernate&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">hibernateDao</span><span class="o">.</span><span class="na">updateEntity</span><span class="o">(</span><span class="n">u1</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">User</span> <span class="n">u2</span> <span class="o">=</span> <span class="o">(</span><span class="n">User</span><span class="o">)</span><span class="n">ibatisDao</span><span class="o">.</span><span class="na">queryForObject</span><span class="o">(</span><span class="s">&quot;znjk.getUserById&quot;</span><span class="o">,</span> <span class="n">userId</span><span class="o">);</span>
</span><span class='line'>      <span class="n">u2</span><span class="o">.</span><span class="na">setUserName</span><span class="o">(</span><span class="n">u2</span><span class="o">.</span><span class="na">getUserName</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;ibatis&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">ibatisDao</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="s">&quot;znjk.updateUser&quot;</span><span class="o">,</span>  <span class="n">u2</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="o">......</span>
</span><span class='line'>      
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;好了，在上面的示例中还存在一些必须要弄明白的问题。</p>

<p>&emsp;&emsp;一、事务管理问题。大家可以看到，我在spring文件中只配置了一个事务管理器，并且是hibernate的事务管理器，那么，有人就有会疑问：hibernater的事务可以应用在ibatis的dao上么？答案是肯定的。至于原因，你想想spring事务管理是通过AOP来实现的，并且最终映射到底层的话，事务是通过在jdbc的connection上完成的，而在我上面的这个业务方法中，两个dao拿到的是同一个连接，因此，方法中的所有操作都在一个事务环境中了，这个事务是通过hibernate事务管理器启动的。</p>

<p>&emsp;&emsp;二、缓存同步问题。两个框架都有自己不同的缓存配置及实现，而且互不相关。因为这个原因，我上面的代码没法对保证缓存的一致性，所以，我的建议是：ibatis仅仅只做复杂查询，hibernate什么都可以做。此外，还有一个方案是，配置ibatis的数据源事务管理器，在不同的方法中，通过@Transactional注解来指定这个业务方法使用的事务管理器（比如：@Transactional(readOnly=false,value=&ldquo;dataSourceTransactionManager&rdquo;)），也就是说，在每一个方法中不存在两个dao混用的情况，而在不同的方法中，用不同的事务管理器操作事务的提交。</p>

<p>&emsp;&emsp;ibatis的优势在于查询，特别是类似下面的组合查询，十分的方便。复杂查询更是如此。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;sql</span> <span class="na">id=</span><span class="s">&quot;where4pet&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dynamic</span> <span class="na">prepend=</span><span class="s">&quot;where&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;isNotNull</span> <span class="na">property=</span><span class="s">&quot;nickName&quot;</span> <span class="na">prepend=</span><span class="s">&quot;and&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              f_nick_name like &#39;%$nickName$%&#39;
</span><span class='line'>          <span class="nt">&lt;/isNotNull&gt;</span>
</span><span class='line'>          <span class="nt">&lt;isNotNull</span> <span class="na">property=</span><span class="s">&quot;password&quot;</span> <span class="na">prepend=</span><span class="s">&quot;and&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              f_password like &#39;%$password$%&#39;
</span><span class='line'>          <span class="nt">&lt;/isNotNull&gt;</span>
</span><span class='line'>          <span class="nt">&lt;isNotNull</span> <span class="na">property=</span><span class="s">&quot;birthday&quot;</span> <span class="na">prepend=</span><span class="s">&quot;and&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              f_birthday = #birthday#
</span><span class='line'>          <span class="nt">&lt;/isNotNull&gt;</span>
</span><span class='line'>          <span class="nt">&lt;isNotNull</span> <span class="na">property=</span><span class="s">&quot;gender&quot;</span> <span class="na">prepend=</span><span class="s">&quot;and&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;isEqual</span> <span class="na">compareProperty=</span><span class="s">&quot;gender&quot;</span> <span class="na">compareValue=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                  f_gender = &#39;T&#39;
</span><span class='line'>              <span class="nt">&lt;/isEqual&gt;</span>
</span><span class='line'>              <span class="nt">&lt;isEqual</span> <span class="na">compareProperty=</span><span class="s">&quot;gender&quot;</span> <span class="na">compareValue=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                  f_gender = &#39;F&#39;
</span><span class='line'>              <span class="nt">&lt;/isEqual&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/isNotNull&gt;</span>
</span><span class='line'>          <span class="nt">&lt;isNotNull</span> <span class="na">property=</span><span class="s">&quot;age&quot;</span> <span class="na">prepend=</span><span class="s">&quot;and&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              f_age = #age#
</span><span class='line'>          <span class="nt">&lt;/isNotNull&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dynamic&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/sql&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">&quot;getPetByPage4data&quot;</span> <span class="na">resultMap=</span><span class="s">&quot;resultMapPet&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>      select *
</span><span class='line'>      from t_pet
</span><span class='line'>      <span class="nt">&lt;include</span> <span class="na">refid=</span><span class="s">&quot;where4pet&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      order by $field$
</span><span class='line'>      limit #start#, #end#
</span><span class='line'>  <span class="nt">&lt;/select&gt;</span>
</span><span class='line'>  <span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">&quot;getPetByPage4count&quot;</span> <span class="na">resultClass=</span><span class="s">&quot;int&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      select count(*)
</span><span class='line'>      from t_pet
</span><span class='line'>      <span class="nt">&lt;include</span> <span class="na">refid=</span><span class="s">&quot;where4pet&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/select&gt;</span>
</span><span class='line'>  
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;这样的话，我们就可以充分利用不同框架的优势，达到取长补短的目的。也许你会说，这种方式就是把增、删、改交由hibernate来做，把查询交由ibatis来做。本质上看确实如此，但实际项目中要灵活去做，比如hibernate除了增删改外也可以做查询，特别是简单的查询，这样也可以更好的利用到hibernate的缓存。</p>

<p>&emsp;&emsp;我在<a href="http://yanyaner.com/blog/2010/11/01/p4">四种持久层设计方案比较</a>中，对查询的分离有所介绍，有兴趣的可以去看看其中的一个方案，另外，CQRS架构、mysql读写分离也有这方面的含义。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[再次简单封装的jackson]]></title>
    <link href="http://yanyaner.com/blog/2014/03/04/objectmapper-json/"/>
    <updated>2014-03-04T12:18:00+08:00</updated>
    <id>http://yanyaner.com/blog/2014/03/04/objectmapper-json</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;接上一篇<a href="http://yanyaner.com/blog/2014/03/03/objectmapper-json">Json类库jackson使用之误区</a>，我对json的常用操作再次进行了简单的封装，上一版的封装大家可参阅<a href="http://yanyaner.com/blog/2012/12/14/jackson">Jackson之json类二次封装</a>。</p>

<p>&emsp;&emsp;总计两个文件，只考虑到了一些简单常用的操作：</p>

<figure class='code'><figcaption><span>FilterProvider.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">my</span><span class="o">.</span><span class="na">ms</span><span class="o">.</span><span class="na">framework</span><span class="o">.</span><span class="na">commons</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.jackson.map.ser.impl.SimpleFilterProvider</span><span class="o">;</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 属性过滤器</span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">FilterProvider</span> <span class="kd">extends</span> <span class="n">SimpleFilterProvider</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 将新的需要的属性添加到一个现有的FilterProvider中</span>
</span><span class='line'><span class="cm">  * @param id</span>
</span><span class='line'><span class="cm">  * @param includeProperties</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">FilterProvider</span> <span class="nf">addIncludeProperties</span><span class="o">(</span><span class="n">String</span> <span class="n">id</span><span class="o">,</span>
</span><span class='line'>          <span class="n">String</span><span class="o">...</span> <span class="n">includeProperties</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">addFilter</span><span class="o">(</span><span class="n">id</span><span class="o">,</span>
</span><span class='line'>              <span class="n">SimpleBeanPropertyFilter</span><span class="o">.</span><span class="na">filterOutAllExcept</span><span class="o">(</span><span class="n">includeProperties</span><span class="o">));</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;FilterProvider.java中主要增加了一个输出时添加包含属性的方法，并返回自身以支持方法链编程。<!-- more --></p>

<figure class='code'><figcaption><span>JsonMapper.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">my</span><span class="o">.</span><span class="na">ms</span><span class="o">.</span><span class="na">framework</span><span class="o">.</span><span class="na">commons</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.OutputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.text.SimpleDateFormat</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.jackson.JsonGenerationException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.jackson.map.DeserializationConfig</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.jackson.map.JsonMappingException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.jackson.map.ObjectMapper</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.jackson.map.SerializationConfig.Feature</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.jackson.map.ser.impl.SimpleFilterProvider</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * json之jackson封装</span>
</span><span class='line'><span class="cm"> * 主要对常用的几个json方法进行了再次包装，并具备线程安全性 </span>
</span><span class='line'><span class="cm"> * @author ljh</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JsonMapper</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">ObjectMapper</span> <span class="n">objectMapper</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">JsonMapper</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">objectMapper</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectMapper</span><span class="o">();</span>
</span><span class='line'>      <span class="c1">// 设置默认日期格式</span>
</span><span class='line'>      <span class="n">objectMapper</span><span class="o">.</span><span class="na">setDateFormat</span><span class="o">(</span><span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="c1">// 提供其它默认设置</span>
</span><span class='line'>      <span class="n">objectMapper</span>
</span><span class='line'>              <span class="o">.</span><span class="na">disable</span><span class="o">(</span><span class="n">DeserializationConfig</span><span class="o">.</span><span class="na">Feature</span><span class="o">.</span><span class="na">FAIL_ON_UNKNOWN_PROPERTIES</span><span class="o">);</span>
</span><span class='line'>      <span class="n">objectMapper</span><span class="o">.</span><span class="na">configure</span><span class="o">(</span><span class="n">Feature</span><span class="o">.</span><span class="na">FAIL_ON_EMPTY_BEANS</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>      <span class="n">objectMapper</span><span class="o">.</span><span class="na">setFilters</span><span class="o">(</span><span class="k">new</span> <span class="n">SimpleFilterProvider</span><span class="o">()</span>
</span><span class='line'>              <span class="o">.</span><span class="na">setFailOnUnknownId</span><span class="o">(</span><span class="kc">false</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 创建一个FilterProvider对象</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">FilterProvider</span> <span class="nf">buildFilterProvider</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">FilterProvider</span> <span class="n">filter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FilterProvider</span><span class="o">();</span>
</span><span class='line'>      <span class="n">filter</span><span class="o">.</span><span class="na">setFailOnUnknownId</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">filter</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 根据需要的对象属性，创建一个属性过滤器FilterProvider</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @param id</span>
</span><span class='line'><span class="cm">  *            对象id，通过jsonFilter声明</span>
</span><span class='line'><span class="cm">  * @param includeProperties</span>
</span><span class='line'><span class="cm">  *            该对象上需要的属性</span>
</span><span class='line'><span class="cm">  * @return  创建好的过滤器</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">FilterProvider</span> <span class="nf">buildFilterProvider</span><span class="o">(</span><span class="n">String</span> <span class="n">id</span><span class="o">,</span>
</span><span class='line'>          <span class="n">String</span><span class="o">...</span> <span class="n">includeProperties</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">FilterProvider</span> <span class="n">filter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FilterProvider</span><span class="o">();</span>
</span><span class='line'>      <span class="n">filter</span><span class="o">.</span><span class="na">setFailOnUnknownId</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">filter</span><span class="o">.</span><span class="na">addFilter</span><span class="o">(</span><span class="n">id</span><span class="o">,</span>
</span><span class='line'>              <span class="n">SimpleBeanPropertyFilter</span><span class="o">.</span><span class="na">filterOutAllExcept</span><span class="o">(</span><span class="n">includeProperties</span><span class="o">));</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">filter</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 用提供的过滤器，将对象的json输出到流中</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">writeValue</span><span class="o">(</span><span class="n">FilterProvider</span> <span class="n">filter</span><span class="o">,</span> <span class="n">OutputStream</span> <span class="n">os</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">JsonGenerationException</span><span class="o">,</span> <span class="n">JsonMappingException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">objectMapper</span><span class="o">.</span><span class="na">writer</span><span class="o">(</span><span class="n">filter</span><span class="o">).</span><span class="na">writeValue</span><span class="o">(</span><span class="n">os</span><span class="o">,</span> <span class="n">value</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 用提供的过滤器，将对象的json输出为字符串</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">writeValueAsString</span><span class="o">(</span><span class="n">FilterProvider</span> <span class="n">filter</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">JsonGenerationException</span><span class="o">,</span> <span class="n">JsonMappingException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">objectMapper</span><span class="o">.</span><span class="na">writer</span><span class="o">(</span><span class="n">filter</span><span class="o">).</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 将对象的json输出到流中</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">writeValue</span><span class="o">(</span><span class="n">OutputStream</span> <span class="n">os</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">JsonGenerationException</span><span class="o">,</span> <span class="n">JsonMappingException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">objectMapper</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="n">os</span><span class="o">,</span> <span class="n">value</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 将对象的json输出为字符串</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">writeValueAsString</span><span class="o">(</span><span class="n">Object</span> <span class="n">value</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">JsonGenerationException</span><span class="o">,</span> <span class="n">JsonMappingException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">objectMapper</span><span class="o">.</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 得到原始的objectMapper，以进行更复杂的操作</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">ObjectMapper</span> <span class="nf">getObjectMapper</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">objectMapper</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;如果需要更强大的功能，我们可以通过getObjectMapper得到ObjectMapper后进行操作，或都添加你常用的其它方法到JsonMapper中，比如：排除属性的方法等。</p>

<p>&emsp;&emsp;使用时，请把JsonMapper放入spring容器(当然你也可以把这个类做成单例的哦)，在需要转换json的地方，通过@Resource注入即可，调用代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="nd">@Resource</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">JsonMapper</span> <span class="n">mapper</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">testJson</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">Object</span> <span class="n">someObject</span> <span class="o">=</span> <span class="o">....</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">writeValueAsString</span><span class="o">(</span>
</span><span class='line'>              <span class="n">JsonMapper</span><span class="o">.</span><span class="na">buildFilterProvider</span><span class="o">()</span>
</span><span class='line'>              <span class="o">.</span><span class="na">addIncludeProperties</span><span class="o">(</span><span class="s">&quot;myId1&quot;</span><span class="o">,</span> <span class="s">&quot;id&quot;</span><span class="o">,</span><span class="s">&quot;name&quot;</span><span class="o">)</span>
</span><span class='line'>              <span class="o">.</span><span class="na">addIncludeProperties</span><span class="o">(</span><span class="s">&quot;myId2&quot;</span><span class="o">,</span> <span class="s">&quot;code&quot;</span><span class="o">,</span><span class="s">&quot;money&quot;</span><span class="o">,</span><span class="s">&quot;name&quot;</span><span class="o">),</span>
</span><span class='line'>              <span class="n">someObject</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">assertEquals</span><span class="o">(</span><span class="s">&quot;xxxxxxxxxxxx&quot;</span><span class="o">,</span> <span class="n">result</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
