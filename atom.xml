<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[刘江华的博客]]></title>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2013-11-16T08:42:11+08:00</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[冰雨]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[linux常用命令及配置备忘录]]></title>
    <link href="http://yoursite.com/blog/2012/11/07/linux/"/>
    <updated>2012-11-07T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/11/07/linux</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;有些命令时间长了不用，会突然想不起来，现记录一下，以备后查：</p>

<h2>工作相关：</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">jobs</span>，查看后台的工作，-l 参数，可看到pid
</span><span class='line'>
</span><span class='line'><span class="nb">fg</span> ,将某个pid转前台，也可用： %工作序号
</span><span class='line'>
</span><span class='line'><span class="nb">bg</span>，将某个pid转后台。
</span><span class='line'>
</span><span class='line'>ctrl + z:将某个工作转后台，并且stop
</span><span class='line'>
</span><span class='line'>ctrl + c:将结束当前进程
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;如果在启动某个程序，想让它直接转至后台，请在命令最后加上  &amp;。</p>

<h2>网络：</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>netstat -lnpt，查看网络连接，还可以看到程序的pid
</span><span class='line'>
</span><span class='line'>wget url，可下载资源，当服务器与外网连通的情况下，安装jdk，tomcat等很有用。
</span></code></pre></td></tr></table></div></figure>


<h2>进程，cpu使用率等：</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ps -aux,很详细，其中会有cpu使用率
</span><span class='line'>
</span><span class='line'>top，这个可以看到动态的cpu使用率，ctrl + c终止
</span><span class='line'>
</span><span class='line'><span class="nb">kill</span> -9 pid，强行结束，一般用这个以防止某些进程无法 <span class="nb">kill</span>死的情况
</span><span class='line'>
</span><span class='line'>pstree，树结构显示，可寻找进程间依赖关系
</span></code></pre></td></tr></table></div></figure>


<h2>磁盘：</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>df 查看每个挂载区使用大小，在磁盘空间不够时，请运行
</span><span class='line'>
</span><span class='line'>du -ssh，查看当前目录所占用空间
</span><span class='line'>
</span><span class='line'>ls -l，查看到文件的更多详情
</span></code></pre></td></tr></table></div></figure>


<h2>ssh连接：</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ssh -q 用户名@主机ip
</span><span class='line'>
</span><span class='line'>rz -y ，可上传文件，并直接覆盖原文件
</span><span class='line'>
</span><span class='line'>sz 文件名，可下载服务串上的文件
</span><span class='line'>
</span><span class='line'>sudo  su - 用户名，可进行操作用的的切换
</span></code></pre></td></tr></table></div></figure>


<h2>文件压缩</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>tar –zxvf filename.tar.gz 解压到当前目录，你也可以指定新的位置
</span><span class='line'>
</span><span class='line'>tar -zcvf 压缩文件名.tar.gz  目录或文件，注意z参数，指明要用gzip压缩，一般都要加上。
</span></code></pre></td></tr></table></div></figure>


<h2>其它常见操作命令</h2>

<p>我就不再解释：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ls -l
</span><span class='line'>
</span><span class='line'><span class="nb">cd</span>
</span><span class='line'>
</span><span class='line'>mkdir
</span><span class='line'>
</span><span class='line'>rm
</span><span class='line'>
</span><span class='line'>rm -r
</span><span class='line'>
</span><span class='line'>cp file1, file2
</span><span class='line'>
</span><span class='line'>mv file1, file2
</span><span class='line'>
</span><span class='line'>ln -s file  link-name
</span><span class='line'>
</span><span class='line'>vim filename
</span><span class='line'>
</span><span class='line'>cat filename
</span><span class='line'>
</span><span class='line'><span class="nb">logout</span>
</span><span class='line'>
</span><span class='line'><span class="nb">exit</span>
</span><span class='line'>
</span><span class='line'>chmod
</span><span class='line'>
</span><span class='line'>chown
</span></code></pre></td></tr></table></div></figure>


<h2>java下的一些常见命令：</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>catalina.sh start
</span><span class='line'>
</span><span class='line'>catalina.sh stop
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>java –cp .:/home/user_00/soft_setup/dev/romanticroom/WEB-INF/lib/* : /home/user_00/mysoft/tomcat6-1/lib/* com.maxsoft.app.romanticroom.facade.impl.AutoRun
</span></code></pre></td></tr></table></div></figure>


<h2>mysql:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql -h10.181.48.24 -P3335 -u root
</span><span class='line'>
</span><span class='line'>mysqldump -h10.182.50.24 -P3335 -u root -p room &gt; room_server.sql
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;注意，这个sql导出后，要压缩打包后再传回备份。</p>

<h2>memcached:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>/home/user_00/mysoft/memcached/bin/memcached -d -m 1024 -u user_00 -l 16.124.49.121 -p 9584
</span></code></pre></td></tr></table></div></figure>


<h2>jdk环境变量配置：</h2>

<p>&emsp;&emsp;JDK安装：</p>

<p>&emsp;&emsp;安装完成jdk后，在home/user001/执行，vim .bashrc</p>

<p>&emsp;&emsp;直接./xxxxx.bin解压jdk</p>

<p>&emsp;&emsp;java环境变量配置：</p>

<p>&emsp;&emsp;到usr_00的home下,vim .bashrc，在最后加入：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">exportJAVA_HOME</span><span class="o">=</span>/usr/local/services/java/jdk1.6.0_31
</span><span class='line'>
</span><span class='line'><span class="nv">exportCLASSPATH</span><span class="o">=</span>.:<span class="nv">$JAVA_HOME</span>/jre/lib:<span class="nv">$JAVA_HOME</span>/lib/tools.jar
</span><span class='line'>
</span><span class='line'><span class="nb">export </span><span class="nv">JRE_HOME</span><span class="o">=</span><span class="nv">$JAVA_HOME</span>/jre
</span><span class='line'>
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$JAVA_HOME</span>/bin:<span class="nv">$PATH</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;为了让配置立即生效：source.bashrc</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[kindeditor在线编辑器使用-附上传本地图片实现方法]]></title>
    <link href="http://yoursite.com/blog/2012/11/05/king-editor/"/>
    <updated>2012-11-05T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/11/05/king-editor</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;在线编辑器在网站后台管理系统中比较常见，特别是内容发布系统，下面贴出一个简单demo大家参考，先看界面：</p>

<p><img src="http://yoursite.com/uploads/2012/10/4.jpg" title="在线编辑界面" alt="" /></p>

<p>&emsp;&emsp;前端代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;&lt;%=path%&gt;/css/skins/default.css&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">media=</span><span class="s">&quot;screen&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;&lt;%=path%&gt;/js/jquery-1.8.2.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;&lt;%=path%&gt;/js/kindeditor-min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>$(function(){
</span><span class='line'>    KE.show({
</span><span class='line'>        id : &#39;content&#39;,
</span><span class='line'>        imageUploadJson:&quot;<span class="err">&lt;</span>%=path%&gt;/news!uploadImg.do&quot;,
</span><span class='line'>        cssPath : &#39;./index.css&#39;
</span><span class='line'>    });
</span><span class='line'>});
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;后台服务器处理代码（struts2代码）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 上传的文件</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'> <span class="kd">private</span> <span class="n">File</span> <span class="n">imgFile</span><span class="o">;</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 文件名称</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="n">imgFileFileName</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">uploadImg</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 对上传的文件进行处理（重命名，保存到合适的位置）</span>
</span><span class='line'>    <span class="c1">// 假如我们要存放在项目中的soft_upload目录下，那么，我们要先取得这个目录在实际服务器上的位置</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">upload_dir</span> <span class="o">=</span> <span class="n">ServletActionContext</span><span class="o">.</span><span class="na">getRequest</span><span class="o">().</span><span class="na">getSession</span><span class="o">()</span>
</span><span class='line'>            <span class="o">.</span><span class="na">getServletContext</span><span class="o">().</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">&quot;soft_upload&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 取文件扩展名</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">extName</span> <span class="o">=</span> <span class="n">imgFileFileName</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">imgFileFileName</span>
</span><span class='line'>            <span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="s">&quot;.&quot;</span><span class="o">));</span>
</span><span class='line'>    <span class="c1">// 随机生成新的文件名</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">newFileName</span> <span class="o">=</span> <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">()</span> <span class="o">+</span> <span class="n">extName</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">FileUtils</span><span class="o">.</span><span class="na">copyFile</span><span class="o">(</span><span class="n">imgFile</span><span class="o">,</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">upload_dir</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span>
</span><span class='line'>            <span class="o">+</span> <span class="n">newFileName</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Map</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">();</span>
</span><span class='line'>    <span class="n">result</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;error&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>    <span class="n">result</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;url&quot;</span><span class="o">,</span> <span class="s">&quot;soft_upload/&quot;</span> <span class="o">+</span> <span class="n">newFileName</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">HttpServletResponse</span> <span class="n">resp</span> <span class="o">=</span> <span class="n">ServletActionContext</span><span class="o">.</span><span class="na">getResponse</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ObjectMapper</span> <span class="n">om</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectMapper</span><span class="o">();</span>
</span><span class='line'>    <span class="n">om</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="n">resp</span><span class="o">.</span><span class="na">getWriter</span><span class="o">(),</span> <span class="n">result</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;其中有些参数是kindeditor约定的：</p>

<p>&emsp;&emsp;如：imgFile是上传文件的控件名称</p>

<p>&emsp;&emsp;error是json返回的错误状态码，url是服务器上的文件名称等。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[strut2文件下载及多文件上传示例]]></title>
    <link href="http://yoursite.com/blog/2012/10/31/struts2-fileupload-muti/"/>
    <updated>2012-10-31T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/10/31/struts2-fileupload-muti</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;入门级技术文章，为了避免每回都要重写演示，以后就请童鞋门自己来看吧。</p>

<p>&emsp;&emsp;先看表单：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;&lt;%=path%&gt;/user!addUser.do&quot;</span> <span class="na">method=</span><span class="s">&quot;post&quot;</span> <span class="na">enctype=</span><span class="s">&quot;multipart/form-data&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>用户昵称:<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;regUser.nickName&quot;</span><span class="nt">/&gt;&lt;br/&gt;</span>
</span><span class='line'><span class="nt">&lt;div&gt;</span>选择用户照片：<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;file&quot;</span> <span class="na">name=</span><span class="s">&quot;myphoto&quot;</span><span class="nt">/&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">class=</span><span class="s">&quot;addNewPhoto&quot;</span><span class="nt">&gt;</span>再加一张照片<span class="nt">&lt;/a&gt;</span><span class="ni">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">class=</span><span class="s">&quot;deletePhoto&quot;</span><span class="nt">&gt;</span>删除<span class="nt">&lt;/a&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">value=</span><span class="s">&quot;新增&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/form&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;页面效果如下图：</p>

<p><img src="http://yoursite.com/uploads/2012/10/1.jpg" title="struts2多文件上传界面" alt="" /></p>

<p>&emsp;&emsp;加一个新的上传及删除一个上传选框js代码如下，请加到ready事件中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.addNewPhoto&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">().</span><span class="nx">clone</span><span class="p">(</span><span class="kc">true</span><span class="p">).</span><span class="nx">insertAfter</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">());</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.deletePhoto&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">().</span><span class="nx">remove</span><span class="p">();</span>
</span><span class='line'>    <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;服务器端处理代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserAction</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 用于接收注册用户的属性</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">RegUser</span> <span class="n">regUser</span><span class="o">;</span>
</span><span class='line'>    <span class="c1">// 用于接收用户的照片</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">File</span><span class="o">[]</span> <span class="n">myphoto</span><span class="o">;</span>
</span><span class='line'>    <span class="c1">// 用于接收原始文件名</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span><span class="o">[]</span> <span class="n">myphotoFileName</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addUser</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="n">File</span> <span class="nl">f:</span> <span class="n">myphoto</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">f</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">n</span> <span class="o">:</span> <span class="n">myphotoFileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">......</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;如果你要处理一个上传上来的文件，核心代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>        <span class="c1">// 假如我们要存放在项目中的soft_upload目录下，那么，我们要先取得这个目录在实际服务器上的位置</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">upload_dir</span> <span class="o">=</span> <span class="n">ServletActionContext</span><span class="o">.</span><span class="na">getRequest</span><span class="o">().</span><span class="na">getSession</span><span class="o">()</span>
</span><span class='line'>                <span class="o">.</span><span class="na">getServletContext</span><span class="o">().</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">&quot;soft_upload&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 取文件扩展名</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">extName</span> <span class="o">=</span> <span class="n">myphotoFileName</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">myphotoFileName</span>
</span><span class='line'>                <span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="s">&quot;.&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="c1">// 随机生成新的文件名</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">newFileName</span> <span class="o">=</span> <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">()</span> <span class="o">+</span> <span class="n">extName</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">FileUtils</span><span class="o">.</span><span class="na">copyFile</span><span class="o">(</span><span class="n">myphoto</span><span class="o">,</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">upload_dir</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span>
</span><span class='line'>                <span class="o">+</span> <span class="n">newFileName</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 最后数据库中保存的路径是一个互联网站路径</span>
</span><span class='line'>        <span class="n">regUser</span><span class="o">.</span><span class="na">setPhotoPath</span><span class="o">(</span><span class="s">&quot;soft_upload/&quot;</span> <span class="o">+</span> <span class="n">newFileName</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>         <span class="c1">//调用业务方法进行后续操作</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;文件下载部分核心代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>        <span class="c1">// 假如我们要存放在项目中的soft_upload目录下，那么，我们要先取得这个目录在实际服务器上的位置</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">upload_dir</span> <span class="o">=</span> <span class="n">ServletActionContext</span><span class="o">.</span><span class="na">getRequest</span><span class="o">().</span><span class="na">getSession</span><span class="o">()</span>
</span><span class='line'>                <span class="o">.</span><span class="na">getServletContext</span><span class="o">().</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">String</span> <span class="n">imageInDb</span> <span class="o">=</span> <span class="s">&quot;soft_upload/b801a563-f307-4804-a7e3-4e34665af7b3.jpg&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">String</span> <span class="n">fullFileName</span> <span class="o">=</span> <span class="n">upload_dir</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">imageInDb</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">,</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//把文件给用户发回去</span>
</span><span class='line'>        <span class="n">HttpServletResponse</span> <span class="n">resp</span> <span class="o">=</span> <span class="n">ServletActionContext</span><span class="o">.</span><span class="na">getResponse</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">resp</span><span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;Content-Disposition&quot;</span><span class="o">,</span><span class="s">&quot;attachment;filename=&quot;</span> <span class="o">+</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">&quot;陈冠希.jpg&quot;</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">&quot;gb2312&quot;</span><span class="o">),</span><span class="s">&quot;iso8859-1&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">resp</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">().</span><span class="na">write</span><span class="o">(</span><span class="n">FileUtils</span><span class="o">.</span><span class="na">readFileToByteArray</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">fullFileName</span><span class="o">)));</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自动完成代码实现（jquery ui版）]]></title>
    <link href="http://yoursite.com/blog/2012/10/31/auto-complete/"/>
    <updated>2012-10-31T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/10/31/auto-complete</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;有人要用，写了一个演示代码，界面效果如下：</p>

<p><img src="http://yoursite.com/uploads/2012/10/2.jpg" title="struts2多文件上传界面" alt="" /></p>

<p>&emsp;&emsp;客户端代码，用jquery ui实现：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">$</span><span class="p">(</span> <span class="s2">&quot;#myquery&quot;</span> <span class="p">).</span><span class="nx">autocomplete</span><span class="p">({</span>
</span><span class='line'>               <span class="nx">source</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span> <span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">){</span>
</span><span class='line'>                   <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>                       <span class="nx">url</span><span class="o">:</span><span class="s2">&quot;news!autoComplete.do&quot;</span><span class="p">,</span>
</span><span class='line'>                       <span class="nx">type</span><span class="o">:</span><span class="s2">&quot;POST&quot;</span><span class="p">,</span>
</span><span class='line'>                       <span class="nx">data</span><span class="o">:</span><span class="p">{</span><span class="nx">queryName</span><span class="o">:</span><span class="nx">request</span><span class="p">.</span><span class="nx">term</span><span class="p">},</span>
</span><span class='line'>                       <span class="nx">dataType</span><span class="o">:</span><span class="s2">&quot;json&quot;</span><span class="p">,</span>
</span><span class='line'>                       <span class="nx">success</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
</span><span class='line'>                           <span class="nx">response</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span>
</span><span class='line'>                               <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>                                   <span class="nx">label</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">title</span>
</span><span class='line'>                               <span class="p">}</span>
</span><span class='line'>                           <span class="p">}</span> <span class="p">));</span>
</span><span class='line'>
</span><span class='line'>                       <span class="p">}</span>
</span><span class='line'>                   <span class="p">});</span>
</span><span class='line'>               <span class="p">}</span>
</span><span class='line'>           <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;网页上：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>输入查询条件：<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;query&quot;</span> <span class="na">id=</span><span class="s">&quot;myquery&quot;</span><span class="nt">/&gt;&lt;br/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;后台：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//前端输入的查询参数</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">queryName</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 自动完成</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">autoComplete</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//得到响应</span>
</span><span class='line'>        <span class="n">HttpServletResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">ServletActionContext</span><span class="o">.</span><span class="na">getResponse</span><span class="o">();</span>
</span><span class='line'>        <span class="n">response</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">List</span><span class="o">&lt;</span><span class="n">News</span><span class="o">&gt;</span> <span class="n">news</span> <span class="o">=</span> <span class="n">ns</span><span class="o">.</span><span class="na">getNewsByTitle</span><span class="o">(</span><span class="n">queryName</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ObjectMapper</span> <span class="n">om</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectMapper</span><span class="o">();</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">json_str</span> <span class="o">=</span> <span class="n">om</span><span class="o">.</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">news</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="n">json_str</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;业务层：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="n">List</span> <span class="nf">getNewsByTitle</span><span class="o">(</span><span class="n">String</span> <span class="n">title</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">baseDao</span><span class="o">.</span><span class="na">queryEntitys</span><span class="o">(</span><span class="s">&quot;from News n where n.title like ?&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[]{</span><span class="s">&quot;%&quot;</span> <span class="o">+</span> <span class="n">title</span> <span class="o">+</span> <span class="s">&quot;%&quot;</span><span class="o">});</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[油画- 新都桥.塔公寺映像]]></title>
    <link href="http://yoursite.com/blog/2012/10/31/art5/"/>
    <updated>2012-10-31T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/10/31/art5</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;纸本油画，塔公寺。</p>

<p>&emsp;&emsp;十一期间出游，路线：泸定，丹巴，新都桥，康定，海螺沟，十分难忘的一次出行。</p>

<p><img src="http://yoursite.com/uploads/2012/10/3.jpg" title="纸本油画-塔公寺" alt="" /></p>

<p>&emsp;&emsp;异常蓝的天空，美丽的草原，让人心旷神怡。</p>

<p>&emsp;&emsp;虐诚的僧人们在朗诵经文，通往寺庙的小路边挂满了经幡，它们在柔和的风中传送着经文，相恋的一对马儿，悠闲地享受着这一切&hellip;&hellip;，一曲《天籁之爱》最能表现这个场景（我现在的手机铃声，仍旧是这个曲子）。</p>

<p>&emsp;&emsp;画上的落款是孩他妈写的，显得有些生硬，有人说这是一败笔，当然，这也算是两人的一次小小合作吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[超链接传递中文参数解决之法]]></title>
    <link href="http://yoursite.com/blog/2012/10/30/url-utf8/"/>
    <updated>2012-10-30T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/10/30/url-utf8</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;办法很多，下面介绍一种更为通用，最有效的方式：</p>

<p>&emsp;&emsp;示例页面，其中包含post与get方式的提交：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;need_change&quot;</span> <span class="na">href=</span><span class="s">&quot;myajax!getChineseWord.do?name=中文&quot;</span><span class="nt">&gt;</span>中文测试<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>    <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;&lt;%=path%&gt;/myajax!getChineseWord.do&quot;</span> <span class="na">method=</span><span class="s">&quot;post&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        姓名：<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&#39;text&#39;</span> <span class="na">name=</span><span class="s">&quot;name&quot;</span> <span class="na">value=</span><span class="s">&quot;中文&quot;</span><span class="nt">&gt;&lt;br&gt;</span>
</span><span class='line'>        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">value=</span><span class="s">&quot;post中文&quot;</span> <span class="na">id=</span><span class="s">&quot;login_btn&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/form&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;对于超链接中的中文，使用encodeURI编码，我们在jquery的ready中去做这件事：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.need_change&quot;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>          <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">,</span> <span class="nb">encodeURI</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">)));</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;服务器端action中，需要进行转码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">if</span> <span class="o">(</span><span class="s">&quot;ISO-8859-1&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">StringUtil</span><span class="o">.</span><span class="na">getEncoding</span><span class="o">(</span><span class="n">name</span><span class="o">)))</span> <span class="o">{</span>
</span><span class='line'>         <span class="n">name</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">&quot;ISO-8859-1&quot;</span><span class="o">),</span><span class="s">&quot;UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;注：StringUtil.getEncoding这个方法将返回字符串的编码集格式，代码是网上copy的，现贴出该方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 判断字符串的编码</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @param str</span>
</span><span class='line'><span class="cm">     * @return</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">getEncoding</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">encode</span> <span class="o">=</span> <span class="s">&quot;GB2312&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="n">encode</span><span class="o">),</span> <span class="n">encode</span><span class="o">)))</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">encode</span><span class="o">;</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">s</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">exception</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">encode</span> <span class="o">=</span> <span class="s">&quot;ISO-8859-1&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="n">encode</span><span class="o">),</span> <span class="n">encode</span><span class="o">)))</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">s1</span> <span class="o">=</span> <span class="n">encode</span><span class="o">;</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">s1</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">exception1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">encode</span> <span class="o">=</span> <span class="s">&quot;UTF-8&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="n">encode</span><span class="o">),</span> <span class="n">encode</span><span class="o">)))</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">s2</span> <span class="o">=</span> <span class="n">encode</span><span class="o">;</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">s2</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">exception2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">encode</span> <span class="o">=</span> <span class="s">&quot;GBK&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="n">encode</span><span class="o">),</span> <span class="n">encode</span><span class="o">)))</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">s3</span> <span class="o">=</span> <span class="n">encode</span><span class="o">;</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">s3</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">exception3</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[excel文件导出代码]]></title>
    <link href="http://yoursite.com/blog/2012/10/30/poi-excel/"/>
    <updated>2012-10-30T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/10/30/poi-excel</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;经常有人问excle文件导出代码实现，现贴出示例代码(struts2,poi)，想看的童鞋请参考：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="c1">//业务调用，得到要导出的数据</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Page</span> <span class="n">newsPage</span> <span class="o">=</span> <span class="n">ns</span><span class="o">.</span><span class="na">getNewsByPage</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="s">&quot;readCount&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">List</span><span class="o">&lt;</span><span class="n">News</span><span class="o">&gt;</span> <span class="n">news</span> <span class="o">=</span> <span class="n">newsPage</span><span class="o">.</span><span class="na">getData</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//内存中生成excle文件</span>
</span><span class='line'>        <span class="n">HSSFWorkbook</span> <span class="n">wb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HSSFWorkbook</span><span class="o">();</span>
</span><span class='line'>        <span class="n">HSSFSheet</span> <span class="n">sheet</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createSheet</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>       <span class="c1">//生成标题，当然，你可以设定格式</span>
</span><span class='line'>        <span class="n">HSSFRow</span> <span class="n">header</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">createRow</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>        <span class="n">header</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">setCellValue</span><span class="o">(</span><span class="s">&quot;新闻id&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">header</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="na">setCellValue</span><span class="o">(</span><span class="s">&quot;新闻标题&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">header</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">2</span><span class="o">).</span><span class="na">setCellValue</span><span class="o">(</span><span class="s">&quot;新闻内容&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//生成数据行</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">news</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">News</span> <span class="n">temp_news</span> <span class="o">=</span> <span class="n">news</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">HSSFRow</span> <span class="n">row</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">createRow</span><span class="o">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">row</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">temp_news</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
</span><span class='line'>            <span class="n">row</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">temp_news</span><span class="o">.</span><span class="na">getTitle</span><span class="o">());</span>
</span><span class='line'>            <span class="n">row</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">2</span><span class="o">).</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">temp_news</span><span class="o">.</span><span class="na">getContent</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="c1">//得到响应</span>
</span><span class='line'>        <span class="n">HttpServletResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">ServletActionContext</span><span class="o">.</span><span class="na">getResponse</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Content-Disposition&quot;</span><span class="o">,</span><span class="s">&quot;attachment; filename=&quot;</span>
</span><span class='line'>                <span class="o">+</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">&quot;我的新闻列表.xls&quot;</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">&quot;GB2312&quot;</span><span class="o">),</span><span class="s">&quot;iso-8859-1&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">OutputStream</span> <span class="n">os</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">//发回响应</span>
</span><span class='line'>        <span class="n">wb</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">os</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用jackson对json的操作]]></title>
    <link href="http://yoursite.com/blog/2012/10/24/jaskson-json/"/>
    <updated>2012-10-24T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/10/24/jaskson-json</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;jackson是一个开源的处理json的工具包，spring mvc中的json类型响应就是用这个东西实现的，性能比较优异。我以前最早的项目用的是json-lib，后来因效率问题改为gson，现在看来可以换成jackson了。</p>

<p>&emsp;&emsp;下面给大家讲讲jackson的使用：</p>

<p>&emsp;&emsp;<strong>一、简单对象转为json</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">ObjectMapper</span> <span class="n">om</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectMapper</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">StringWriter</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringWriter</span><span class="o">();</span>
</span><span class='line'><span class="n">om</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="n">result</span><span class="o">,</span> <span class="err">【这个参数是你要转换的东西，对象或集合都是可以的】</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;当然，如果你不想用StringWriter的话，你可以直接用om.writeValueAsString(obj)直接输出字符串。</p>

<p>&emsp;&emsp;<strong>二、日期的处理</strong></p>

<p>&emsp;&emsp;默认情况下，jackson会把日期处理为毫秒，如果你想处理成字符串，可以：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">ObjectMapper</span> <span class="n">om</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectMapper</span><span class="o">();</span>
</span><span class='line'><span class="n">om</span><span class="o">.</span><span class="na">setDateFormat</span><span class="o">(</span><span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd&quot;</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;<strong>三、排除不想要的属性</strong></p>

<p>&emsp;&emsp;这个主要是用来解决对象间循环关联的情况的，使用如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">SimpleBeanPropertyFilter</span> <span class="n">filter</span> <span class="o">=</span> <span class="n">SimpleBeanPropertyFilter</span><span class="o">.</span><span class="na">serializeAllExcept</span><span class="o">(</span><span class="s">&quot;不要的属性名&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">SimpleFilterProvider</span> <span class="n">fp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleFilterProvider</span><span class="o">();</span>
</span><span class='line'><span class="n">fp</span><span class="o">.</span><span class="na">addFilter</span><span class="o">(</span><span class="s">&quot;user_json&quot;</span><span class="o">,</span> <span class="n">filter</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">om</span><span class="o">.</span><span class="na">setFilters</span><span class="o">(</span><span class="n">fp</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;当然，这个设置将对全局的ObjectMapper都起作用，我们也可以使用下面这种：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">om</span><span class="o">.</span><span class="na">writer</span><span class="o">(</span><span class="n">fp</span><span class="o">).</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">obj</span><span class="o">)</span><span class="err">；</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;每次使用前再设置，这个也是全局作用域。</p>

<p>&emsp;&emsp;如果仅仅想要自己需要的属性，如下写法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">SimpleBeanPropertyFilter</span><span class="o">.</span><span class="na">filterOutAllExcept</span><span class="o">(</span><span class="s">&quot;id&quot;</span><span class="o">,</span> <span class="s">&quot;title&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;注意：addFilter的第一个参数，要用注解指写，比如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@JsonFilter</span><span class="o">(</span><span class="s">&quot;user_json&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">User</span> <span class="o">{}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;如果持久层使用的是hibernate，需要将hibernateLazyInitializer属性也排除。</p>

<p>&emsp;&emsp;<strong>四、反序列化</strong></p>

<p>&emsp;&emsp;反序列化用的没有序列化多。我们先看普通对象的处理：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">User</span> <span class="n">u</span> <span class="o">=</span> <span class="n">om</span><span class="o">.</span><span class="na">readValue</span><span class="o">(</span><span class="n">json_str</span><span class="o">,</span> <span class="n">User</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;集合对象，处理方式不同，请看list的处理方式：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">List</span><span class="o">&lt;</span><span class="n">User</span><span class="o">&gt;</span> <span class="n">uss</span> <span class="o">=</span> <span class="n">om</span><span class="o">.</span><span class="na">readValue</span><span class="o">(</span><span class="n">json_str</span><span class="o">,</span> <span class="k">new</span> <span class="n">TypeReference</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">User</span><span class="o">&gt;&gt;()</span> <span class="o">{});</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;<strong>五、图片等二进制类型的json转换</strong></p>

<p>&emsp;&emsp;这个不用担心，jackson可直接完成转换，前提是：</p>

<p>&emsp;&emsp;你要用byte[]类型表示二进制数据，比如：private byte[] photo ;</p>

<p>&emsp;&emsp;当然，上面的的代码都是在线手工操作下的示例，jackson也是支持注解的，比如：排除属性，日期格式的定义等，都可以用注解的方式去实现，请大家自己so一下吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PermGen space溢出解决方法]]></title>
    <link href="http://yoursite.com/blog/2012/09/21/jvm-error/"/>
    <updated>2012-09-21T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/09/21/jvm-error</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;tomcat在运行几天后，会出现PermGen space溢出错误而无法继续处理请求，解决方法是调整PermGen区域大小：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>JAVA_OPTS="-server -XX:PermSize=64M -XX:MaxPermSize=128m"</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;还有一种说法是使用Jrockit代替sun实现的jdk，但我没有试验。</p>

<p>&emsp;&emsp;下面来看看对PermGen space的解释：</p>

<p>&emsp;&emsp;PermGen space的全称是Permanent Generation space，是指内存的永久保存区域，这个内存区域用于：</p>

<p>&emsp;&emsp;（1）这一部分用于存放Class和Meta的信息，Class在被 Load的时候被放入PermGen space区域，它和和存放Instance的Heap区域不同。</p>

<p>&emsp;&emsp;（2） GC(Garbage Collection)不会在主程序运行期对PermGen space进行清理，所以如果你的APP会LOAD很多CLASS的话,就很可能出现PermGen space错误。</p>

<p>&emsp;&emsp;这种错误常见在web服务器对JSP进行pre compile的时候。</p>

<p>&emsp;&emsp;如果你的WEB APP下都用了大量的第三方jar，其大小超过了jvm默认的大小(4M)那么就会产生此错误信息了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nginx,tomcat集群问题]]></title>
    <link href="http://yoursite.com/blog/2012/09/20/nginx/"/>
    <updated>2012-09-20T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/09/20/nginx</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;如果你配置了nginx,tomcat集群，请大家要注意，当更新了新的软件，重新启动系统时，最好的做法是先停止nginx，再去重新运行每一个tomcat服务器！</p>

<p>&emsp;&emsp;否则，你可能很难道找到访问缓慢，时而中断的情况。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cglib动态代理演示代码]]></title>
    <link href="http://yoursite.com/blog/2012/08/21/cglib/"/>
    <updated>2012-08-21T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/08/21/cglib</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;直接看代码。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * @param args</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//        HashMap propertyMap = new HashMap();  </span>
</span><span class='line'><span class="c1">//        propertyMap.put(&quot;MAX_COUNT&quot;, Class.forName(&quot;java.lang.String&quot;));</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="n">Enhancer</span> <span class="n">eh</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Enhancer</span><span class="o">();</span>
</span><span class='line'>        <span class="n">eh</span><span class="o">.</span><span class="na">setSuperclass</span><span class="o">(</span><span class="n">MyService</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">//eh.setCallback(new MyInterceptor());</span>
</span><span class='line'>        <span class="n">eh</span><span class="o">.</span><span class="na">setCallbacks</span><span class="o">(</span><span class="k">new</span> <span class="n">Callback</span><span class="o">[]{</span><span class="k">new</span> <span class="n">MyInterceptor</span><span class="o">(),</span> <span class="n">NoOp</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">});</span>
</span><span class='line'>        <span class="n">eh</span><span class="o">.</span><span class="na">setCallbackFilter</span><span class="o">(</span><span class="k">new</span> <span class="n">MyCallbackFilter</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">eh</span><span class="o">.</span><span class="na">setInterfaces</span><span class="o">(</span><span class="k">new</span> <span class="n">Class</span><span class="o">[]{</span><span class="n">Set</span><span class="o">.</span><span class="na">class</span><span class="o">});</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="n">MyService</span> <span class="n">ms</span> <span class="o">=</span> <span class="o">(</span><span class="n">MyService</span><span class="o">)</span><span class="n">eh</span><span class="o">.</span><span class="na">create</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="n">ms</span><span class="o">.</span><span class="na">addUser</span><span class="o">();</span>
</span><span class='line'>        <span class="n">ms</span><span class="o">.</span><span class="na">queryUser</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Set</span> <span class="n">s</span> <span class="o">=</span> <span class="o">(</span><span class="n">Set</span><span class="o">)</span><span class="n">ms</span><span class="o">;</span>
</span><span class='line'><span class="c1">//        System.out.println(s.getClass());</span>
</span><span class='line'><span class="c1">//        s.size();</span>
</span><span class='line'><span class="c1">//        System.out.println(s.size());</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//System.out.println(ms.getClass());</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">MyInterceptor</span> <span class="kd">implements</span> <span class="n">MethodInterceptor</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Object</span> <span class="nf">intercept</span><span class="o">(</span><span class="n">Object</span> <span class="n">object</span><span class="o">,</span> <span class="n">Method</span> <span class="n">method</span><span class="o">,</span> <span class="n">Object</span><span class="o">[]</span> <span class="n">args</span><span class="o">,</span>
</span><span class='line'>            <span class="n">MethodProxy</span> <span class="n">methodProxy</span> <span class="o">)</span> <span class="kd">throws</span> <span class="n">Throwable</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;before runing..&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Object</span> <span class="n">result</span> <span class="o">=</span> <span class="n">methodProxy</span><span class="o">.</span><span class="na">invokeSuper</span><span class="o">(</span><span class="n">object</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;end runing....&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">MyCallbackFilter</span> <span class="kd">implements</span> <span class="n">CallbackFilter</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">accept</span><span class="o">(</span><span class="n">Method</span> <span class="n">method</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="s">&quot;queryUser&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">method</span><span class="o">.</span><span class="na">getName</span><span class="o">()))</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">//第二个Interceptor，在此例中将不执行操作</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[习作- 眼前突然闪现的风景]]></title>
    <link href="http://yoursite.com/blog/2012/08/10/art4/"/>
    <updated>2012-08-10T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/08/10/art4</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;水粉作品，《眼前突然闪现的风景》。</p>

<p>&emsp;&emsp;也许，一个人坐在火车上，静静地看着窗外的一切，突然，画面中的一切扑面而来，内心充满了喜悦、惊奇&hellip;&hellip;</p>

<p><img src="http://yoursite.com/uploads/2012/08/art4.jpg" title="突然闪现的风景-纸本设色" alt="" /></p>

<p>&emsp;&emsp;阳光穿过树梢，瞬间，让人张不开眼睛，列车没有停下，仍旧漠然向前&hellip;&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[临摹习作-星空]]></title>
    <link href="http://yoursite.com/blog/2012/08/09/night-sky/"/>
    <updated>2012-08-09T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/08/09/night-sky</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;此画为临摹印象派大帅梵高的作品《星空》，也是我非常喜欢的一幅作品，作品是抽象的，但极具形式美感，画中的小村庄，浸润在洁白的月光，教堂、房屋&hellip;..，一切都很安静，而左边高大的树木似乎又有风在吹动，一切都是那么的美好。</p>

<p>&emsp;&emsp;而这又让我想起了我人童年，我和我的兄弟，我们曾经一起躺在收获的庄家上，看着深邃的夜空，小河沟边上有高大的白杨树，时而微风吹起，树叶沙沙作响，财众多小平房中闪烁的点点油灯，一切都是那么的熟悉&hellip;&hellip;</p>

<p>&emsp;&emsp;我在google art中，找到了这张画的原作，下载了很多张局部放大图，在photoshop中拼接出了非常大的一张原图，这样，我就可以细致观察到原作的色彩及笔触`。</p>

<p>&emsp;&emsp;临摹是一种非常有效果的学习方法，我这一张临摹习作，用的是水粉，因为感觉比较快捷。</p>

<p><img src="http://yoursite.com/uploads/2012/08/art3.jpg" title="梵高星空-纸本设色" alt="" /></p>

<p>&emsp;&emsp;某天抽点时间，用油画再将《星空》再临摹一遍，再次体验那种感受。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[良好的编码习惯]]></title>
    <link href="http://yoursite.com/blog/2012/08/08/good-hb/"/>
    <updated>2012-08-08T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/08/08/good-hb</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;经常有人在修改一个对象时，出现hibernate的：a different object with the same identifier value was already associated with the session: [xx.xxx.xxxt#id]错误，请看下面的保存代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Student</span> <span class="n">s1</span> <span class="o">=</span> <span class="o">(</span><span class="n">Student</span><span class="o">)</span><span class="n">session</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Student</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">Student</span> <span class="n">s2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Student</span><span class="o">();</span>
</span><span class='line'><span class="n">s2</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
</span><span class='line'><span class="n">s2</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;xxx&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">session</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="n">s2</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;这段代码会出现上面的错误，这就是对修改操作理解不到位造成的，你可以想想，修改一定是改一个已经存在的对象，new一个对象再去update就违背的这一原则，解决办法：</p>

<p>&emsp;&emsp;（1）查出要改的对象，再赋值，然后update。</p>

<p>&emsp;&emsp;（2）直接使用merge保存，不会出错。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[习作-梦境]]></title>
    <link href="http://yoursite.com/blog/2012/08/02/art2/"/>
    <updated>2012-08-02T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/08/02/art2</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;每个人都会做梦，梦境是那么的美好，但醒来后，又是那么的现实，那么的残酷。</p>

<p>&emsp;&emsp;此水粉习作，描述了一种冷色调的梦境感觉，让人那么的着迷，而又是那么的平静，那么的虚幻&hellip;&hellip;</p>

<p><img src="http://yoursite.com/uploads/2012/08/art2.jpg" title="梦境-纸本设色" alt="" /></p>

<p>&emsp;&emsp;梦中，我似乎不想醒来，顺着河水漂向远方&hellip;&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[习作-成都锦里]]></title>
    <link href="http://yoursite.com/blog/2012/08/01/art1/"/>
    <updated>2012-08-01T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/08/01/art1</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;锦里，成都非常出名的一条街道，也是外地游客来成都必玩之地。</p>

<p>&emsp;&emsp;老街、宅邸、府第、民居、客栈、商铺座落分布，青瓦错落有致，青石板路蜿蜒前行，让人恍若时空倒流，在古色中流连忘返。</p>

<p>&emsp;&emsp;高挂着丝绸灯笼的栈，似乎在静静地等等着什么&hellip;&hellip;</p>

<p>&emsp;&emsp;此画为纸本水粉习作，意在表现锦里的古朴建筑。</p>

<p>&emsp;&emsp;泛黄的古代人物，与身着艳丽时常服装的现代人，形成时空上的冲撞，他们似乎要交流，但又无可奈何。</p>

<p><img src="http://yoursite.com/uploads/2012/08/art1.jpg" title="锦里-纸本设色" alt="" /></p>

<p>&emsp;&emsp;我们似乎都生活在一个奇妙幻境之中，此刻，周围人群的都异常安静，听不到任何喧闹之声，每个人心中，静静地守候着那一方净土&hellip;&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用timer，实现指定秒数后运行另一任务]]></title>
    <link href="http://yoursite.com/blog/2012/07/29/timer/"/>
    <updated>2012-07-29T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/07/29/timer</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;请看代码就是，不多言。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">UnsupportedEncodingException</span><span class="o">,</span> <span class="n">InterruptedException</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">final</span> <span class="n">Timer</span> <span class="n">timer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Timer</span><span class="o">();</span>
</span><span class='line'>        <span class="n">timer</span><span class="o">.</span><span class="na">schedule</span><span class="o">(</span><span class="k">new</span> <span class="n">TimerTask</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;runing .....&quot;</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">timer</span><span class="o">.</span><span class="na">cancel</span><span class="o">();</span>
</span><span class='line'>                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">2000</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;over .....&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">Logger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">TempTest</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">log</span><span class="o">(</span><span class="n">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">},</span> <span class="mi">1</span> <span class="o">*</span> <span class="mi">2000</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;main runing .....&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3000</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;main overing .....&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[让jsoup支持https,接受任意来源证书]]></title>
    <link href="http://yoursite.com/blog/2012/07/14/jsoup/"/>
    <updated>2012-07-14T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/07/14/jsoup</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;需要修改jsoup源码。</p>

<p>&emsp;&emsp;首先添加单例类：</p>

<figure class='code'><figcaption><span>SSLContextSingleton.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 得到SSLContext单例</span>
</span><span class='line'><span class="cm"> * @author Administrator</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SSLContextSingleton</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">SSLContextSingleton</span> <span class="n">instance</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SSLContextSingleton</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">SSLContext</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">HostnameVerifier</span> <span class="n">hostnameVerifier</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="nf">SSLContextSingleton</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">context</span> <span class="o">=</span> <span class="n">SSLContext</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;SSL&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="c1">//默认可接受所有https验证</span>
</span><span class='line'>            <span class="n">context</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="k">new</span> <span class="n">TrustManager</span><span class="o">[]{</span>
</span><span class='line'>                        <span class="k">new</span> <span class="nf">X509TrustManager</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">checkClientTrusted</span><span class="o">(</span><span class="n">X509Certificate</span><span class="o">[]</span> <span class="n">xcs</span><span class="o">,</span> <span class="n">String</span> <span class="n">string</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">CertificateException</span> <span class="o">{</span>
</span><span class='line'>                            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">checkServerTrusted</span><span class="o">(</span><span class="n">X509Certificate</span><span class="o">[]</span> <span class="n">xcs</span><span class="o">,</span> <span class="n">String</span> <span class="n">string</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">CertificateException</span> <span class="o">{</span>
</span><span class='line'>                            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                            <span class="kd">public</span> <span class="n">X509Certificate</span><span class="o">[]</span> <span class="nf">getAcceptedIssuers</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                            <span class="o">}</span>
</span><span class='line'>                        <span class="o">}},</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">hostnameVerifier</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HostnameVerifier</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">verify</span><span class="o">(</span><span class="n">String</span> <span class="n">string</span><span class="o">,</span> <span class="n">SSLSession</span> <span class="n">ssls</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">//throw e;</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Error,X509Certificate&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 创建接受所有https的SSLContext</span>
</span><span class='line'><span class="cm">     * @return</span>
</span><span class='line'><span class="cm">     * @throws Exception</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">SSLContext</span> <span class="nf">getSimpleSSLContext</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">context</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">HostnameVerifier</span> <span class="nf">getHostnameVerifier</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">hostnameVerifier</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="n">SSLContextSingleton</span> <span class="nf">getnInstance</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">instance</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>接着修改HttpConnection.java文件中的createConnection部分，添加入下代码：</p>

<figure class='code'><figcaption><span>HttpConnection.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="c1">// set up connection defaults, and details from request</span>
</span><span class='line'>        <span class="kd">private</span> <span class="kd">static</span> <span class="n">HttpURLConnection</span> <span class="nf">createConnection</span><span class="o">(</span><span class="n">Connection</span><span class="o">.</span><span class="na">Request</span> <span class="n">req</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">HttpURLConnection</span> <span class="n">conn</span> <span class="o">=</span> <span class="o">(</span><span class="n">HttpURLConnection</span><span class="o">)</span> <span class="n">req</span><span class="o">.</span><span class="na">url</span><span class="o">().</span><span class="na">openConnection</span><span class="o">();</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">conn</span> <span class="k">instanceof</span> <span class="n">HttpsURLConnection</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">HttpsURLConnection</span> <span class="n">conns</span> <span class="o">=</span> <span class="o">(</span><span class="n">HttpsURLConnection</span><span class="o">)</span> <span class="n">conn</span><span class="o">;</span>
</span><span class='line'>                <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">conns</span><span class="o">.</span><span class="na">setSSLSocketFactory</span><span class="o">(</span><span class="n">SSLContextSingleton</span><span class="o">.</span><span class="na">getnInstance</span><span class="o">().</span><span class="na">getSimpleSSLContext</span><span class="o">().</span><span class="na">getSocketFactory</span><span class="o">());</span>
</span><span class='line'>                    <span class="n">conns</span><span class="o">.</span><span class="na">setHostnameVerifier</span><span class="o">(</span><span class="n">SSLContextSingleton</span><span class="o">.</span><span class="na">getnInstance</span><span class="o">().</span><span class="na">getHostnameVerifier</span><span class="o">());</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">Logger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">HttpConnection</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">log</span><span class="o">(</span><span class="n">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="n">conn</span> <span class="o">=</span> <span class="n">conns</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&emsp;&emsp;如果要实现jsoup接受指定网站的https访问，需要导入证书，网上文章很多，大家搜搜即可做出来。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一种报表实现设计方案]]></title>
    <link href="http://yoursite.com/blog/2011/09/15/report/"/>
    <updated>2011-09-15T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2011/09/15/report</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;报表是每一个MIS系统中的必有功能，我们可以通过一个软件产品中查询统计、报表功能是否丰富来评判一个软件产品的成熟度。报表数据对于客户的日常工作、决策有非常重要的作用，报表也是我们程序员必定要遇到的问题。</p>

<p>&emsp;&emsp;中国式的报表样式复杂，实现起来难度也比较大，而对于系统设计者来说，客户的某些特殊报表可能会影响到我们的系统设计（说具体点就是表结构、加余字段等方面）。</p>

<p>&emsp;&emsp;请看下面的这张报表，这张表的特点是表头、数据行全部是动态生成。表头是一个嵌套结构，由树状考评类别组成（动态生成），而第一列的单位也由参与本考评方案的单位得分生成，每一个类别的得分，是由该类别下所有的考评项最终得分累积得到（当然，上面的是我描述的一个简化流程，具体业务打分过程比这个要复杂）。</p>

<p><img src="http://yoursite.com/uploads/2011/09/1.jpg" title="系统报表样式一" alt="" /></p>

<p>&emsp;&emsp;上面这种类型的报表，相信很多人都碰到过，如何快捷地实现它呢？最常用的办法就是拼装出符合样式要求的html表格，比如说表头的生成，我们先调用业务方法，生成符合表头的数据结构（自关联的树状结构），使用页面语言（如JSTL，EL）生成出来，最终显示给用户，但问题在于每一行数据体要和表头上的每一列对应起来的代码实现比较复杂，这个过程相当考究一个程序员的逻辑思维能力，特别是跨行、跨列、以及行、列数据对应问题。</p>

<p>&emsp;&emsp;上面我所描述的实现方案是可行的，很多人也是这么在做，但存在的问题也是非常明显：报表的实现代码不好维护，页面上的展示更是复杂，如果要实现另一张样式差不多的报表，我们又得copy头一张报表的代码，进行相应的调整、修改，很多人也是这么在做。</p>

<p>&emsp;&emsp;一种改进的设计是以面向对象的思想来进行封装，比如下面的这张类图，就是上面这种类型报表的一种设计方案：我们将报表拆分成了表头与表行，表头由表头项组成，表行由数据单元格组成，我们把这些抽象成接口，并提供HTML版本的实现类。我们抽取出来的表格、表头、行对象都具有生成自身html代码的功能，并且还有很多辅助方法，这使得最终的代码很容易理解。</p>

<p><img src="http://yoursite.com/uploads/2011/09/2.jpg" title="报表类图设计" alt="" /></p>

<p>&emsp;&emsp;我们接下来的工作就是在service中，查询相应的业务数据来生成这个Report对象，你会发现生成Report的代码非常清晰、好理解。而façade中，页面中的实现就变得非常的简单，只需要调用service中的方法得到Report对象，之后通过generateReportCode()方法就得到了页面要显示的html代码。</p>

<p>&emsp;&emsp;分析上面的类图我们可以发现，报表对象就是一个聚合根（当然也是值对象），而下面的每一个子对象负责自身显示代码的生成，通过service，业务逻辑也得到了很好封装，这就是面向对象带来的好处。只不过，我们要设计很多的小对象来承担各自的职责。这让我想到delphi，pb中报表的超强设计能力，也不禁有些怀念那个年代。</p>

<p>&emsp;&emsp;当然，不同的报表风格会有不同的设计对象设计方案，不同的报表框加也会有不同的设计方案（比如：jFreeChart，jsperReport这种服务器端的报表生成框架，Highcharts、fusioncharts这类客户端报表框架户端的报表生成框架在设计上都会有所不同）。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[谈谈富血模型]]></title>
    <link href="http://yoursite.com/blog/2011/08/31/domain/"/>
    <updated>2011-08-31T15:18:00+08:00</updated>
    <id>http://yoursite.com/blog/2011/08/31/domain</id>
    <content type="html"><![CDATA[<p>&emsp;&emsp;省质监局考评系统二期工程已经启动，当前处于编码实现阶段，预计在一个半月内完成核心功能。</p>

<p>&emsp;&emsp;相对一期项目比较而言，二期业务需求比一期项目要复杂，因此，在概要设计阶段我就决定按照领域模型方式来实现代码。本文将对富血领域模型的设计、实现谈谈我个人的理解与看法，实际开发中出现的问题及经验，我会在二期工程结束后进行总结。</p>

<p>&emsp;&emsp;综观当前软件开发的潮流，失血模型仍是主流，至少90%以上的公司都采用失血模型。有句话叫“存在即是合理”，采用失血模型进行项目开发，有下面的一些好处：</p>

<p>&emsp;&emsp;1、项目的设计要求大大降低，只要找出实体对象就可以了（更有甚者直接将表结构拿来当对象用，对象中充斥着很多int型外键，这个有点太极端了）；</p>

<p>&emsp;&emsp;2、项目按照service，domain value object，dao分层，出service接口中的操作方法可以依照界面原型直接映射得到，设计变得很简单（更有甚者不进行这块的设计，由程序员在实现时自行添加，这种方式也未尝不可）；</p>

<p>&emsp;&emsp;3、 代码实现人员容易理解，上面提到的分层方式已经被大家所熟悉。新员工入职后，只需要讲明白ER模型、表结构，再结合界面、需求文档就可以立即投入开发，培训投入少，上手很快。</p>

<p>&emsp;&emsp;失血模型可以减少项目在设计阶段所花费的时间，降低开发难度及风险，缩短开发周期，失血模型似乎有很多优点，被业界广泛使用也不足为奇了。</p>

<p>&emsp;&emsp;但是，如果你做过项目的维护，你一定会深刻体会到这种方式带来的苦恼，毕竟一个项目80~90%时间都是在进行后期维护，最吃成本、最耗精力的也是维护。维护期可以把“曾经”的盈利“吃”回去，也可以把一个公司拖死。</p>

<p>&emsp;&emsp;因此，失血模型的缺点会在软件维护期暴露出来，越是业务复杂的项目越明显，其根本在于业务逻辑的封装上，主要有下面几点，看你是否有同感：</p>

<p>&emsp;&emsp;1、  没有一个更好的业务逻辑封装地点。业务可以封装到service中，也可以在controller中实现部分业务逻辑（如果项目是按模块分配给程序员实现，还没法约束程序员把业务逻辑代码写在什么地方）。业务逻辑“散落”在各个分层中，存在于代码中的各个脚落，自然是不好维护了。</p>

<p>&emsp;&emsp;2、  业务逻辑是采用面向过程的方式来实现。面向过程方式实现的程序代码不利于阅读和理解（当然可以通过重构出更小的方法缓解，但这不能从根本上解决问题），自然是代码后期不好维护了。</p>

<p>&emsp;&emsp;业务逻辑的面向过程化实现、业务职责不在相应的领域对象中，而软件在维护期又要反复阅读以前的代码以添加、修改功能，代码的可读性、可理解性不高，封装度不也不高，维护会变得非常的困难了。我曾经经过过一些这样的项目，后期的需求修改、功能添加，我只能硬着头皮理解前人的代码，在copy以前代码的基础上修改，吃尽了苦头，用“每天都在救火”来形容非常合适，我也在不断的思考：是否有一种更好的解决方案？</p>

<p>&emsp;&emsp;2004年前后，我在jdon上闲逛，看到“板桥里人”极力推荐的《领域驱动设计.软件核心复杂性应对之道》（简称DDD）一书，当时网上只有英文版本，迫不及待地download下来后读了几个章节，由于理论性太强，当时无法理解书中的内容。后来我又买了中文版的书，还是没能悟出更多的东西，这本书扔在角落里两年，最后将该书给了刘宁。</p>

<p>&emsp;&emsp;近两年来，我静下心来梳理以前的项目经验，使我的技术得到了很好的沉淀，再次翻开DDD电子版本，这次阅读的体会已经截然不同，很多地方深有同感。后来看了老大强力推荐的《pojo in action》一书，我的疑问都得到了解决，有种“豁然开朗”的感觉，也坚定了我以前的一些想法：领域驱动方式确实是一种非常好的项目开发方式（注：我现在还看到一些初学都跟风看《DDD》，《pojo in action》，我敢断言，收获甚微），业务逻辑写在领域对象中是最好、最自然的地方。</p>

<p>&emsp;&emsp;我画了一个简单的示意图，供大家参考：</p>

<p><img src="http://yoursite.com/uploads/2011/08/1.jpg" title="富血模型实现示意图" alt="" /></p>

<p>&emsp;&emsp;当然，使用DDD富血模型方式开发，会面临一些挑战，我们不可回避下面的一些问题，这许从失血、贫血模型的转给转型，这些问题会给你带来的不适应感：</p>

<p>&emsp;&emsp;1、  按DDD开发，首先是要根据对客户的需求、业务的了解，提炼并不断修正领域对象。对于每一个对象的取名，都要反复斟酌，努力做到和业务保持一致，并且通俗易懂（特别是在详细设计阶段翻译成英文时更是要注意，多查询英汉字典，选择最合适的翻译，当然，属性的取名也是一样）。</p>

<p>&emsp;&emsp;2、  根据对业务的理解，正确分配领域对象职责。每个对象做自己分内的工作，有些行为无法明确地分配到对象中时，就建立服务(service)对象，这点是和失血模型的本质区别，这里的service类不是失血模型中的service接口哦，大家要注意。</p>

<p>&emsp;&emsp;3、  仓储对象是用来分担领域对象的持久化职责的，是根据面向对象职责单一原则产生。仓储对象就是DAO对象，如果使用用通用DAO的话，会省去仓储设计的过程（但这样会在领域逻辑实现代码中暴露SQL相关的东西）。</p>

<p>&emsp;&emsp;4、  富血模型中事务边界的确定比较麻烦，我们引入了façade外观，调用者（比如：controller或远程客户）一律通过façade门面完成业务调用，事务边界就在façade中控制。Façade在这里有两个非常重要的作用：</p>

<p>&emsp;&emsp;一是事务边界就是这里，具体代码实现时通过spring aop管理事务，二是处理领域对象与持久层脱钩。如果领域对象不与持久层脱钩，调用者得到的是带有行为的对象，可能会误调用了里面的行为，脱钩后就不存在这个问题，因为调用行为已经无法持久化到数据库中（这似乎和我们在失血模型中广泛使用的openSessionInView有冲突哈）。</p>

<p>&emsp;&emsp;6、领域逻辑实现过程中需要使用仓储对象，因为我们使用了通用dao，所以可以声明一个领域对象超类，其中包含通用dao对象，通过spring的ApplicationContextAware接口完成注入，这样，无论是从数据库中实例化出来的对象，还是程序员new的领域对象，都可以访问仓储对象（如果是每个领域实体对象都有自己的仓储对象，则需要在每一个领域方法中传入仓储对象，设计起来有些麻烦，POJO In Action中就是采用的这种做法）。</p>

<p>&emsp;&emsp;7、想办法简化对象之间的关系，对象关系越简单越有利于系统的理解和实现，可以通过约束和抽取领域service方法来简化一对多、多对多关系。</p>

<p>&emsp;&emsp;8、用聚合根减少系统的复杂性，将领域对象划分到合适的逻辑包中，进一步增强系统的表达力，因些，在包的结构划分上，也和贫血模型有所不同，它不再是贫血模型中的service,vo,dao这样的扁平结构。下面是质监局二期中核心领域对象部分设计图，每个对象都有自己的行为职责，并建立了良好的包结构：</p>

<p><img src="http://yoursite.com/uploads/2011/08/2.jpg" title="质监局二期项目核心域对象分包图" alt="" /></p>

<p>&emsp;&emsp;9、DDD对设计人员和开发人员都有较高要求，如果设计人员没有理解到需求的核心、本质，将很难做出好的设计方案；如果开发人员没有理解领域对象，也无法进行开发。</p>

<p>&emsp;&emsp;DDD的设计与开发远远不止上面我提到的这些，并且这一块的水很“深”，我们只有通过在不同的项目中实践，把理论恰当地应用在合适的项目当中，切实为项目带来好处，这个是我们追求的终极目标。</p>

<p>&emsp;&emsp;“会道者一缕发丝牵大象，盲修者千钧铁棒打苍蝇”，应对软件核心复杂性之“道”，DDD是不二的选择。</p>
]]></content>
  </entry>
  
</feed>
